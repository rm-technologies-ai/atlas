Project,project_id,issue_iid,issue_id,title,state,author,assignees,labels,milestone,created_at,updated_at,due_date,weight,confidential,web_url,full_text
"atlas-datascience/lion/local-environment","70509031","1","168642646","Setup local development repository","closed","szahniy","szahniy","","","2025-06-09T13:48:40.936Z","2025-07-16T20:55:46.811Z","","","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/1","ISSUE TITLE: Setup local development repository STATE: closed AUTHOR: szahniy CREATED: 2025-06-09T13:48:40.936Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/example-datasets","70542589","1","168642677","Setup Example Datasets","closed","szahniy","szahniy","","","2025-06-09T13:49:34.438Z","2025-06-17T13:27:00.979Z","","","false","https://gitlab.com/atlas-datascience/lion/example-datasets/-/issues/1","ISSUE TITLE: Setup Example Datasets STATE: closed AUTHOR: szahniy CREATED: 2025-06-09T13:49:34.438Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/example-datasets","70542589","2","168643811","Create S3 GeoTIFF Connector (Proof of Concept)","closed","szahniy","rcross3","","","2025-06-09T14:11:25.656Z","2025-06-18T19:39:22.202Z","","","false","https://gitlab.com/atlas-datascience/lion/example-datasets/-/issues/2","ISSUE TITLE: Create S3 GeoTIFF Connector (Proof of Concept) STATE: closed AUTHOR: szahniy CREATED: 2025-06-09T14:11:25.656Z LABELS:  ASSIGNEES: rcross3 DESCRIPTION: Develop a connector that can read GeoTIFF files from S3 buckets (example-datasets-geo-tif folder) and extract both standard metadata and geospatial information including coordinate reference systems, bounding boxes, and other properties.  Use https://github.com/msgis/openmetadata-spatial-connector to understand implementation.  The current extraction method is implemented in https://gitlab.com/ftsg/lion/core/data-in/extract-transform-load/inventory-enhancement/extraction and can be used as an example  Acceptance Criteria:  - Connector can read .tif files from the example-datasets-geo-tif directory - Extract geospatial metadata (CRS, bounds, resolution) - Parse associated .xml metadata files - Create OpenMetadata entities with spatial properties - Store extracted metadata in PostgreSQL with PostGIS fields COMMENTS: None"
"atlas-datascience/lion/example-datasets","70542589","3","168644623","Create Geospatial PDF Connector","closed","szahniy","","","","2025-06-09T14:23:04.451Z","2025-07-08T19:41:31.879Z","","","false","https://gitlab.com/atlas-datascience/lion/example-datasets/-/issues/3","ISSUE TITLE: Create Geospatial PDF Connector STATE: closed AUTHOR: szahniy CREATED: 2025-06-09T14:23:04.451Z LABELS:  ASSIGNEES:  DESCRIPTION: Develop a connector that can process georeferenced PDF files and extract spatial metadata. This connector should handle PDF files with embedded geospatial information and associated XML metadata.  Use https://github.com/msgis/openmetadata-spatial-connector to understand implementation  The current extraction method is implemented in https://gitlab.com/ftsg/lion/core/data-in/extract-transform-load/inventory-enhancement/extraction and can be used as an example  Acceptance Criteria:  - Connector can process .pdf files from example-datasets-geo-pdf directory - Extract geospatial information from georeferenced PDFs - Parse associated XML metadata files - Handle coordinate transformations if needed - Create appropriate OpenMetadata entities COMMENTS: None"
"atlas-datascience/lion/example-datasets","70542589","4","168644670","Create Standard TIFF Connector","closed","szahniy","szahniy","","","2025-06-09T14:24:16.908Z","2025-06-17T13:26:54.799Z","","","false","https://gitlab.com/atlas-datascience/lion/example-datasets/-/issues/4","ISSUE TITLE: Create Standard TIFF Connector STATE: closed AUTHOR: szahniy CREATED: 2025-06-09T14:24:16.908Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: Develop a connector for standard TIFF images that may contain geospatial metadata in EXIF or other embedded formats.  Use https://github.com/msgis/openmetadata-spatial-connector to understand implementation  The current extraction method is implemented in https://gitlab.com/ftsg/lion/core/data-in/extract-transform-load/inventory-enhancement/extraction and can be used as an example  Acceptance Criteria:  - Process .tiff files from example-datasets-tif directory - Extract EXIF and embedded metadata - Parse associated XML files - Identify any spatial components in standard TIFF files - Create OpenMetadata entities COMMENTS: None"
"atlas-datascience/lion/example-datasets","70542589","5","168644784","OpenMetadata Schema Extension for Geospatial Data","closed","szahniy","rprice314","","","2025-06-09T14:26:42.372Z","2025-08-11T16:03:48.631Z","","","false","https://gitlab.com/atlas-datascience/lion/example-datasets/-/issues/5","ISSUE TITLE: OpenMetadata Schema Extension for Geospatial Data STATE: closed AUTHOR: szahniy CREATED: 2025-06-09T14:26:42.372Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: Extend OpenMetadata data model to properly represent geospatial datasets including spatial properties, coordinate reference systems, and bounding boxes.   OpenMetadata Database Schema will be influenced by #2 #3 #4 issues  Acceptance Criteria:  - Define spatial entity types in OpenMetadata - Add fields for bounding boxes, spatial resolution and other missing properties - Ensure compatibility with PostGIS - Create migration scripts for schema updates and apply them to local dev stack - Document the extended data model COMMENTS: None"
"atlas-datascience/lion/example-datasets","70542589","6","168645425","Geospatial Connectors to docker-compose","closed","szahniy","szahniy","","","2025-06-09T14:42:11.613Z","2025-06-17T13:27:06.730Z","","","false","https://gitlab.com/atlas-datascience/lion/example-datasets/-/issues/6","ISSUE TITLE: Geospatial Connectors to docker-compose STATE: closed AUTHOR: szahniy CREATED: 2025-06-09T14:42:11.613Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: Update the existing docker-compose.yml and local development scripts to include the new geospatial connectors and ensure they can be easily run and tested.  Acceptance Criteria:  - Update docker-compose.yml to include connector services - Add environment variables for connector configuration - Create scripts to run sample ingestion processes - Update documentation in local-environment README - Ensure example datasets are properly mounted/accessible COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","2","169052447","Create new Repository for EDGE Connector","closed","szahniy","alain.atemnkeng","","","2025-06-17T18:23:12.443Z","2025-06-26T18:12:28.154Z","","","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/2","ISSUE TITLE: Create new Repository for EDGE Connector STATE: closed AUTHOR: szahniy CREATED: 2025-06-17T18:23:12.443Z LABELS:  ASSIGNEES: alain.atemnkeng DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","1","169054766","Create base Lambda Function skeleton","closed","rcross3","rcross3|szahniy","aspect::edge-connector","","2025-06-17T19:38:20.979Z","2025-09-19T14:52:21.094Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/1","ISSUE TITLE: Create base Lambda Function skeleton STATE: closed AUTHOR: rcross3 CREATED: 2025-06-17T19:38:20.979Z LABELS: aspect::edge-connector ASSIGNEES: rcross3, szahniy DESCRIPTION: Create the initial codebase for the Node 22 + TypeScript Edge-Connector Lambda, including  configuring local deployment to LocalStack with our [Local Development Repo](https://gitlab.com/ftsg/lion/local-environment).  **Acceptance Criteria** - Repo skeleton: `src/`, `test/`, `scripts/`, `docs/`. - `README.md` with prerequisites and instruction to run locally. - Connect Git pre-hooks with [Husky](https://typicode.github.io/husky/get-started.html).   - ESLint   - Prettier - Jest for Unit test   - Create placeholder test thats passes. - `npm run build` produces minified bundle with esbuild. - `npm run deploy:local` deploy resources to LocalStack deployed from [Local Development Repo](https://gitlab.com/ftsg/lion/local-environment). COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","2","169054791","S3 Metadata Extractor","closed","rcross3","rcross3","aspect::edge-connector","","2025-06-17T19:39:20.841Z","2025-09-19T14:52:21.934Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/2","ISSUE TITLE: S3 Metadata Extractor STATE: closed AUTHOR: rcross3 CREATED: 2025-06-17T19:39:20.841Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: The edge connector should have an extraction phase that retrieves all S3 related metadata.  You can find details on the S3 metadata model here. https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingMetadata.html  Extractors should be pluggable and chainable. Meaning, they can be dropped in and out of an extraction chain with ease.  Create an extractor that implements the following methods to perform the task of extracting all relevant s3 metadata. Tags, aws-metadata-x, triggering system event ``` interface Extractor<T,V> {     initialize(): Promise<void>;     extract(event: T, out: V): <T,V>     can_extract: (event: T) => boolean; } ```  **Success Criteria**  The extractor should be able to extract all relevant metadata to our schema provided by a s3 notifications event. https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventNotifications.html COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","3","169054839","Raw Geospatial Metadata Extractor","closed","rcross3","rcross3","aspect::edge-connector","","2025-06-17T19:41:24.821Z","2025-09-19T14:52:22.214Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/3","ISSUE TITLE: Raw Geospatial Metadata Extractor STATE: closed AUTHOR: rcross3 CREATED: 2025-06-17T19:41:24.821Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: Extractors should be pluggable and chainable. Meaning, they can be dropped in and out of an extraction chain with ease.  Create an extractor that implements the following methods to perform the task of extracting raw geospatial metadata. ``` interface Extractor<T,V> {     initialize(): Promise<void>;     extract(event: T, out: V): <T,V>     can_extract: (event: T) => boolean; } ```  **Success Criteria** * GDAL dependencies configured up in project * Extracts all raw geospatial data from the GDAL binding calls based on the filetype (raster vs vector) * Populates raw data to our Edge Connector event output schema  Example datasets: https://gitlab.com/ftsg/lion/example-datasets/-/tree/EXAMPLE001-initial-dataset?ref_type=heads  **Out of Scope** Batch processing COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","4","169054876","File Type (MIME/EXIF) extractor","closed","rcross3","","Backlog|aspect::edge-connector","","2025-06-17T19:43:05.092Z","2025-09-19T14:52:22.634Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/4","ISSUE TITLE: File Type (MIME/EXIF) extractor STATE: closed AUTHOR: rcross3 CREATED: 2025-06-17T19:43:05.092Z LABELS: Backlog, aspect::edge-connector ASSIGNEES:  DESCRIPTION:   Description: S3 MIME type metadata is often unreliable or may be missing if not explicitly set by the source system. The edge connector must ensure that each file’s MIME type is accurately populated. Implement logic to identify and record the MIME type and lightweight metadata (file extension, size, encoding hints) for each file ingested, including unknown formats if possible.  Acceptance Criteria:  * MIME type is extracted using `mime-types` or `file-type` package based on file extension or magic bytes. * Metadata includes: `mimeType`, `extension`, `sizeBytes`, `etag`, and optionally encoding. * If MIME cannot be inferred, value is set to `application/octet-stream` with a warning log. * Output JSON schema includes `source.mimeType` and source.extension. * If S3 metadata for Content-Type/MIME type is missing or generic, the edge connector calls the MIME Type Extractor. * MIME Type Extractor reads the file header and determines the actual MIME type. * The extracted MIME type is included in the outgoing metadata payload. * Solution works for common file types (PDF, TIFF, CSV) used in our datasets, please see example-datasets created by Serge. * Unit/integration tests verify fallback logic and correct MIME type assignment. * Unit tests cover CSV, PDF, JSON, and unknown file types.   Technical Requirements:   * If the MIME type is not present or is set to a generic/unknown value, the edge connector should trigger the MIME Type Extractor. * The MIME Type Extractor must review the file header to determine the correct MIME type. * The determined MIME type should be added to the file’s metadata before any downstream processing.  Notes:  * AWS S3 MIME Type Handling:     * AWS S3 Documentation – Working with Object Metadata     * https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingMetadata.html     * AWS S3 – Content-Type and Metadata     * https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingMetadata.html#object-metadata COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","5","169055251","Generate Idempotency Keys for Edge Connector output","closed","rcross3","rcross3","aspect::edge-connector","","2025-06-17T19:58:16.965Z","2025-09-19T14:52:22.921Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/5","ISSUE TITLE: Generate Idempotency Keys for Edge Connector output STATE: closed AUTHOR: rcross3 CREATED: 2025-06-17T19:58:16.965Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: The edge connector should be able to process the same triggering input event multiple times, and the result should be the same as if it was only processed once. (within a reasonable time window) To do this, we need to implement some form of idempotency.   **Success Criteria:**  * Generate an idempotency key based on the incoming event or subset of the event. Think generically, can hash the entire event payload if needed, we want this to work outside of just S3 eventually. * Determine and scaffold (locally) a suitable architecture for persisting idempotency keys. (Suggestions: Redis Cache/DynamoDB) * Build the control flow to check/set idemptotency keys before proceeding with extraction.  * Investigate the use of AWS powertools idemptotency and existing Lion solution and create a detailed follow up story if more work is needed.  Links: Lion Previous IMPL https://docs.powertools.aws.dev/lambda/typescript/latest/features/idempotency/#amazon-dynamodb COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","6","169055330","Exponential back-off and retry mechanism","closed","rcross3","rcross3","aspect::edge-connector","","2025-06-17T20:02:35.364Z","2025-09-19T14:52:23.236Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/6","ISSUE TITLE: Exponential back-off and retry mechanism STATE: closed AUTHOR: rcross3 CREATED: 2025-06-17T20:02:35.364Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: Exponential Back-off and Retry   Description: Implement a back-off and retry mechanism for the edge connector when delivering events to the ingestion gateway. OpenMetaData / LocalStack should automatically handle errors (network timeouts or HTTP > 500 responses) by retrying failed requests. This will help avoid overloading the gateway.  Technical Requirements:  * On failure to send an event, the edge connector should wait for increasing delay (ideally, sequenced) before retrying. * The mechanism could support the following parameters: initial delay, maximum delay, and maximum number of retries. * If the maximum retry limit is reached, failures need to be logged within the logger. * The back-off algorithm should use full jitter as recommended by AWS link below to avoid synchronized retries within LockStack.   Acceptance Criteria: * When delivery to the ingestion gateway fails, the edge connector retries with exponential back-off and full jitter. * All back-off and retry parameters are configurable via application properties .env/… * Maximum retry attempts and wait time are enforced. * Success resets the retry mechanism for the next operation. * Unit and integration tests validate exponential back-off logic.  Notes: * AWS Architecture Blog – Exponential Backoff and Jitter * https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/ * AWS SDK Error Retries – Retry Behavior * https://docs.aws.amazon.com/sdkref/latest/guide/feature-retry-behavior.html COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","8","169055411","JWT Auth","opened","rcross3","","Backlog|Parking Lot|aspect::edge-connector","","2025-06-17T20:04:56.289Z","2025-09-19T14:51:55.270Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/8","ISSUE TITLE: JWT Auth STATE: opened AUTHOR: rcross3 CREATED: 2025-06-17T20:04:56.289Z LABELS: Backlog, Parking Lot, aspect::edge-connector ASSIGNEES:  DESCRIPTION: Implement JWT (JSON Web Token) authentication for the Edge Connector when sending data to the Ingestion Gateway. This will ensure secure communication between the Edge Connector and the gateway by using AWS Secrets Manager to store and retrieve authentication credentials.  **Requirements**  **AWS Secrets Manager Integration**  Create a new secret in AWS Secrets Manager to store JWT credentials Secret should include:  **JWT signing key/secret** Issuer information Token expiration configuration Any additional authentication parameters  **Edge Connector Authentication Implementation**  Implement JWT token generation in the Edge Connector Retrieve credentials from AWS Secrets Manager on startup Generate and sign JWT tokens for each request to the Ingestion Gateway Implement token refresh logic before expiration  **Security Considerations**  Use appropriate IAM roles for accessing AWS Secrets Manager Implement secure credential caching with appropriate TTL Ensure tokens have reasonable expiration times (recommended: 1 hour) Include necessary claims in JWT payload (edge_connector_id, timestamp, etc.)  **Technical Details**  Use AWS SDK for Secrets Manager integration Implement retry logic for credential retrieval Handle credential rotation scenarios Log authentication events appropriately (without exposing sensitive data)  **Acceptance Criteria**   AWS Secret created with JWT credentials  Edge Connector successfully retrieves credentials from Secrets Manager  JWT tokens are generated and included in all requests to Ingestion Gateway  Token refresh occurs before expiration  Authentication failures are properly logged and handled  Documentation updated with authentication flow COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","9","169055421","JSON Encryption","opened","rcross3","","Backlog|Parking Lot|aspect::edge-connector","","2025-06-17T20:05:35.895Z","2025-09-19T14:51:50.344Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/9","ISSUE TITLE: JSON Encryption STATE: opened AUTHOR: rcross3 CREATED: 2025-06-17T20:05:35.895Z LABELS: Backlog, Parking Lot, aspect::edge-connector ASSIGNEES:  DESCRIPTION: Description: Add encryption for payloads sent to the Ingestion Gateway. Use AWS KMS or symmetric encryption to encrypt payload contents before sending.   Technical Requirements: * All JSON payloads must be encrypted before being stored or transmitted.  Acceptance Criteria:  * Payload body is encrypted using AES-256 or envelope encryption before transmission. * Encryption key is retrieved securely from AWS Secrets Manager or KMS via `JWT_SECRET_ARN`. * Gateway successfully decrypts the payload and returns 202 on valid inputs. (tag with assignee #10) * Encrypted payload size remains < 50 KB after base64 encoding. * `ENABLE_PAYLOAD_ENCRYPTION` env var toggles encryption; enabled by default. * * Keys are securely  integrated with AWS KMS. * Encryption and decryption processes need to be thoroughly tested for accuracy. * Failures in encryption or decryption should be logged within logger.   Notes: * AWS KMS Developer Guide – What is AWS Key Management Service? * https://docs.aws.amazon.com/kms/latest/developerguide/overview.html * AWS Encryption SDK – Encrypting and decrypting data * Per discussion with Greg, this item can remain in the active backlist. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","10","169055431","Create Mock Ingestion Gateway","closed","rcross3","","aspect::edge-connector","","2025-06-17T20:06:16.814Z","2025-09-19T14:52:23.504Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/10","ISSUE TITLE: Create Mock Ingestion Gateway STATE: closed AUTHOR: rcross3 CREATED: 2025-06-17T20:06:16.814Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: **Overview**  Develop a mock version of the Ingestion Gateway to facilitate local development and testing of the Edge Connector. This mock service will simulate the behavior of the actual Ingestion Gateway, allowing developers to test the Edge Connector functionality without requiring access to the production gateway. Requirements  **Mock Gateway Features**  REST API endpoints that mirror the production Ingestion Gateway JWT authentication validation (using same format as production) Data ingestion endpoints with validation Response simulation (success/error scenarios) Request logging for debugging   **Endpoints to Implement**  POST /api/v1/ingest - Main data ingestion endpoint  GET /api/v1/health - Health check endpoint  POST /api/v1/auth/validate - Token validation endpoint (optional)  Configure appropriate response codes and payloads COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","11","169090050","Edge Connector Basic Metrics","closed","rcross3","","Closed|aspect::edge-connector","","2025-06-18T13:51:51.755Z","2025-09-19T14:52:23.781Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/11","ISSUE TITLE: Edge Connector Basic Metrics STATE: closed AUTHOR: rcross3 CREATED: 2025-06-18T13:51:51.755Z LABELS: Closed, aspect::edge-connector ASSIGNEES:  DESCRIPTION: Create CloudWatch metrics for Lambda; Create dashboard with uptime and error alarms.  **Acceptance Criteria** - Structured JSON logging, suggested to look for [Lambda Powertools](https://github.com/aws-powertools/powertools-lambda-typescript) for this or other alternatives like Watson. - Custom metrics collected:   - edge_events_sent_total (Counter)   - edge_post_latency_ms (Histogram) - CloudWatch Dashboard with:   - send rate   - latency P95   - error count - Alarms:   - HighErrorRate - error > 1% for 5min.   - BufferBacklog - SQS age > 2h. - All CloudWatch log groups, dashboards, alerts deployed by SAM / Terraform / Serverless. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","12","169090234","CI-CD: Quality Checks","closed","rcross3","alain.atemnkeng","aspect::platform","","2025-06-18T13:56:28.407Z","2025-09-22T14:04:25.393Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/12","ISSUE TITLE: CI-CD: Quality Checks STATE: closed AUTHOR: rcross3 CREATED: 2025-06-18T13:56:28.407Z LABELS: aspect::platform ASSIGNEES: alain.atemnkeng DESCRIPTION: Add a GitLab CI workflow that enforces quality gates, static-analysis scans, and deployments to LocalStack and AWS account (May need to create separate ticket for AWS deployment, secrets config, etc).  **Acceptance Criteria** - Workflow stages: `lint` -> `unit-test` -> `coverage ≥ 30%` -> `git-secrets scan` -> `semgrep` -> `LocalStack deploy (SAM/Serverless)`. - Fails the build on any High/Critical vulnerability or secrets hit. - Manual Promote to the development AWS account. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","17","169091527","Define Edge Connector Event JSON Schema v.01","closed","rcross3","rprice314","aspect::edge-connector","","2025-06-18T14:20:10.212Z","2025-09-19T14:52:24.056Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/17","ISSUE TITLE: Define Edge Connector Event JSON Schema v.01 STATE: closed AUTHOR: rcross3 CREATED: 2025-06-18T14:20:10.212Z LABELS: aspect::edge-connector ASSIGNEES: rprice314 DESCRIPTION: Following the good practice of OpenMetadata's data model, let's define a standardized event schema in JSON Schema.   ```JSON # Input: S3 ObjectCreated event {   """"bucket"""": """"client-data"""",   """"key"""": """"imagery/2023/scene1.tif"""",   """"eventTime"""": """"2023-06-17T10:30:00Z"""" } ```  ```JSON # Output: Standardized metadata event {   """"idempotencyKey"""": """"sha256(identifier+timestamp+eventType+contentHash)"""",   """"tenantId"""": """"client-123"""",   """"timestamp"""": """"2023-06-17T10:30:15Z"""",   """"source"""": {     """"type"""": """"S3""""     """"event"""": """"ObjectCreated"""",     """"identifier:"""" """"/client-data/imagery/2023/scene1.tif""""     """"location"""": """"s3://client-data/imagery/2023/scene1.tif"""",     """"size"""": 1048576,     """"checksums"""": {""""md5"""": """"..."""", """"sha256"""": """"...""""},     """"metadata"""": {     }   } } ``` COMMENTS: None"
"atlas-datascience/lion/infrastructure/gitlab-runner-manager-templates","70655583","1","169148445","Review and Validate Runner Manager Project Configuration and Best Practices","closed","alain.atemnkeng","","","","2025-06-19T13:56:14.001Z","2025-08-08T20:25:12.724Z","","","false","https://gitlab.com/atlas-datascience/lion/infrastructure/gitlab-runner-manager-templates/-/issues/1","ISSUE TITLE: Review and Validate Runner Manager Project Configuration and Best Practices STATE: closed AUTHOR: alain.atemnkeng CREATED: 2025-06-19T13:56:14.001Z LABELS:  ASSIGNEES:  DESCRIPTION: We currently have a GitLab runner manager deployed on AWS Fargate that is responsible for provisioning EC2-based runners across multiple AWS accounts. The associated project that defines and manages the runner manager and its provisioning logic needs to be reviewed to ensure everything is functioning as expected.  Objectives: 	•	Review the current implementation of the runner manager project 	•	Confirm that: 	•	All configurations follow GitLab and AWS best practices 	•	The setup properly provisions runners into the correct accounts 	•	Security principles (least privilege, isolation, etc.) have been applied 	•	The code and infrastructure are well-organized and modular 	•	Documentation is complete and up to date  Deliverables: 	•	A summary of findings and any gaps or improvements 	•	Confirmation that the current setup is production-ready 	•	Recommendations (if any) for enhancements or refactoring COMMENTS: None"
"atlas-datascience/lion/example-datasets","70542589","7","169212884","Spike - Investigate Apache Rancher","closed","rprice314","rprice314","","","2025-06-20T22:35:45.928Z","2025-06-30T13:17:10.552Z","","","false","https://gitlab.com/atlas-datascience/lion/example-datasets/-/issues/7","ISSUE TITLE: Spike - Investigate Apache Rancher STATE: closed AUTHOR: rprice314 CREATED: 2025-06-20T22:35:45.928Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: Investigate the usage of apache rancher to implement attribute based access control in OpenSearch. Purpose is to determine if Apache Rancher will meet the abac requirements that are needed to implement ic-ism and other classification frameworks COMMENTS: None"
"atlas-datascience/lion/example-datasets","70542589","8","169212917","Spike - Investigate OPA","closed","rprice314","rprice314","","","2025-06-20T22:37:26.687Z","2025-06-30T13:34:24.305Z","","","false","https://gitlab.com/atlas-datascience/lion/example-datasets/-/issues/8","ISSUE TITLE: Spike - Investigate OPA STATE: closed AUTHOR: rprice314 CREATED: 2025-06-20T22:37:26.687Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: Investigate the usage of OPA to implement attributed based access control in OpenSearch. Purpose is to determine if OPA can be used to implement ic-ism and other classification frameworks in OpenSearch COMMENTS: None"
"atlas-datascience/lion/example-datasets","70542589","9","169213008","Document Schema Extension Strategies","closed","rprice314","rprice314","","","2025-06-20T22:39:57.632Z","2025-06-30T13:27:39.053Z","","","false","https://gitlab.com/atlas-datascience/lion/example-datasets/-/issues/9","ISSUE TITLE: Document Schema Extension Strategies STATE: closed AUTHOR: rprice314 CREATED: 2025-06-20T22:39:57.632Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: Need to document the schema extension strategies that can be used in OpenMetadata and recommend a stragey to the development team. Strategies that will be compared and contrasted are below.  Custom Properties Direct Schema Modification Hybrid Approach COMMENTS: None"
"atlas-datascience/lion/cicd/containers/utility/container-tools","69667755","1","169324068","Create Gitlab CICD pipeline template file","closed","freedomgb","freedomgb","","","2025-06-23T19:37:26.641Z","2025-08-29T18:22:44.375Z","2025-06-27","","false","https://gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools/-/issues/1","ISSUE TITLE: Create Gitlab CICD pipeline template file STATE: closed AUTHOR: freedomgb CREATED: 2025-06-23T19:37:26.641Z LABELS:  ASSIGNEES: freedomgb DESCRIPTION: Create pipeline template file for container builds.  * Integrate with orchestrated pipeline for container builds ftsg/lion/cicd/pipelines/containers * Add CICD variable values to customize build to container needs (e.g. artifact locations, etc.)  Success:  * All jobs complete successfully * SBOM, Container Signature and Vulnerability findings are published to Security and Vulnerability Dashboard * Container is tagged and registered in project Registry COMMENTS: None"
"atlas-datascience/lion/infrastructure/aws/aws-account-creation","71125468","1","169475633","Develop Terraform Codebase for AWS Account Creation and Organization Integration","closed","alain.atemnkeng","","","","2025-06-25T14:58:56.703Z","2025-08-08T20:25:39.769Z","","","false","https://gitlab.com/atlas-datascience/lion/infrastructure/aws/aws-account-creation/-/issues/1","ISSUE TITLE: Develop Terraform Codebase for AWS Account Creation and Organization Integration STATE: closed AUTHOR: alain.atemnkeng CREATED: 2025-06-25T14:58:56.703Z LABELS:  ASSIGNEES:  DESCRIPTION: We need to develop a secure Terraform codebase that enables the creation of new AWS accounts and automatically adds them to our existing AWS Organization. This codebase should also support assigning baseline organizational-level permissions and configurations to the newly created accounts as needed (e.g., SCPs, IAM Identity Center permission sets, etc.).   Security Requirement: This codebase should include an automation pipeline for automation.   Acceptance Criteria: 	1.	A Terraform codebase exists that: 	•	Creates a new AWS account programmatically using the AWS Organizations API. 	•	Automatically adds the new account to the existing AWS Organization. 	•	Optionally attaches baseline organizational policies or permission sets to the new account.  	2.	The codebase is well-documented and includes: 	•	Clear, step-by-step instructions on how it works 	•	Input variables for account name, email address, and optional OU or policy attachments.  	3.	The codebase should contain: 	•	A CI/CD pipeline or automation triggers. 	•	Make sure to set up permissions for who can run this pipeline and what approvals are needed for this to run  	4.	Security and IAM roles used in the code follow least privilege principles and are reviewed by the security team. 	 	6.	The process is tested and validated with at least one successful account creation and organization attachment. 	7.	The project configuration and branching strategy need to adhere to standards. COMMENTS: None"
"atlas-datascience/lion/infrastructure/aws/access-manager","70447540","1","169481796","Develop Terraform Codebase for Automated AWS Multi-Account Access Management","closed","alain.atemnkeng","","","","2025-06-25T15:26:31.277Z","2025-08-08T20:25:56.188Z","","","false","https://gitlab.com/atlas-datascience/lion/infrastructure/aws/access-manager/-/issues/1","ISSUE TITLE: Develop Terraform Codebase for Automated AWS Multi-Account Access Management STATE: closed AUTHOR: alain.atemnkeng CREATED: 2025-06-25T15:26:31.277Z LABELS:  ASSIGNEES:  DESCRIPTION: We need to develop a Terraform-based codebase responsible for managing and granting access across all AWS accounts within our organization. This includes defining who has access to which accounts, what roles or permissions they have, and which groups they belong to.  This project will include an automation pipeline, enabling faster and more consistent application of changes. Appropriate security controls must be in place to ensure only authorized personnel can trigger or approve the pipeline.  This codebase will serve as the single source of truth for AWS account access and permissions.  **Acceptance Criteria:**  	1.	**Terraform Codebase:** 	 	•	A standalone Terraform project exists for managing access across AWS accounts. 	•	Defines: 	•	All AWS accounts under management. 	•	Groups and users (via IAM Identity Center). 	•	Permission sets or IAM policies. 	•	Group-to-account assignments and permissions. 	•	Code structure supports easy onboarding and updates.  	2.	**Automation Pipeline:** 	•	A CI/CD pipeline is integrated (e.g., GitLab). 	•	The pipeline: 	•	Supports plan and apply stages. 	•	Enforces peer review and approval before apply is permitted. 	•	Limits execution to a secure environment (e.g., protected runners, access-controlled    credentials). 	•	Logs and artifacts are retained for auditing.  	3.	**Security & Governance:** 	•	Only authorized engineers (e.g., members of a devops-admins group) can trigger or approve pipeline executions. 	•	Role and permission assignments follow least-privilege principles. 	•	All access changes are version-controlled and auditable. 	•	Sensitive values (e.g., user emails) are stored securely.  	4.	**Documentation:** 	•	Includes a detailed README with: 	•	How the codebase works. 	•	How to add new users or groups. 	•	How to assign users to accounts and roles. 	•	How to run the pipeline or perform manual overrides if needed. 	•	A generated or manually maintained summary that includes: 	•	List of all AWS accounts. 	•	Defined groups and their descriptions. 	•	User/group-to-account mappings. 	•	Permission sets or policies per group/account.  	5.	**Testing & Validation:** 	•	Access provisioning is tested in a non-production environment. 	•	At least one access change is deployed through the pipeline as part of ticket closure. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","18","169778474","Replace Placeholder AssetEvent with JSON Schema Output Model","closed","rcross3","rcross3","aspect::edge-connector","","2025-06-27T17:26:04.255Z","2025-09-19T14:52:24.333Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/18","ISSUE TITLE: Replace Placeholder AssetEvent with JSON Schema Output Model STATE: closed AUTHOR: rcross3 CREATED: 2025-06-27T17:26:04.255Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION:  COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","19","169782103","Validate exif meets threshold for necessary geospatial extraction.","closed","rcross3","","aspect::edge-connector","","2025-06-27T18:37:52.747Z","2025-09-19T14:52:24.604Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/19","ISSUE TITLE: Validate exif meets threshold for necessary geospatial extraction. STATE: closed AUTHOR: rcross3 CREATED: 2025-06-27T18:37:52.747Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Robert has identified from this exhaustive list of supported filetypes the important ones to test, and has create associated datasets for that in example-datasets github repo.  ```         const gdalExtensions = [             '.pdf', '.toc', '.ovr', '.nitf', '.ntf', '.vrt', '.tif', '.tiff', '.png', '.aux',             '.i4a', '.i4c', '.i41', '.i21', '.i23', '.i1a', '.i11', '.i12', '.i13', '.i14',             '.i15', '.i16', '.dt0', '.dt1', '.dt2', '.lf1', '.lf2', '.lf3', '.lf4', '.lf5',             '.lf6', '.lf7', '.ln2', '.ln3', '.ln4', '.tf2', '.tf3', '.tf4', '.tf5', '.tf6'         ];          // GeoPDF files         const geoPdfExtensions = ['.pdf'];          // Picture files that can have geo data         const picExtensions = ['.jpeg', '.jpg'];          // Shapefile and vector formats         const vectorExtensions = ['.shp'];          // VPF files (Vector Product Format)         const vpfExtensions = ['lht', 'dht', 'grt', 'dqt', 'cat', 'lat']; ```  Compare and contrast using exifr, (or whatever other node libraries may be appropriate) with gdal. We should be able to view the two side by side.  Minimum required data: - Geometry data - Coordinate System data COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","3","169869188","Add Flyway to local development environment","closed","rprice314","rprice314","","","2025-06-30T13:37:24.029Z","2025-08-08T20:26:11.784Z","","","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/3","ISSUE TITLE: Add Flyway to local development environment STATE: closed AUTHOR: rprice314 CREATED: 2025-06-30T13:37:24.029Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: Need to change local development environment to use Flyway to manage Postgres data structures. Flyway will be used to version Postgres database changes so that we can better track Postgres changes and rollback changes if needed. Flyway is used by OpenMetadata so using Flyway will allow us to use a similar database versioning scheme to keep database changes consistent.  https://documentation.red-gate.com/flyway/getting-started-with-flyway/quickstart-guides/quickstart-docker COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","20","169874543","Edge Connector Terraform deploy template","opened","szahniy","alain.atemnkeng","Sprint Ready|aspect::platform","","2025-06-30T15:34:15.592Z","2025-09-22T14:46:35.681Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/20","ISSUE TITLE: Edge Connector Terraform deploy template STATE: opened AUTHOR: szahniy CREATED: 2025-06-30T15:34:15.592Z LABELS: Sprint Ready, aspect::platform ASSIGNEES: alain.atemnkeng DESCRIPTION: **Edge Connector Terraform deploy template similar to **[**DataDog**](https://docs.datadoghq.com/integrations/guide/)**:**  * Lambda Function connected to S3 events * SQS for buffering * IAM Role and Policy with defined access * Secret Manager credentials for JWT * CloudWatch Log Group for logs  **Lambda Configurations:**  * GATEWAY_URL - Ingestion Gateway HTTPS endpoint * TENANT_ID - Tenant scoping + idempotency key salt * JWT_SECRET_ARN - Secrets Manager ARN for JWT * MAX_RETRY_ATTEMPTS - max retries before DQL * INCLUDE_PREFIXES - S3 include prefixes, comma separated * EXCLUDE_PREFIXES - S3 exclude prefixes, comma separated * ENABLE_GZIP - enable compression * LOG_LEVEL - Log level for debugging COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-access-broker","74557728","3","173633492","Draft trust and permission policy","opened","szahniy","","Backlog|aspect::access-broker","","2025-06-30T16:00:25.367Z","2025-09-19T14:07:53.656Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-access-broker/-/issues/3","ISSUE TITLE: Draft trust and permission policy STATE: opened AUTHOR: szahniy CREATED: 2025-06-30T16:00:25.367Z LABELS: Backlog, aspect::access-broker ASSIGNEES:  DESCRIPTION: Design the IAM trust and inline permission policies that will live in each customer account. Focus on sts:AssumeRole trust with the Access Broker ARN and a unique ExternalId, plus a minimal action set per datastore type.  **Acceptance criteria**  - Trust policy limits Principal to the Access Broker role ARN. - Condition block enforces customer-specific ExternalId. - Permissions allow only scoped read/write (e.g., s3:GetObject, rds-db:connect). - Session duration default set to 900s. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","21","169875506","Draft trust and permission policy","closed","szahniy","","Backlog|aspect::edge-connector","","2025-06-30T16:00:25.367Z","2025-09-19T14:52:24.840Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/21","ISSUE TITLE: Draft trust and permission policy STATE: closed AUTHOR: szahniy CREATED: 2025-06-30T16:00:25.367Z LABELS: Backlog, aspect::edge-connector ASSIGNEES:  DESCRIPTION: Design the IAM trust and inline permission policies that will live in each customer account. Focus on sts:AssumeRole trust with the Access Broker ARN and a unique ExternalId, plus a minimal action set per datastore type.  **Acceptance criteria**  - Trust policy limits Principal to the Access Broker role ARN. - Condition block enforces customer-specific ExternalId. - Permissions allow only scoped read/write (e.g., s3:GetObject, rds-db:connect). - Session duration default set to 900s. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","22","169875511","Terraform module","closed","szahniy","alain.atemnkeng","aspect::edge-connector","","2025-06-30T16:00:39.646Z","2025-09-19T14:52:25.096Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/22","ISSUE TITLE: Terraform module STATE: closed AUTHOR: szahniy CREATED: 2025-06-30T16:00:39.646Z LABELS: aspect::edge-connector ASSIGNEES: alain.atemnkeng DESCRIPTION: Create the modules/sts_cross_account directory with variables, outputs. Include role_name, external_id, allowed_actions, and tags variables.  **Acceptance criteria**  - main.tf, variables.tf, outputs.tf, README.md. - Module passes terraform validate with empty/placeholder inputs. - Outputs expose role_arn and external_id. - README shows example usage snippet. - Pre-commit hook runs terraform fmt -check. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-access-broker","74557728","2","173633472","Implement IAM role and ExternalId input","opened","szahniy","","Backlog|aspect::access-broker","","2025-06-30T16:00:52.229Z","2025-09-19T14:07:33.459Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-access-broker/-/issues/2","ISSUE TITLE: Implement IAM role and ExternalId input STATE: opened AUTHOR: szahniy CREATED: 2025-06-30T16:00:52.229Z LABELS: Backlog, aspect::access-broker ASSIGNEES:  DESCRIPTION: Add the actual aws_iam_role, trust policy JSON and aws_iam_policy resources inside the module, wiring them to module variables.  **Acceptance criteria**  - Role trust policy contains correct Principal and Condition StringEquals sts:ExternalId. - max_session_duration hard-caps at 3600s. - Outputs updated test to match created ARN. - terraform plan with no warnings. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","23","169875514","Implement IAM role and ExternalId input","closed","szahniy","","Backlog|aspect::edge-connector","","2025-06-30T16:00:52.229Z","2025-09-19T14:52:25.298Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/23","ISSUE TITLE: Implement IAM role and ExternalId input STATE: closed AUTHOR: szahniy CREATED: 2025-06-30T16:00:52.229Z LABELS: Backlog, aspect::edge-connector ASSIGNEES:  DESCRIPTION: Add the actual aws_iam_role, trust policy JSON and aws_iam_policy resources inside the module, wiring them to module variables.  **Acceptance criteria**  - Role trust policy contains correct Principal and Condition StringEquals sts:ExternalId. - max_session_duration hard-caps at 3600s. - Outputs updated test to match created ARN. - terraform plan with no warnings. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","24","169875526","Attach least-privilege policies per datastore","closed","szahniy","","aspect::edge-connector","","2025-06-30T16:01:24.538Z","2025-09-19T14:52:25.612Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/24","ISSUE TITLE: Attach least-privilege policies per datastore STATE: closed AUTHOR: szahniy CREATED: 2025-06-30T16:01:24.538Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Add conditional blocks so the module can attach S3, RDS, or other datasource (in the future) policies based on the datastore variable, keeping each as small as possible.  **Acceptance criteria**  - Separate JSON policies stored under policies/. - for_each over var.datastores creates only necessary attachments. - S3 policy limits resources to ${var.bucket_arns}/*. - RDS auth policy uses rds-db:connect with ARN pattern for RDS Proxy. - Policy ARNs shown in outputs. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","25","169875549","Test assume-role","closed","szahniy","","aspect::edge-connector","","2025-06-30T16:02:10.089Z","2025-09-19T14:52:26.146Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/25","ISSUE TITLE: Test assume-role STATE: closed AUTHOR: szahniy CREATED: 2025-06-30T16:02:10.089Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Write test script (Terratest?) that deploys the module in a frash account, then calls aws sts assume-role and checks the credentials expire as expected.  **Acceptance criteria**  - Test spins up module via terraform.InitAndApply. - AssumeRole call succeeds and returns JSON creds. - Script waits until expiration - now < 60s and verifies expiry. - Test fails fast if permissions mismatch (AccessDenied). - Test tears down resources in defer block. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","26","169875558","CI","closed","szahniy","","aspect::edge-connector","","2025-06-30T16:02:33.877Z","2025-09-19T14:52:26.606Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/26","ISSUE TITLE: CI STATE: closed AUTHOR: szahniy CREATED: 2025-06-30T16:02:33.877Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Add CI to run tflint, tfsec and the tests from ticket #25 .  **Acceptance criteria**  - Workflow triggers on paths: ['modules/sts_cross_account/**']. - Jobs: setup-terraform, tflint, tfsec, test. - Fails the PR on any lint or test error. - Uses GitLab OIDC to pull short-lived AWS creds (no static keys). COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-access-broker","74557728","1","173633461","Deploy to sandbox","opened","szahniy","","Backlog|Parking Lot|aspect::access-broker","","2025-06-30T16:03:16.192Z","2025-09-19T14:07:10.825Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-access-broker/-/issues/1","ISSUE TITLE: Deploy to sandbox STATE: opened AUTHOR: szahniy CREATED: 2025-06-30T16:03:16.192Z LABELS: Backlog, Parking Lot, aspect::access-broker ASSIGNEES:  DESCRIPTION: Apply the module against the shared dev payer account (sandbox or dev) and run a manual smoke test via AWS CLI to issue a pre-signed S3 URL through the Access Broker.  **Acceptance criteria**  - curl -XPOST /v1/issue returns signed URL that downloads successfully (we do not have Access Broker yet, may be create Mock script with AWS CLI to request URL). - CloudTrail shows AssumeRole event with correct ExternalId. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","27","169875578","Deploy to sandbox","closed","szahniy","","Backlog|Parking Lot|aspect::edge-connector","","2025-06-30T16:03:16.192Z","2025-09-19T14:52:26.941Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/27","ISSUE TITLE: Deploy to sandbox STATE: closed AUTHOR: szahniy CREATED: 2025-06-30T16:03:16.192Z LABELS: Backlog, Parking Lot, aspect::edge-connector ASSIGNEES:  DESCRIPTION: Apply the module against the shared dev payer account (sandbox or dev) and run a manual smoke test via AWS CLI to issue a pre-signed S3 URL through the Access Broker.  **Acceptance criteria**  - curl -XPOST /v1/issue returns signed URL that downloads successfully (we do not have Access Broker yet, may be create Mock script with AWS CLI to request URL). - CloudTrail shows AssumeRole event with correct ExternalId. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","8","170290853","Implement comprehensive tests","closed","aagalyoon","","","","2025-07-08T14:29:25.024Z","2025-08-11T16:31:14.202Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/8","ISSUE TITLE: Implement comprehensive tests STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:29:25.024Z LABELS:  ASSIGNEES:  DESCRIPTION: Create unit, integration, and load tests for all components.   **Scope:**  - Unit tests for all services - Integration tests for workflows - Load testing for performance - Security testing  **Acceptance Criteria:**  - Code coverage above 80% - Integration tests pass - Load tests meet performance targets  Estimate: 1.5 weeks COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","28","170181685","Implement comprehensive tests","closed","aagalyoon","","aspect::edge-connector","","2025-07-08T14:29:25.024Z","2025-09-19T14:52:27.235Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/28","ISSUE TITLE: Implement comprehensive tests STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:29:25.024Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Create unit, integration, and load tests for all components.   **Scope:**  - Unit tests for all services - Integration tests for workflows - Load testing for performance - Security testing  **Acceptance Criteria:**  - Code coverage above 80% - Integration tests pass - Load tests meet performance targets  Estimate: 1.5 weeks COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","7","170289735","Implement OpenMetadata client","closed","aagalyoon","","","","2025-07-08T14:29:31.803Z","2025-08-08T20:40:31.616Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/7","ISSUE TITLE: Implement OpenMetadata client STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:29:31.803Z LABELS:  ASSIGNEES:  DESCRIPTION: Create integration layer for OpenMetadata to store enriched metadata.  **Features:**  - Entity creation and updates - Bulk operations - Lineage management - Error handling and retries - Search functionality  **Acceptance Criteria:**  - Entities created in OpenMetadata - Bulk ingestion works - Lineage relationships stored - Errors handled gracefully  Estimate: 2 weeks COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","29","170181695","Implement OpenMetadata client","closed","aagalyoon","","Backlog|aspect::edge-connector","","2025-07-08T14:29:31.803Z","2025-09-19T14:52:27.496Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/29","ISSUE TITLE: Implement OpenMetadata client STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:29:31.803Z LABELS: Backlog, aspect::edge-connector ASSIGNEES:  DESCRIPTION: Create integration layer for OpenMetadata to store enriched metadata.  **Features:**  - Entity creation and updates - Bulk operations - Lineage management - Error handling and retries - Search functionality  **Acceptance Criteria:**  - Entities created in OpenMetadata - Bulk ingestion works - Lineage relationships stored - Errors handled gracefully  Estimate: 2 weeks COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","6","170289556","Implement Kinesis Event Receiver","closed","aagalyoon","johndmema","In Progress","","2025-07-08T14:29:37.223Z","2025-07-22T14:50:01.622Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/6","ISSUE TITLE: Implement Kinesis Event Receiver STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:29:37.223Z LABELS: In Progress ASSIGNEES: johndmema DESCRIPTION: Lambda that consumes from Kinesis, enriches events, and applies business rules and writes record back to Open Metadata.  Create API structure with authentication, logging, and error handling middleware.  **Acceptance Criteria:**  - API that handles Kinesis Data Stream Events    * All invoking events are logged    * All errors are logged with appropriate log levels    * Records are written to OpenMetadata. - 30% code coverage has been met or exceeded for Unit Tests - All unit tests pass - There are no critical Linting errors  **Components:**  - Kinesis event processing - Enrichment pipeline - Business rules validation - Error handling - Metrics collection  Estimate: 1.5 weeks COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","30","170181704","Create Lambda to process Kinesis events","closed","aagalyoon","","aspect::edge-connector","","2025-07-08T14:29:37.223Z","2025-09-19T14:52:27.779Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/30","ISSUE TITLE: Create Lambda to process Kinesis events STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:29:37.223Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Build Lambda that consumes from Kinesis, enriches events, and applies business rules.  **Components:**  - Kinesis event processing - Enrichment pipeline - Business rules validation - Error handling - Metrics collection  **Acceptance Criteria:**  - Lambda processes events from Kinesis - Enrichment adds required metadata - Business rules enforced - Failed events handled properly  Estimate: 1.5 weeks COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","31","170181709","Create Kinesis publishing service","closed","aagalyoon","","aspect::edge-connector","","2025-07-08T14:29:42.979Z","2025-09-19T14:52:28.024Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/31","ISSUE TITLE: Create Kinesis publishing service STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:29:42.979Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Build service to publish validated events to Kinesis with batching and retry logic. Features:  Single and batch publishing  Automatic batching for performance  Retry with backoff  Dead letter queue  Partition key strategies  Acceptance Criteria:  Events published to Kinesis  Batching improves throughput  Failed events go to DLQ  Estimate: 1 week COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","5","170288967","Implement Redis-based event deduplication","closed","aagalyoon","chris.sonnenberg","aspect::edge-connector","","2025-07-08T14:29:48.961Z","2025-09-02T19:26:43.420Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/5","ISSUE TITLE: Implement Redis-based event deduplication STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:29:48.961Z LABELS: aspect::edge-connector ASSIGNEES: chris.sonnenberg DESCRIPTION: Implement a Redis check to dedupe batches by batchIdempotencyKey within 60 minutes.  Acceptance criteria:  - Duplicate batchIdempotencyKey within TTL is dropped and logged. - TTL configurable per environment; defaults to 60 minutes. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","32","170181714","Implement Redis-based event deduplication","closed","aagalyoon","","Backlog|aspect::edge-connector","","2025-07-08T14:29:48.961Z","2025-09-19T14:52:28.275Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/32","ISSUE TITLE: Implement Redis-based event deduplication STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:29:48.961Z LABELS: Backlog, aspect::edge-connector ASSIGNEES:  DESCRIPTION: Add Redis integration to prevent duplicate event processing using idempotency keys.  **Requirements:**  - Check and set operations - Configurable TTL - Circuit breaker for failures - Batch deduplication - Fallback behavior  **Acceptance Criteria:**  - Duplicates detected and rejected - Redis failures handled gracefully - Performance meets requirements  Estimate: 1 week COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","4","170285541","Implement Ingest Gateway API","closed","aagalyoon","chris.sonnenberg","","","2025-07-08T14:30:03.246Z","2025-08-25T18:16:03.681Z","","8","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/4","ISSUE TITLE: Implement Ingest Gateway API STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:30:03.246Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION:  Create API structure with authentication, logging, and error handling middleware.  **Acceptance Criteria:**  - API that handles HTTP POST for edge connector events    * HTTP request body will contain an array of events from the edge connector    * HTTP body must be validated    * All Requests and Responses are logged    * All Error Responses align with applicable HTTP Codes    * Content Validation Errors will return HTTP 400 Error Code    * Correlation ID tracking Errors will return:       - HTTP 409 if the request is replayed while still being processed       - HTTP 422 if the key is reused for a different request    * Valid Requests will return an HTTP 202 response as there is not guarantee of completed processing.    * All validated events are written to the Kenisis stream for down stream processing. - 30% code coverage has been met or exceeded for Unit Tests - All unit tests pass - There are no critical Linting errors  - ~~JWT authentication~~ - Make its own issue - ~~Health check endpoint~~ - If Lambda this may not be appropriate.   - ~~Rate limiting~~ - Handled by infrastructure / API Gateway  Estimate: 1 week COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","34","170181728","Implement base API with middleware","closed","aagalyoon","","aspect::edge-connector","","2025-07-08T14:30:03.246Z","2025-09-19T14:52:28.556Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/34","ISSUE TITLE: Implement base API with middleware STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T14:30:03.246Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Create API structure with authentication, logging, and error handling middleware.  **Requirements:**  - JWT authentication - Request/response logging - Error handling - ~~Health check endpoint~~ - ~~Rate limiting~~ - Handled by infrastructure / API Gateway - Correlation ID tracking  **Acceptance Criteria:**  - Authentication works with JWT - All requests logged - Errors return consistent format  Estimate: 1 week COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","3","170285502","(Platform) Configure AWS resources using Infrastructure as Code","closed","aagalyoon","","","","2025-07-08T18:10:35.432Z","2025-08-22T01:16:12.239Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/3","ISSUE TITLE: (Platform) Configure AWS resources using Infrastructure as Code STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T18:10:35.432Z LABELS:  ASSIGNEES:  DESCRIPTION: Set up AWS infrastructure including API Gateway, Lambda functions, Kinesis stream, and Redis cluster.  **Components:**  - API Gateway for ingestion endpoint - separate task - Lambda functions (Ingestion and Enrichment) - Kinesis Data Stream - ElastiCache Redis cluster - IAM roles and policies - CloudWatch logging - expand  **Acceptance Criteria:**  - IaC templates deploy successfully - All resources properly configured - Security groups set up - IAM set up - Monitoring enabled - expand  Estimate: 1 week COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","35","170190353","(Platform) Configure AWS resources using Infrastructure as Code","closed","aagalyoon","","aspect::edge-connector","","2025-07-08T18:10:35.432Z","2025-09-19T14:52:28.866Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/35","ISSUE TITLE: (Platform) Configure AWS resources using Infrastructure as Code STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T18:10:35.432Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Set up AWS infrastructure including API Gateway, Lambda functions, Kinesis stream, and Redis cluster.  **Components:**  - API Gateway for ingestion endpoint - separate task - Lambda functions (Ingestion and Enrichment) - Kinesis Data Stream - ElastiCache Redis cluster - IAM roles and policies - CloudWatch logging - expand  **Acceptance Criteria:**  - IaC templates deploy successfully - All resources properly configured - Security groups set up - IAM set up - Monitoring enabled - expand  Estimate: 1 week COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","1","170285351","Initialize ingestion-gateway repository","closed","aagalyoon","","","","2025-07-08T18:12:00.184Z","2025-08-08T20:47:08.227Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/1","ISSUE TITLE: Initialize ingestion-gateway repository STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T18:12:00.184Z LABELS:  ASSIGNEES:  DESCRIPTION: Create repository and set up NestJS TypeScript project for both API Gateway and Enrichment Lambda functions.  **Tasks:**  - Create feature branch on the ingestion-gateway repository - Initialize NestJS project with TypeScript - Configure ESLint, Prettier, and git hooks - ~~Set up Docker for local development~~ Separate Ticket - ~~Create basic CI/CD pipeline~~ Separate Ticket - Add environment configuration  **Acceptance Criteria:**  - Repository created and accessible - NestJS project runs locally - Linting and formatting work - Project Structure matches that of the Edge Connector - ~~Docker compose starts all dependencies~~ Separate Ticket - ~~Basic pipeline runs tests~~  Estimate: 2 days COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","36","170190372","Initialize ingestion-gateway repository","closed","aagalyoon","","aspect::edge-connector","","2025-07-08T18:12:00.184Z","2025-09-19T14:52:29.124Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/36","ISSUE TITLE: Initialize ingestion-gateway repository STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T18:12:00.184Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Create repository and set up NestJS TypeScript project for both API Gateway and Enrichment Lambda functions.  **Tasks:**  - Create feature branch on the ingestion-gateway repository - Initialize NestJS project with TypeScript - Configure ESLint, Prettier, and git hooks - ~~Set up Docker for local development~~ Separate Ticket - ~~Create basic CI/CD pipeline~~ Separate Ticket - Add environment configuration  **Acceptance Criteria:**  - Repository created and accessible - NestJS project runs locally - Linting and formatting work - Project Structure matches that of the Edge Connector - ~~Docker compose starts all dependencies~~ Separate Ticket - ~~Basic pipeline runs tests~~  Estimate: 2 days COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","2","170285473","Create documentation and deployment guides","closed","aagalyoon","chris.sonnenberg","aspect::edge-connector","","2025-07-08T19:57:02.997Z","2025-08-28T18:41:36.940Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/2","ISSUE TITLE: Create documentation and deployment guides STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T19:57:02.997Z LABELS: aspect::edge-connector ASSIGNEES: chris.sonnenberg DESCRIPTION: Write comprehensive documentation for the system.  **Deliverables:**  - API documentation - Deployment guide - Configuration reference  **Acceptance Criteria:**  - All APIs documented - ~~Deployment automated~~  Estimate: 1 week COMMENTS: None"
"atlas-datascience/lion/example-datasets","70542589","10","170194267","Create documentation and deployment guides","closed","aagalyoon","","","","2025-07-08T19:57:02.997Z","2025-07-10T17:45:23.836Z","","","false","https://gitlab.com/atlas-datascience/lion/example-datasets/-/issues/10","ISSUE TITLE: Create documentation and deployment guides STATE: closed AUTHOR: aagalyoon CREATED: 2025-07-08T19:57:02.997Z LABELS:  ASSIGNEES:  DESCRIPTION: Write comprehensive documentation for the system.  **Deliverables:**  - API documentation - Deployment guide - Configuration reference - Operational runbooks  **Acceptance Criteria:**  - All APIs documented - Deployment automated - Runbooks cover common scenarios  Estimate: 1 week COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","37","170247928","Example-Datasets S3 Event Generator - Event Creation","closed","rcross3","johndmema","Closed|aspect::edge-connector","","2025-07-10T00:08:56.122Z","2025-09-19T14:52:29.417Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/37","ISSUE TITLE: Example-Datasets S3 Event Generator - Event Creation STATE: closed AUTHOR: rcross3 CREATED: 2025-07-10T00:08:56.122Z LABELS: Closed, aspect::edge-connector ASSIGNEES: johndmema DESCRIPTION: As a user I would like to be able to perform end-to-end testing of the Lion project with a robust, production-like event dataset. Step one is to generate those events for capture.  **Success Criteria:**  * Add a command to stand up a s3 Bucket: **_LionTestData_** in the LocalEnvironment repo using localstack (hint: this has been done in the LocalEnvironment Repo) * Create a Typescript script in LocalEnvironment that will upload all files from any subdirectory in example-datasets and POST them into a LocalStack s3 bucket * Using the object keys from a successful post, perform PUTs to update (create new versions) objects with new metadata. * Perform a COPY of each uploaded item to another location in the same bucket * Perform a mix of DELETE, SOFT DELETE on those copies COMMENTS: None"
"atlas-datascience/lion/infrastructure/aws/master-network","71529533","1","170277749","Master Network Design","closed","freedomgb","pierreo32","","","2025-07-10T15:21:31.370Z","2025-08-08T20:49:23.036Z","2025-07-14","","false","https://gitlab.com/atlas-datascience/lion/infrastructure/aws/master-network/-/issues/1","ISSUE TITLE: Master Network Design STATE: closed AUTHOR: freedomgb CREATED: 2025-07-10T15:21:31.370Z LABELS:  ASSIGNEES: pierreo32 DESCRIPTION: Need to develop a master network design that demonstrates a multi VPC, multi account strategy.  Components: - Architecture Design documentation - - network diagram - - supporting documents defining concepts and strategy Acceptance Criteria: - Ensures minimal public exposure to private resources. - Ensures AWS network protection mechanisms are employed. - Provides singular access to AWS private VPC endpoints across all accounts . - Configuration is pluggable with respect to environment accounts supporting development, stage and production. COMMENTS: None"
"atlas-datascience/lion/infrastructure/aws/master-network","71529533","2","170278012","Establish Terraform Templates for Master Network","closed","freedomgb","","","","2025-07-10T15:26:29.935Z","2025-08-11T16:24:55.583Z","","","false","https://gitlab.com/atlas-datascience/lion/infrastructure/aws/master-network/-/issues/2","ISSUE TITLE: Establish Terraform Templates for Master Network STATE: closed AUTHOR: freedomgb CREATED: 2025-07-10T15:26:29.935Z LABELS:  ASSIGNEES:  DESCRIPTION: Create the IaaC in Terraform that can be utilized through CICD to build out the network in the Master Account.  Components: - IaaC for Network in Terraform  Acceptance Criteria: - IaaC reflects the agreed to design of the master network. - IaaC is validated and deployed through automation. COMMENTS: None"
"atlas-datascience/lion/infrastructure/aws/environment-networks","71529570","1","170278419","Establish Environment Networks","closed","freedomgb","","","","2025-07-10T15:29:27.273Z","2025-08-08T20:50:02.701Z","","","false","https://gitlab.com/atlas-datascience/lion/infrastructure/aws/environment-networks/-/issues/1","ISSUE TITLE: Establish Environment Networks STATE: closed AUTHOR: freedomgb CREATED: 2025-07-10T15:29:27.273Z LABELS:  ASSIGNEES:  DESCRIPTION: Create the IaaC in Terraform that can be utilized through CICD to build out each of the environment networks.  Components: - IaaC for Network in Terraform  Acceptance Criteria: - IaaC reflects the agreed to design of the environment networks. - Environment networks leverage configured route rules and peering to integrate VPCs across accounts. - IaaC is validated and deployed through automation. COMMENTS: None"
"atlas-datascience/lion/renovate-runner","71311398","1","170322416","Dependency Dashboard","closed","group_101972113_bot_9af811fe10be4bb757f2747a3517b37c","","","","2025-07-11T12:39:13.272Z","2025-08-08T21:04:47.048Z","","","false","https://gitlab.com/atlas-datascience/lion/renovate-runner/-/issues/1","ISSUE TITLE: Dependency Dashboard STATE: closed AUTHOR: group_101972113_bot_9af811fe10be4bb757f2747a3517b37c CREATED: 2025-07-11T12:39:13.272Z LABELS:  ASSIGNEES:  DESCRIPTION: This issue lists Renovate updates and detected dependencies. Read the [Dependency Dashboard](https://docs.renovatebot.com/key-concepts/dashboard/) docs to learn more.  ## Awaiting Schedule  These updates are awaiting their schedule. Click on a checkbox to get an update now.   - [ ] <!-- unschedule-branch=renovate-lock-file-maintenance -->chore(deps): lock file maintenance  ## Open  These updates have all been created already. Click a checkbox below to force a retry/rebase of any.   - [ ] <!-- rebase-branch=renovate-conventional-changelog-conventionalcommits-9.x -->[chore(deps): update dependency conventional-changelog-conventionalcommits to v9](!2)  - [ ] <!-- rebase-branch=renovate-major-semantic-release-monorepo -->[chore(deps): update semantic-release monorepo (major)](!4) (`@semantic-release/gitlab`, `semantic-release`)  - [ ] <!-- rebase-branch=renovate-ghcr.io-renovatebot-renovate-41.x -->[feat(deps): update ghcr.io/renovatebot/renovate docker tag to v41](!5)  - [ ] <!-- rebase-branch=renovate-renovate-renovate-41.x -->[feat(deps): update renovate/renovate docker tag to v41](!6)  - [ ] <!-- rebase-all-open-prs -->**Click on this checkbox to rebase all open MRs at once**  ## Detected dependencies  <details><summary>gitlabci</summary> <blockquote>  <details><summary>templates/renovate.gitlab-ci.yml</summary>   </details>  <details><summary>templates/renovate-dind.gitlab-ci.yml</summary>   </details>  <details><summary>templates/renovate-config-validator.gitlab-ci.yml</summary>   </details>  </blockquote> </details>  <details><summary>npm</summary> <blockquote>  <details><summary>package.json</summary>   - `@semantic-release/gitlab 12.1.1`  - `conventional-changelog-conventionalcommits 7.0.2`  - `prettier 3.6.2`  - `semantic-release 22.0.12`  </details>  </blockquote> </details>  <details><summary>regex</summary> <blockquote>  <details><summary>README.md</summary>   </details>  <details><summary>templates/renovate-config-validator.gitlab-ci.yml</summary>   - `ghcr.io/renovatebot/renovate 37.440.7@sha256:1ee424e0ed4d8e64e5bb2d442d6bc72b3809bb9d0cf804f4b7180caa47d6002a`  </details>  <details><summary>templates/renovate-dind.gitlab-ci.yml</summary>   - `renovate/renovate 37.440.7@sha256:42bedb4c35c5403faf50e82283f4f92f902addf9986a1f91281d9aa25d8a4a32`  </details>  <details><summary>templates/renovate.gitlab-ci.yml</summary>   - `ghcr.io/renovatebot/renovate 37.440.7@sha256:1ee424e0ed4d8e64e5bb2d442d6bc72b3809bb9d0cf804f4b7180caa47d6002a`  </details>  </blockquote> </details> COMMENTS: None"
"atlas-datascience/lion/test-project","70868426","1","170363886","Dependency Dashboard","closed","group_101972113_bot_9af811fe10be4bb757f2747a3517b37c","","","","2025-07-12T02:41:45.249Z","2025-09-05T15:30:12.262Z","","","false","https://gitlab.com/atlas-datascience/lion/test-project/-/issues/1","ISSUE TITLE: Dependency Dashboard STATE: closed AUTHOR: group_101972113_bot_9af811fe10be4bb757f2747a3517b37c CREATED: 2025-07-12T02:41:45.249Z LABELS:  ASSIGNEES:  DESCRIPTION: This issue lists Renovate updates and detected dependencies. Read the [Dependency Dashboard](https://docs.renovatebot.com/key-concepts/dashboard/) docs to learn more.  ## Open  These updates have all been created already. Click a checkbox below to force a retry/rebase of any.   - [ ] <!-- rebase-branch=renovate-aws-6.x -->[Update Terraform aws to v6](!2)  ## Detected dependencies  <details><summary>gitlabci</summary> <blockquote>  <details><summary>.gitlab-ci.yml</summary>   </details>  </blockquote> </details>  <details><summary>terraform</summary> <blockquote>  <details><summary>main.tf</summary>   - `aws ~> 5.0`  </details>  </blockquote> </details> COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","4","170565659","S3 Event Generator - Enqueue and Capture","closed","rcross3","johndmema","","","2025-07-14T14:54:28.330Z","2025-08-11T16:03:20.987Z","","","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/4","ISSUE TITLE: S3 Event Generator - Enqueue and Capture STATE: closed AUTHOR: rcross3 CREATED: 2025-07-14T14:54:28.330Z LABELS:  ASSIGNEES: johndmema DESCRIPTION: Building upon the events generated from the S3 operations in part one. Create mechanisms to capture all S3 events triggered (via SNS) from the test bucket to an SQS (Simple Queue System). Then build a script to receive and save these SQS Records. So that we can replay them for integration/end-to-end testing. COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/pipelines","71129638","1","170580184","Pipeline for Typescript/NodeJS","closed","freedomgb","alain.atemnkeng","","","2025-07-14T19:38:41.176Z","2025-08-29T18:23:31.871Z","","3","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/pipelines/-/issues/1","ISSUE TITLE: Pipeline for Typescript/NodeJS STATE: closed AUTHOR: freedomgb CREATED: 2025-07-14T19:38:41.176Z LABELS:  ASSIGNEES: alain.atemnkeng DESCRIPTION: Development teams need a defined pipeline for evaluating Typescript/NodeJs code.  Success Criteria: - Pipelines must utilize Gitlab Components strategy. - Pipeline must build the application utilizing `node build` script contained within package.json - Pipeline must run unit tests and produce code coverage that is integratabtle with Gitlab using `npm run test:cov` - Pipeline must run linter using `npm run lint` - Pipeline must run SAST and produce results that are published to Gitlab Security and Vulnerability dashboard - Pipeline must run Secrets detection - Pipeline must run Dependancy Checks - Pipeline must produce CycloneDx compatible SBOM that can be published to Gitlab Security and Vulnerability dashboard - NodeJs 22 must be used for the pipeline baseline - Pipelines should be configurable to support more than one version of NodeJs - Container pipeline must be integratabtle but only run container jobs when needed and jobs only run once dependencies have been met. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","38","170679762","Implement Process Flow for Edge Connector","closed","rcross3","rcross3","aspect::edge-connector","","2025-07-16T17:08:59.602Z","2025-09-19T14:52:29.846Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/38","ISSUE TITLE: Implement Process Flow for Edge Connector STATE: closed AUTHOR: rcross3 CREATED: 2025-07-16T17:08:59.602Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: The skeleton control flow is very tightly coupled and does not implement graceful error handling or processing of events. Create the external control flow that will manage the structure defined in this diagram:  ![image.png](/uploads/b12ea6e91c3085a5f06e2025a4e6940b/image.png){width=591 height=382} COMMENTS: None"
"atlas-datascience/lion/project-lion/schemas","71164198","1","170698012","Publish Schema and Types package (lion/schema)","closed","rcross3","","","","2025-07-16T17:11:01.756Z","2025-08-26T15:24:26.473Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/schemas/-/issues/1","ISSUE TITLE: Publish Schema and Types package (lion/schema) STATE: closed AUTHOR: rcross3 CREATED: 2025-07-16T17:11:01.756Z LABELS:  ASSIGNEES:  DESCRIPTION: Now that the schema repo is more defined, lets move type compilation (currently in edge-connector), generate types using the utility. And publish the schema repo as a package to our registry  Success Criteria  Exposes JSON for import   Exposes type declaration files for import COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","39","170679824","Publish Schema and Types package (lion/schema)","closed","rcross3","","aspect::edge-connector","","2025-07-16T17:11:01.756Z","2025-09-19T14:52:30.468Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/39","ISSUE TITLE: Publish Schema and Types package (lion/schema) STATE: closed AUTHOR: rcross3 CREATED: 2025-07-16T17:11:01.756Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Now that the schema repo is more defined, lets move type compilation (currently in edge-connector), generate types using the utility. And publish the schema repo as a package to our registry  Success Criteria  Exposes JSON for import   Exposes type declaration files for import COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","40","170937774","Implement KinesisProducerHandler to push validated events to events-raw","closed","szahniy","chris.sonnenberg","aspect::edge-connector","","2025-07-22T13:32:43.901Z","2025-09-19T14:52:31.133Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/40","ISSUE TITLE: Implement KinesisProducerHandler to push validated events to events-raw STATE: closed AUTHOR: szahniy CREATED: 2025-07-22T13:32:43.901Z LABELS: aspect::edge-connector ASSIGNEES: chris.sonnenberg DESCRIPTION: The Ingestion Gateway must take **Edge Connector events** (JSON) and forward each record into the raw Kinesis stream so downstream services can enrich and index the metadata.  ## Scope  Create a service that:  * Accepts an array of pre-validated `IngestEvent` objects (one per extracted file). * Publishes the array to **Kinesis Data Streams** `events-raw` using `PutRecords`. * Handles partial failures and retries within Kinesis limits.   ## Edge Connector Payload Schema (context for validation)  The Gateway receives a JSON body that looks like:  ```jsonc {   """"batchIdempotencyKey"""": """"batch_20241215_142030_abc123"""",       // ensures batch-level dedupe   """"batchTimestamp"""": """"2024-12-15T14:20:30Z"""",   """"batchSize"""": 3,   """"records"""": [     {       """"correlationId"""": """"3d3d6f1e-..."""",                          // trace across services       """"recordProcessingStatus"""": """"Successful"""",       """"..."""": """"other metadata""""     }   ] } ```  Key fields are defined in the schemas delivered by the Edge Connector:  * **Batch keys** – `batchIdempotencyKey`, `batchTimestamp`, `records[]`. * **Record keys** – `correlationId` and `recordProcessingStatus`.  The existing controller validates the full batch against these schemas and flattens each `records[]` element into an `IngestEvent`.   ## `IngestEvent` interface (used by this handler)  ```ts export interface IngestEvent {   idempotencyKey: string;        // batchIdempotencyKey + index   tenantId: string;              // derives from batchTenantId or auth context   datasetId: string;             // logical dataset in Project Lion   payload: ExtractorRecord;      // exact extraction record JSON   timestamp: string;             // batchTimestamp } ```  ## Definition of Done  * `npm run lint`, `npm run typecheck` pass. * **≥ 50 %** line coverage on new unit tests (`npm test`). * LocalStack integration test proves a successful `PutRecords` call (screenshot/link in PR).   ## Acceptance Criteria  1. **Handler contract**     ```ts    publish(events: IngestEvent[]): Promise<PublishResult>;    ```     `PublishResult` returns per-record success / failure info.  2. Partition key is **`${tenantId}-${datasetId}`** to preserve order per dataset.  3. Batch meets Kinesis limits (≤ 500 records, ≤ 5 MB).  4. On partial failure: retry failed records up to **3× exponential back-off**, then throw `PublishError`.  6. Unit tests cover happy path, throttling retry, and hard failure.  ## Environment Variables  | Name             | Example      | Notes                     | | ---------------- | ------------ | ------------------------- | | `KINESIS_STREAM` | `events-raw` | Already in SSM Parameter. | | `AWS_REGION`     | `us-east-1`  | Default region.           | COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","42","170939570","Extend Enrichment Lambda to upsert Containers in OpenMetadata","closed","szahniy","","aspect::edge-connector","","2025-07-22T14:11:37.073Z","2025-09-19T14:52:31.496Z","","8","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/42","ISSUE TITLE: Extend Enrichment Lambda to upsert Containers in OpenMetadata STATE: closed AUTHOR: szahniy CREATED: 2025-07-22T14:11:37.073Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: The Enrichment service must turn each Kinesis record into a **Container** entity in OpenMetadata so downstream search, lineage, and policy flows work. Containers capture storage provider, region, lifecycle, and custom tags and map directly to the OpenMetadata `Container` entity.  Enhance the existing **Kinesis Receiver Lambda** by:  1. Parsing each event. 2. Calling **POST `/api/v1/containers`** (alias `createOrUpdateContainer`) when the container does not exist https://docs.open-metadata.org/swagger.html#operation/createOrUpdateContainer. 3. Calling **PATCH `/api/v1/containers/{id}`** (alias `patchContainer_1`) to add/update **custom properties** and tags defined in the schema (e.g. storageClass, region, geospatial) https://docs.open-metadata.org/swagger.html#operation/patchContainer_1.   ## Definition of Done  * `npm run lint`, `npm run typecheck` pass. * Unit tests coverage for the new client and handler. * Local integration test against **OpenMetadata quick-start** shows a created container (screenshot in PR).   ## Acceptance Criteria  | # | Scenario           | Success Condition                                                                                          | | - | ------------------ | ---------------------------------------------------------------------------------------------------------- | | 1 | New container      | Lambda receives record with bucket `my-data-bucket`, sends POST, receives `200/201`, logs `action=create`. | | 2 | Existing container | Lambda sends POST, server returns `200 Updated`, logs `action=update`.                                     | | 3 | Custom props       | PATCH request adds `storageClass`, `region`, `encryptionStatus`, `geospatial`, etc. from schema.                               | | 4 | Error handling     | 5xx responses retried 3 × exponential back-off; still failing → push to DLQ.                               | | 5 | Metrics hook       | Emits `ContainersCreated`, `ContainersUpdated`, `ContainerError`                  |   ## Quick-Start Skeleton  ```ts import axios, { AxiosInstance } from 'axios';  export class OMClient {   private api: AxiosInstance;    constructor() {     this.api = axios.create({       baseURL: process.env.OM_BASE_URL,       headers: { 'Authorization': `Bearer ${process.env.OM_API_TOKEN}` }     });   }    async upsertContainer(dto: ContainerDTO): Promise<string> {     const res = await this.api.post('/api/v1/containers', dto);     return res.data.id;        // 200 or 201   }    async patchContainer(id: string, patch: Partial<ContainerDTO>) {     await this.api.patch(`/api/v1/containers/${id}`, patch);   } } ```  ```ts for (const rec of events) {   const dto = mapToContainerDTO(rec.containerMetadata); // helper maps schema → OM   const id = await om.upsertContainer(dto);   await om.patchContainer(id, dto.customProperties); } ```  ### Mapping Rules  | Schema field                               | OM Container field            | | ------------------------------------------ | ----------------------------- | | `containerIdentifier.bucketName`           | `name`                        | | `storageProvider`                          | `service.type`                | | `location.region`                          | `service.location`            | | `storageClass`, `encryptionStatus`, `tags` | `customProperties`            | | `containerIdentifier.accountId`            | `owner` (placeholder for MVP) |   ## Environment Variables  | Name           | Example                        | Purpose                                 | | -------------- | ------------------------------ | --------------------------------------- | | `OM_BASE_URL`  | `https://metadata.example.com` | OpenMetadata server                     | | `OM_API_TOKEN` | `xyz123`                       | Bearer token with `ContainerAdmin` role | COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","43","171122770","Support GeoPDF Extraction with Python Lambda","opened","rcross3","","Ready|aspect::edge-connector","","2025-07-25T16:04:07.250Z","2025-09-22T14:58:24.305Z","","21","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/43","ISSUE TITLE: Support GeoPDF Extraction with Python Lambda STATE: opened AUTHOR: rcross3 CREATED: 2025-07-25T16:04:07.250Z LABELS: Ready, aspect::edge-connector ASSIGNEES:  DESCRIPTION: # Problem:  Geopdf format embedded metadata exists is defined in multiple specifications. For each, specifications spread components of a CRS across 1 - N references, These references can be formatted in N ways. CRS is just one piece of metadata we may be interested in.   The bundled gdal binary (our only option for lambda deployments), does not include the pdf driver required to parse geopdf metadata.  See:  https://github.com/mmomtchev/node-gdal-async?tab=readme-ov-file#using-in-amazon-linux-lambdas  https://github.com/mmomtchev/node-gdal-async/issues/230  Several approaches were discussed:   * Node EC2 with custom GDAL * eliminating/narrowing geopdf support *  Porting the edge connector to python * **Separate lambda for geo-pdf processing**   **Solution**:  Create a lambda that will be invoked by the edge connector to handle the geo-pdf of metadata parsing. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","44","171122824","Validate node-gdal-async bundled gdal version is approved software","closed","rcross3","","aspect::edge-connector","","2025-07-25T16:06:33.204Z","2025-09-19T14:52:31.737Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/44","ISSUE TITLE: Validate node-gdal-async bundled gdal version is approved software STATE: closed AUTHOR: rcross3 CREATED: 2025-07-25T16:06:33.204Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: One potential constraint of government environments is software scanning. If the bundled gdal of node-gdal-async is not approved software, it may require us to port the edge connector down the line to another language where we have more control over our biggest dependency for extraction (gdal). COMMENTS: None"
"atlas-datascience/lion/project-lion/schemas","71164198","2","171666890","Publish the contents of Schema package to a private registry for availability","closed","rcross3","alain.atemnkeng","","","2025-08-07T18:53:46.223Z","2025-08-22T17:20:10.168Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/schemas/-/issues/2","ISSUE TITLE: Publish the contents of Schema package to a private registry for availability STATE: closed AUTHOR: rcross3 CREATED: 2025-08-07T18:53:46.223Z LABELS:  ASSIGNEES: alain.atemnkeng DESCRIPTION: This PR contains the data we need to publish (type files and json data definitions)  https://gitlab.com/atlas-datascience/lion/project-lion/schemas/-/merge_requests/4/diffs#55a17771aab4c135a53acd3499cc04d6ca377d8e  Determine a method to make this available to other projects:  https://gitlab.com/atlas-datascience/lion/components/packages/npm COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","16","173838693","As Scrum Master I want to define and present Scrum process and workflow, generate backlog and board artifacts, facilitate Sprint planning, review and retrospective","closed","roy.mayfield","roy.mayfield","","","2025-08-11T06:07:26.465Z","2025-09-23T14:47:51.020Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/16","ISSUE TITLE: As Scrum Master I want to define and present Scrum process and workflow, generate backlog and board artifacts, facilitate Sprint planning, review and retrospective STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T06:07:26.465Z LABELS:  ASSIGNEES: roy.mayfield DESCRIPTION: Acceptance Criteria: 1. GitLab setup - Define Labels - Create Boards - define iterations  2. wiki entries with - process definition - sprint planning - sprint review - retrospective COMMENTS: None"
"atlas-datascience/lion/devops","71509248","1","171732704","As Scrum Master I want to define and present Scrum process and workflow, generate backlog and board artifacts, facilitate Sprint planning, review and retrospective","closed","roy.mayfield","roy.mayfield","","","2025-08-11T06:07:26.465Z","2025-09-23T14:47:50.157Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/1","ISSUE TITLE: As Scrum Master I want to define and present Scrum process and workflow, generate backlog and board artifacts, facilitate Sprint planning, review and retrospective STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T06:07:26.465Z LABELS:  ASSIGNEES: roy.mayfield DESCRIPTION: Acceptance Criteria: 1. GitLab setup - Define Labels - Create Boards - define iterations  2. wiki entries with - process definition - sprint planning - sprint review - retrospective COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","17","173838694","As TPM, I want to conduct backlog triage on Phase 1 to establish Foundation Build","closed","roy.mayfield","roy.mayfield","","","2025-08-11T06:15:01.565Z","2025-09-23T14:47:52.944Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/17","ISSUE TITLE: As TPM, I want to conduct backlog triage on Phase 1 to establish Foundation Build STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T06:15:01.565Z LABELS:  ASSIGNEES: roy.mayfield DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/devops","71509248","2","171732806","As TPM, I want to conduct backlog triage on Phase 1 to establish Foundation Build","closed","roy.mayfield","roy.mayfield","","","2025-08-11T06:15:01.565Z","2025-09-23T14:47:52.572Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/2","ISSUE TITLE: As TPM, I want to conduct backlog triage on Phase 1 to establish Foundation Build STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T06:15:01.565Z LABELS:  ASSIGNEES: roy.mayfield DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","18","173838695","As TPM, I want to review open and in-progress items with the team for items that require status update","closed","roy.mayfield","","","","2025-08-11T06:16:19.282Z","2025-09-23T14:47:56.568Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/18","ISSUE TITLE: As TPM, I want to review open and in-progress items with the team for items that require status update STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T06:16:19.282Z LABELS:  ASSIGNEES:  DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/devops","71509248","3","171732822","As TPM, I want to review open and in-progress items with the team for items that require status update","closed","roy.mayfield","","","","2025-08-11T06:16:19.282Z","2025-09-23T14:47:54.747Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/3","ISSUE TITLE: As TPM, I want to review open and in-progress items with the team for items that require status update STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T06:16:19.282Z LABELS:  ASSIGNEES:  DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","20","173838699","As Technical Lead I want to define a concrete end to end ingestion test plan","closed","roy.mayfield","szahniy","","","2025-08-11T16:37:23.289Z","2025-09-23T14:47:57.681Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/20","ISSUE TITLE: As Technical Lead I want to define a concrete end to end ingestion test plan STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T16:37:23.289Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/devops","71509248","4","171755108","As Technical Lead I want to define a concrete end to end ingestion test plan","closed","roy.mayfield","szahniy","","","2025-08-11T16:37:23.289Z","2025-09-23T14:47:57.386Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/4","ISSUE TITLE: As Technical Lead I want to define a concrete end to end ingestion test plan STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T16:37:23.289Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","21","173838701","As developer I want to be able to deliver Edge Connector as a Lambda function within the Lambda payload constraints","closed","roy.mayfield","rcross3","","","2025-08-11T16:42:27.149Z","2025-09-23T14:47:58.706Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/21","ISSUE TITLE: As developer I want to be able to deliver Edge Connector as a Lambda function within the Lambda payload constraints STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T16:42:27.149Z LABELS:  ASSIGNEES: rcross3 DESCRIPTION: Hypotheses:  - Solve the GDAL size. - Compiled libraries  Acceptance Criteria: 1. Archive file contains the function + dependencies within the hard limit. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","5","171755292","As developer I want to be able to deliver Edge Connector as a Lambda function within the Lambda payload constraints","closed","roy.mayfield","rcross3","","","2025-08-11T16:42:27.149Z","2025-09-23T14:47:58.521Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/5","ISSUE TITLE: As developer I want to be able to deliver Edge Connector as a Lambda function within the Lambda payload constraints STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T16:42:27.149Z LABELS:  ASSIGNEES: rcross3 DESCRIPTION: Hypotheses:  - Solve the GDAL size. - Compiled libraries  Acceptance Criteria: 1. Archive file contains the function + dependencies within the hard limit. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","22","173838703","As Developer I want to complete the Kinesis interface and implement Error codes","closed","roy.mayfield","chris.sonnenberg","","","2025-08-11T16:52:25.814Z","2025-09-23T14:48:00.183Z","","5","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/22","ISSUE TITLE: As Developer I want to complete the Kinesis interface and implement Error codes STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T16:52:25.814Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: Acceptance Criteria: 1. Happy path unit test. 2. Schema validation 3. Kinesis logic COMMENTS: None"
"atlas-datascience/lion/devops","71509248","6","171755640","As Developer I want to complete the Kinesis interface and implement Error codes","closed","roy.mayfield","chris.sonnenberg","","","2025-08-11T16:52:25.814Z","2025-09-23T14:48:00.017Z","","5","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/6","ISSUE TITLE: As Developer I want to complete the Kinesis interface and implement Error codes STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T16:52:25.814Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: Acceptance Criteria: 1. Happy path unit test. 2. Schema validation 3. Kinesis logic COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","23","173838706","As Solution Architect I want to have a clear understanding of how OPA will integrate to different components","closed","roy.mayfield","rprice314","","","2025-08-11T17:02:19.480Z","2025-09-23T14:48:01.449Z","","8","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/23","ISSUE TITLE: As Solution Architect I want to have a clear understanding of how OPA will integrate to different components STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T17:02:19.480Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: Acceptance Criteria: 1. Document with - visual architecture diagram - technology stack - underlying infrastructure - example usage of policies - OMD Entities (objects) COMMENTS: None"
"atlas-datascience/lion/devops","71509248","7","171756028","As Solution Architect I want to have a clear understanding of how OPA will integrate to different components","closed","roy.mayfield","rprice314","","","2025-08-11T17:02:19.480Z","2025-09-23T14:48:01.279Z","","8","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/7","ISSUE TITLE: As Solution Architect I want to have a clear understanding of how OPA will integrate to different components STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T17:02:19.480Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: Acceptance Criteria: 1. Document with - visual architecture diagram - technology stack - underlying infrastructure - example usage of policies - OMD Entities (objects) COMMENTS: None"
"atlas-datascience/lion/infrastructure/aws/master-network","71529533","3","171756206","As Platform Engineer I need to test and evaluate the Master Network design","closed","roy.mayfield","pierreo32","","","2025-08-11T17:07:17.925Z","2025-09-05T18:39:55.442Z","","5","false","https://gitlab.com/atlas-datascience/lion/infrastructure/aws/master-network/-/issues/3","ISSUE TITLE: As Platform Engineer I need to test and evaluate the Master Network design STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T17:07:17.925Z LABELS:  ASSIGNEES: pierreo32 DESCRIPTION: Acceptance Criteria: 1. All egress traffic is routed through correct resources - AWS service request will traverse through defined VPC endpoints in the management network. - Public endpoint request will traverse through defined NAT gateway in the main network. 2. All ingress traffic will route through the network DMZ established in the management network to its appropriate target in the underlying networks. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","24","173838708","As Architect I want to create a basic site map for the front end","closed","roy.mayfield","szahniy","","","2025-08-11T17:16:15.711Z","2025-09-23T14:48:02.875Z","","5","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/24","ISSUE TITLE: As Architect I want to create a basic site map for the front end STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T17:16:15.711Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: Acceptance Criteria: - Front end design Wiki page COMMENTS: None"
"atlas-datascience/lion/devops","71509248","8","171756694","As Architect I want to create a basic site map for the front end","closed","roy.mayfield","szahniy","","","2025-08-11T17:16:15.711Z","2025-09-23T14:48:02.563Z","","5","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/8","ISSUE TITLE: As Architect I want to create a basic site map for the front end STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T17:16:15.711Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: Acceptance Criteria: - Front end design Wiki page COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","25","173838709","As Architect I want to define API Standards","closed","roy.mayfield","szahniy","","","2025-08-11T17:20:50.488Z","2025-09-23T14:48:03.941Z","","5","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/25","ISSUE TITLE: As Architect I want to define API Standards STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T17:20:50.488Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: Acceptance Criteria: - API Standards Wiki page COMMENTS: None"
"atlas-datascience/lion/devops","71509248","9","171756880","As Architect I want to define API Standards","closed","roy.mayfield","szahniy","","","2025-08-11T17:20:50.488Z","2025-09-23T14:48:03.674Z","","5","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/9","ISSUE TITLE: As Architect I want to define API Standards STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T17:20:50.488Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: Acceptance Criteria: - API Standards Wiki page COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","15","173838315","As Architect I want to create application logging design","opened","roy.mayfield","szahniy","In Progress|aspect::platform","","2025-08-11T17:22:27.387Z","2025-09-23T14:51:45.733Z","","5","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/15","ISSUE TITLE: As Architect I want to create application logging design STATE: opened AUTHOR: roy.mayfield CREATED: 2025-08-11T17:22:27.387Z LABELS: In Progress, aspect::platform ASSIGNEES: szahniy DESCRIPTION: Document minimal structured logging for Web, API, Broker, and OM authorizer. Define fields, sampling, and storage for dev/stage only.  Acceptance Criteria: - Application logging design Wiki page - Logging fields table and examples committed. - JSON log line sample per service. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","10","171756959","As Architect I want to create application logging design","closed","roy.mayfield","szahniy","Sprint Ready|aspect::platform","","2025-08-11T17:22:27.387Z","2025-09-24T13:17:00.985Z","","5","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/10","ISSUE TITLE: As Architect I want to create application logging design STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-11T17:22:27.387Z LABELS: Sprint Ready, aspect::platform ASSIGNEES: szahniy DESCRIPTION: Document minimal structured logging for Web, API, Broker, and OM authorizer. Define fields, sampling, and storage for dev/stage only.  Acceptance Criteria: - Application logging design Wiki page - Logging fields table and examples committed. - JSON log line sample per service. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","1","171811663","Bulk Insert Enriched Data into OpenSearch","closed","johndmema","johndmema","","","2025-08-12T19:19:57.740Z","2025-08-14T13:32:03.102Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/1","ISSUE TITLE: Bulk Insert Enriched Data into OpenSearch STATE: closed AUTHOR: johndmema CREATED: 2025-08-12T19:19:57.740Z LABELS:  ASSIGNEES: johndmema DESCRIPTION: Implement bulk insertion of enriched data into OpenSearch using the _bulk API. Update enrichment pipeline to push results to OpenSearch. Add documentation with mapping, bulk format, and example queries. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","45","171864613","Fail SQSRecords that don't reach the Kinesis stream","closed","rcross3","rcross3","aspect::edge-connector","","2025-08-13T21:35:59.581Z","2025-09-19T14:52:31.984Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/45","ISSUE TITLE: Fail SQSRecords that don't reach the Kinesis stream STATE: closed AUTHOR: rcross3 CREATED: 2025-08-13T21:35:59.581Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: Edge connector considers SQS Records successfully processed it if it reaches Ingestion Gateway.  Adjust partial batching strategy such that edge connector can respond when IG sends a list of any associated Edge Connector records that failed to reach the stream. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","19","173838697","Develop Python Issue Extractor for MS Project Integration","closed","roy.mayfield","","","","2025-08-15T13:59:35.208Z","2025-09-23T14:47:56.111Z","","","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/work_items/19","ISSUE TITLE: Develop Python Issue Extractor for MS Project Integration STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-15T13:59:35.208Z LABELS:  ASSIGNEES:  DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/devops","71509248","11","171948041","Develop Python Issue Extractor for MS Project Integration","closed","roy.mayfield","","","","2025-08-15T13:59:35.208Z","2025-09-23T14:47:55.727Z","","","false","https://gitlab.com/atlas-datascience/lion/devops/-/work_items/11","ISSUE TITLE: Develop Python Issue Extractor for MS Project Integration STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-15T13:59:35.208Z LABELS:  ASSIGNEES:  DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","9","171949115","Deploy ingestion gateway to localstack","closed","chris.sonnenberg","chris.sonnenberg","","","2025-08-15T14:30:15.801Z","2025-08-22T17:34:41.202Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/work_items/9","ISSUE TITLE: Deploy ingestion gateway to localstack STATE: closed AUTHOR: chris.sonnenberg CREATED: 2025-08-15T14:30:15.801Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: Currently the ingestion gateway only works with a local function call or through unit tests. We need to be able to deploy this to localstack lambda. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","46","172044901","Filter extraction performed on received DELETE events","closed","rcross3","","aspect::edge-connector","","2025-08-18T15:51:11.356Z","2025-09-19T14:52:32.183Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/46","ISSUE TITLE: Filter extraction performed on received DELETE events STATE: closed AUTHOR: rcross3 CREATED: 2025-08-18T15:51:11.356Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: Edge connector should ingest and forward delete events as edge connector events, but the certain types of extraction (e.g. retrieving tags), need to be skipped.  **_Success Criteria_**   Determine the best design for filtering extraction based on event-type   Edge connector limits the amount of extraction performed during delete events to avoid extraction errors that can keep a record from processing successfully COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","47","172115045","Utilize privately published schemas package over hardcoded solution","closed","rcross3","rcross3","aspect::edge-connector","","2025-08-19T16:10:17.217Z","2025-09-19T14:52:32.378Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/47","ISSUE TITLE: Utilize privately published schemas package over hardcoded solution STATE: closed AUTHOR: rcross3 CREATED: 2025-08-19T16:10:17.217Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: With the creation of the lion private registry, validate the schemas package is exporting resources correctly by replacing the temporary hardcoded solution in edge-connector  _Success Criteria_   * Validate schemas package exports resources (d.ts and json files as expected) * Refactor build step such that .npmrc used to get gdal binaries does not replace a users .npmrc * Create .npmrc.ci & .npmrc.template files in repository COMMENTS: None"
"atlas-datascience/lion/project-lion/schemas","71164198","3","172126265","Setup User Schema","closed","rprice314","rprice314","","","2025-08-19T22:14:11.548Z","2025-08-25T18:02:04.925Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/schemas/-/issues/3","ISSUE TITLE: Setup User Schema STATE: closed AUTHOR: rprice314 CREATED: 2025-08-19T22:14:11.548Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: As a data engineer I need to create a standard user schema that will be used for application authorization  Acceptance Criteria:  Schema is available in git schemas repo Schema is documented COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","5","172126353","Add rego s3 buckets","closed","rprice314","rprice314","","","2025-08-19T22:16:18.289Z","2025-08-25T18:27:56.833Z","","1","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/5","ISSUE TITLE: Add rego s3 buckets STATE: closed AUTHOR: rprice314 CREATED: 2025-08-19T22:16:18.289Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: As a developer I need to add the s3 rego buckets to the local developer environment so that the OPA implementation can be tested locally.  Acceptance Criteria  S3 buckets are available in LocalStack S3 buckets follow the format specified in the OPA plan COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","6","172126730","Add SNS Topic for OPA","closed","rprice314","rprice314","aspect::catalog","","2025-08-19T22:17:59.388Z","2025-09-19T18:38:51.162Z","","1","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/6","ISSUE TITLE: Add SNS Topic for OPA STATE: closed AUTHOR: rprice314 CREATED: 2025-08-19T22:17:59.388Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As a developer I need to implement a SNS topic that listens to the OPA s3 buckets so that OPA deployments can be tested locally  Acceptance Criteria  SNS Topic creates notifications whenever a change is made to content in the OPA s3 buckets COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/pipelines","71129638","2","172126773","Rego Validation Pipeline","closed","rprice314","rprice314","aspect::catalog","","2025-08-19T22:21:25.581Z","2025-09-08T14:49:19.109Z","","8","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/pipelines/-/issues/2","ISSUE TITLE: Rego Validation Pipeline STATE: closed AUTHOR: rprice314 CREATED: 2025-08-19T22:21:25.581Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As a DevOps engineer I need to implement a gitlab CICD pipeline that validates and packages OPA wasm bundles so that OPA wasm bundles can be deployed to services  Acceptance Criteria  Gitlab CICD pipeline is in place that validates OPA wasm bundles Gitlab CICD pipeline follows the steps contained in the OPA plan COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/utility","69912988","1","172126860","Spike: WASM Build Process","closed","rprice314","rprice314","aspect::catalog","","2025-08-19T22:25:39.812Z","2025-09-08T14:48:18.206Z","","5","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/utility/-/issues/1","ISSUE TITLE: Spike: WASM Build Process STATE: closed AUTHOR: rprice314 CREATED: 2025-08-19T22:25:39.812Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As a developer I need to do a spike to determine the best way to bundle the OPA wasm build process with lambda   Acceptance Criteria  An approach to use wasm with lambda is identified COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/utility","69912988","2","172126908","Rego Gitlab Configuration","closed","rprice314","rprice314","aspect::catalog","","2025-08-19T22:28:27.916Z","2025-09-05T18:25:40.823Z","","1","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/utility/-/issues/2","ISSUE TITLE: Rego Gitlab Configuration STATE: closed AUTHOR: rprice314 CREATED: 2025-08-19T22:28:27.916Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As a DevOps engineer I need to create a repo in gitlab to manage OPA rego policies so that OPA policies can be tested  Acceptance Criteria  Git repo is available that can be used to store OPA policies Git repo follows the structure outlined in the OPA plan COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","7","172126983","Create Example Policies","closed","rprice314","rprice314","","","2025-08-19T22:31:44.069Z","2025-08-25T18:27:56.903Z","","2","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/7","ISSUE TITLE: Create Example Policies STATE: closed AUTHOR: rprice314 CREATED: 2025-08-19T22:31:44.069Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: As a data engineer I need to create example rego policies for data filtering and data tagging so that OPA can be tested in end to end testing  Acceptance Criteria  An example policy for data filtering is available in the LocalStack OPA policy bucket An example policy for data tagging is available in the LocalStack OPA policy bucket COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","8","172127026","IDP Mock Data","closed","rprice314","rprice314","","","2025-08-19T22:34:10.882Z","2025-08-25T18:27:51.915Z","","1","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/8","ISSUE TITLE: IDP Mock Data STATE: closed AUTHOR: rprice314 CREATED: 2025-08-19T22:34:10.882Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: As a data engineer I need to create mock user data so that OPA policies can be tested without having an identity provider  Acceptance Criteria  Mock admin user schema is available for usage Mock data steward schema is available for usage Mock general user schema is available for usage COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","10","172159565","Ingestion gateway e2e testing","closed","chris.sonnenberg","chris.sonnenberg","","","2025-08-20T15:21:26.495Z","2025-08-22T17:33:32.581Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/work_items/10","ISSUE TITLE: Ingestion gateway e2e testing STATE: closed AUTHOR: chris.sonnenberg CREATED: 2025-08-20T15:21:26.495Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: Test ingestion gateway and note any bugs that show up. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","48","172165501","Edge Connector schema validation fixes","closed","chris.sonnenberg","chris.sonnenberg","aspect::edge-connector","","2025-08-20T16:25:05.282Z","2025-09-19T14:52:32.772Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/48","ISSUE TITLE: Edge Connector schema validation fixes STATE: closed AUTHOR: chris.sonnenberg CREATED: 2025-08-20T16:25:05.282Z LABELS: aspect::edge-connector ASSIGNEES: chris.sonnenberg DESCRIPTION: The edge connector currently output keys that dont match the schema. Need to fix key generation and validate schema properly. COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","49","172173801","Bug: Idempotency Key Gen & Schema Validation","closed","rcross3","rcross3|chris.sonnenberg","aspect::edge-connector","","2025-08-20T17:45:56.261Z","2025-09-19T14:52:33.097Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/49","ISSUE TITLE: Bug: Idempotency Key Gen & Schema Validation STATE: closed AUTHOR: rcross3 CREATED: 2025-08-20T17:45:56.261Z LABELS: aspect::edge-connector ASSIGNEES: rcross3, chris.sonnenberg DESCRIPTION: Issue identified during e2e with idempotency key gen not matching requirements and a schema validation error silently failing in edge. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","2","172226895","Update record with CorrelationID","closed","johndmema","rcross3|johndmema|chris.sonnenberg","","","2025-08-21T14:44:40.431Z","2025-08-22T17:39:22.101Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/2","ISSUE TITLE: Update record with CorrelationID STATE: closed AUTHOR: johndmema CREATED: 2025-08-21T14:44:40.431Z LABELS:  ASSIGNEES: rcross3, johndmema, chris.sonnenberg DESCRIPTION: Verified the correlationID was passed along correctly, fixed open-metadata-client to handle batches.  https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/merge_requests/2 COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","50","172245107","Adjust strategy for records with failed Geospatial Extractions such that they propagate to ingestion gateway","closed","rcross3","rcross3","aspect::edge-connector","","2025-08-21T18:48:42.911Z","2025-09-19T14:52:33.305Z","","8","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/50","ISSUE TITLE: Adjust strategy for records with failed Geospatial Extractions such that they propagate to ingestion gateway STATE: closed AUTHOR: rcross3 CREATED: 2025-08-21T18:48:42.911Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: From an **asset recording perspective**, events that fail geospatial extraction due to the state of the S3 bucket at event processing runtime need to be propagated to the ingestion gateway, even if that means geospatial metadata will not be available.   Currently, the edge connector intentionally fails records when certain types of failure occur during a `geospatialExtractor.extract()` call.  An example of this that .shp  asset will be marked as a failure if at the time of processing GDAL does not find all it's auxilary files to be present in the S3 bucket at processing time.   **Acceptance Criteria:**  Should be discussed with team to land on what a true record """"failure"""" means from edge connector perspective.   Then adjust code in geospatial extractor and other areas accordingly to reflect the updated failure/leniency strategy. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","11","172246687","Report jest coverage","closed","chris.sonnenberg","chris.sonnenberg","","","2025-08-21T19:25:51.000Z","2025-08-22T17:33:21.920Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/work_items/11","ISSUE TITLE: Report jest coverage STATE: closed AUTHOR: chris.sonnenberg CREATED: 2025-08-21T19:25:51.000Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/merge_requests/9 COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","12","172246846","fix up .env-examples","closed","chris.sonnenberg","chris.sonnenberg","","","2025-08-21T19:31:42.133Z","2025-09-06T13:40:25.816Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/work_items/12","ISSUE TITLE: fix up .env-examples STATE: closed AUTHOR: chris.sonnenberg CREATED: 2025-08-21T19:31:42.133Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: While watching another dev setup the env for the first time, it was clear all the .env-examples and readmes were wrong. The e2e wiki was generally correct.  we need to fix up all docs and .env-examples to be correct for the current implementation. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","3","172248952","[Spike] Research predecessor enrichment process","closed","szahniy","johndmema","","","2025-08-21T20:21:30.622Z","2025-08-29T18:11:37.858Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/3","ISSUE TITLE: [Spike] Research predecessor enrichment process STATE: closed AUTHOR: szahniy CREATED: 2025-08-21T20:21:30.622Z LABELS:  ASSIGNEES: johndmema DESCRIPTION: Below has the conditioning processors from the prior solution. inventory-assurance-labeling is security labeling which will be different since we are using OPA and not the native db solution. Geospatial-conditioning is what populated the geospatial information. We have db procedures for that when that development starts. Datum conditioning populated spatial datum info. The entity-mapping will no be used since we aren't mapping to a common schema like NMF.  https://gitlab.com/atlas-datascience/lion/core/data-in/extract-transform-load/inventory-enhancement/conditioning  Acceptance Criteria: - Create tickets with implementation plan for enrichment by adding tags/labeling, Geospatial-conditioning and Datum conditioning similar to predecessor; COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","13","172287852","JWT authentication and tenant extraction","closed","szahniy","chris.sonnenberg","","","2025-08-22T15:02:47.116Z","2025-08-26T20:37:13.726Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/13","ISSUE TITLE: JWT authentication and tenant extraction STATE: closed AUTHOR: szahniy CREATED: 2025-08-22T15:02:47.116Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: Extract JWT and TenantId from incoming requests stamp each batch/record. Reject unauthenticated/unauthorized calls.   Acceptance criteria:  - Requests without a valid JWT return 401/403. - TenantId is extracted from JWT and added to outgoing Kinesis payloads. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/enrichment-functions/labeling","71561032","1","172289366","Spike: Evaluate Cerbos","closed","rprice314","rprice314","","","2025-08-22T15:16:16.639Z","2025-08-29T18:07:54.363Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/enrichment-functions/labeling/-/issues/1","ISSUE TITLE: Spike: Evaluate Cerbos STATE: closed AUTHOR: rprice314 CREATED: 2025-08-22T15:16:16.639Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: As a data engineer I need to evaluate Cerbos so that I can dtermine if it is a better fit than OPA for security policy management  Acceptance Criteria  Produce document that has a pros/cons of Cerbos Determine if Cerbos can do realtime filtering in OpenSearch Determine if Cerbos has a web assembly component similar to OPA COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/enrichment-functions/geo-political-determination","71561102","1","172290258","Create Process to Maintain GeoPolical Boundary Data","opened","rprice314","rprice314","Ready|aspect::catalog","","2025-08-22T15:24:08.784Z","2025-09-18T19:10:06.901Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/enrichment-functions/geo-political-determination/-/issues/1","ISSUE TITLE: Create Process to Maintain GeoPolical Boundary Data STATE: opened AUTHOR: rprice314 CREATED: 2025-08-22T15:24:08.784Z LABELS: Ready, aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As a data engineer I need to create a process that populates and maintains geopolitical boundary data so that our services can assign the correct country attributes to ingested data  Acceptance Criteria  - Establish structure: schema, data structure - Provide administrative SOP to update the dataset - Geopolitical data is available in the postgres database - Process success and failure is logged and is available for analysis COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/enrichment-functions/geo-political-determination","71561102","2","172290378","Create Country Code Service","closed","rprice314","","Backlog","","2025-08-22T15:27:20.135Z","2025-09-02T16:52:31.393Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/enrichment-functions/geo-political-determination/-/issues/2","ISSUE TITLE: Create Country Code Service STATE: closed AUTHOR: rprice314 CREATED: 2025-08-22T15:27:20.135Z LABELS: Backlog ASSIGNEES:  DESCRIPTION: As a developer I need to create a web service that returns country code information based on a provided spatial area so that the enrichment process can associate country code information with ingested data.  Acceptance Criteria  Country code service is available that takes in a spatial area in well known text or geojson format and returns country code information Service meets unit testing requirements COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","51","172294274","As a Edge connector I want to store JTW token and TenantID that get passed to IG","opened","szahniy","chris.sonnenberg","Closed|aspect::edge-connector","","2025-08-22T17:16:14.078Z","2025-09-18T21:08:31.746Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/51","ISSUE TITLE: As a Edge connector I want to store JTW token and TenantID that get passed to IG STATE: opened AUTHOR: szahniy CREATED: 2025-08-22T17:16:14.078Z LABELS: Closed, aspect::edge-connector ASSIGNEES: chris.sonnenberg DESCRIPTION: We need to implement configuration that storing JWT token generated in OpenMetadata and pass it downstream to IG  Acceptance Criteria: - Store JWT token and TenantID in EDGE configuration; - Pass JWT/TenantID with each request to IG COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","6","172294760","As Enrichment service I want to receive TenantId and use it to insert data into OM","closed","szahniy","johndmema","aspect::enrichment","","2025-08-22T17:19:53.763Z","2025-09-19T18:48:21.699Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/6","ISSUE TITLE: As Enrichment service I want to receive TenantId and use it to insert data into OM STATE: closed AUTHOR: szahniy CREATED: 2025-08-22T17:19:53.763Z LABELS: aspect::enrichment ASSIGNEES: johndmema DESCRIPTION: We need to implement to use TenantId passed from Kinesis and use it to insert data into OpenMetadata  Acceptance Criteria: - receive TenantId from Kinesis; - Use received tenantId to create records in OM COMMENTS: None"
"atlas-datascience/lion/infrastructure/aws/environment-networks","71529570","2","172295084","Deploy target account runners and test that they can deploy jobs in target accounts","closed","alain.atemnkeng","pierreo32","","","2025-08-22T17:29:28.991Z","2025-09-04T15:09:53.923Z","","3","false","https://gitlab.com/atlas-datascience/lion/infrastructure/aws/environment-networks/-/work_items/2","ISSUE TITLE: Deploy target account runners and test that they can deploy jobs in target accounts STATE: closed AUTHOR: alain.atemnkeng CREATED: 2025-08-22T17:29:28.991Z LABELS:  ASSIGNEES: pierreo32 DESCRIPTION: Since the master network is now correctly deployed, we need to ensure that the target account runners are deployed with the new network infrastructure.   When this task is complete, all runners should be on and run jobs without errors The whole runner infra should be deployed with Terraform. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","14","172295092","Use schema from internal npm","closed","chris.sonnenberg","chris.sonnenberg","","","2025-08-22T17:29:47.799Z","2025-08-29T18:33:11.710Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/work_items/14","ISSUE TITLE: Use schema from internal npm STATE: closed AUTHOR: chris.sonnenberg CREATED: 2025-08-22T17:29:47.799Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: switch to using the internal npm repo for schema instead of hardcoded ts file. check https://gitlab.com/atlas-datascience/lion/project-lion/edge-connector/-/merge_requests/10  https://gitlab.com/atlas-datascience/lion/project-lion/edge-connector/-/issues/47  there's still some work, so wait until that MR is merged. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","9","172295175","As Architect I need to create ticket API wrapper and UI","closed","szahniy","szahniy","","","2025-08-22T17:32:55.844Z","2025-08-29T18:12:38.596Z","","5","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/9","ISSUE TITLE: As Architect I need to create ticket API wrapper and UI STATE: closed AUTHOR: szahniy CREATED: 2025-08-22T17:32:55.844Z LABELS:  ASSIGNEES: szahniy DESCRIPTION: Based on [wiki](https://gitlab.com/groups/atlas-datascience/lion/-/wikis/Project-Lion-Platform/Architecture/Components/UI-and-SDKs) I need to create tickets for the team to start implementing API and UI  Acceptance Criteria: - Tickets created for API wrapper; - Tickets created for UI COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","7","172296496","Investigate OpenSearch","closed","johndmema","","","","2025-08-22T18:06:56.094Z","2025-08-25T17:16:04.871Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/7","ISSUE TITLE: Investigate OpenSearch STATE: closed AUTHOR: johndmema CREATED: 2025-08-22T18:06:56.094Z LABELS:  ASSIGNEES:  DESCRIPTION:  COMMENTS: None"
"atlas-datascience/lion/predecessor/components/packages/npm/nestjs-logger","67359408","1","172297767","Fix issue with installing the newer npm packages using the runner","closed","alain.atemnkeng","alain.atemnkeng","Sprint Ready","","2025-08-22T18:30:40.878Z","2025-08-27T14:49:33.287Z","","3","false","https://gitlab.com/atlas-datascience/lion/predecessor/components/packages/npm/nestjs-logger/-/issues/1","ISSUE TITLE: Fix issue with installing the newer npm packages using the runner STATE: closed AUTHOR: alain.atemnkeng CREATED: 2025-08-22T18:30:40.878Z LABELS: Sprint Ready ASSIGNEES: alain.atemnkeng DESCRIPTION: Installing package version 1.0.0 on the runner works, but newer packages are showing some errors that we need to find a solution to. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","26","173838711","test","closed","roy.mayfield","","","","2025-08-25T17:34:36.073Z","2025-09-23T14:48:05.557Z","","","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/26","ISSUE TITLE: test STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-25T17:34:36.073Z LABELS:  ASSIGNEES:  DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/devops","71509248","12","172402608","test","closed","roy.mayfield","","","","2025-08-25T17:34:36.073Z","2025-09-23T14:48:05.177Z","","","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/12","ISSUE TITLE: test STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-25T17:34:36.073Z LABELS:  ASSIGNEES:  DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/predecessor/core/catalog/apis/lion","67573033","1","172404206","As PE I want to review 3 User Stories under review","closed","roy.mayfield","alain.atemnkeng","","","2025-08-25T18:21:11.962Z","2025-08-29T18:18:57.482Z","","3","false","https://gitlab.com/atlas-datascience/lion/predecessor/core/catalog/apis/lion/-/issues/1","ISSUE TITLE: As PE I want to review 3 User Stories under review STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-25T18:21:11.962Z LABELS:  ASSIGNEES: alain.atemnkeng DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","40","173838736","As Platform Engineer I want to develop production architecture design","opened","roy.mayfield","pierreo32","Sprint Ready|aspect::enrichment","","2025-08-25T18:56:37.869Z","2025-09-23T14:54:11.899Z","","8","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/40","ISSUE TITLE: As Platform Engineer I want to develop production architecture design STATE: opened AUTHOR: roy.mayfield CREATED: 2025-08-25T18:56:37.869Z LABELS: Sprint Ready, aspect::enrichment ASSIGNEES: pierreo32 DESCRIPTION: As a platform engineer I need to devise a plan for the delivery of the core services supporting Paxium (i.e. Open Metadata, Postgres/gis, OPA, etc.). Review OpenMetadata recommendations for a production delivery of the API, DB and supporting services. Review existing projects and team architecture documentation. Construct documentation that establish a baseline approach for deploying and configuring each of these pieces:  * Open Metadata API * Postgres DB with PostGis Extension * Open Metadata Ingestion (Apache Airflow) * OpenSearch * Open Policy Agent * Redis  Acceptance Criteria:  * A documented strategy that deploys and configures the Paxium core so as to mimic the services and configuration demonstrated in the Local Environment project.   * A services architecture diagram the shows the interconnected relationship between the core components.   * Architecture diagrams that demonstrate the architectural layout of each component and the relationship to additional AWS services.   * A Network diagram that shows the traffic in and out of the Master Network routed to the underlying target VPC.   * A Network diagram that shows the placement of each component into the VPC, the flow of traffic in and out of the target VPC, Security groups with ingress and egress rules.   * Creation of new Tickets to deploy Core Paxium components to AWS; COMMENTS: None"
"atlas-datascience/lion/devops","71509248","28","173674379","As Platform Engineer I want to develop production architecture design","closed","roy.mayfield","pierreo32","Sprint Ready|aspect::enrichment","","2025-08-25T18:56:37.869Z","2025-09-24T13:18:03.438Z","","8","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/28","ISSUE TITLE: As Platform Engineer I want to develop production architecture design STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-25T18:56:37.869Z LABELS: Sprint Ready, aspect::enrichment ASSIGNEES: pierreo32 DESCRIPTION: As a platform engineer I need to devise a plan for the delivery of the core services supporting Paxium (i.e. Open Metadata, Postgres/gis, OPA, etc.). Review OpenMetadata recommendations for a production delivery of the API, DB and supporting services. Review existing projects and team architecture documentation. Construct documentation that establish a baseline approach for deploying and configuring each of these pieces:  * Open Metadata API * Postgres DB with PostGis Extension * Open Metadata Ingestion (Apache Airflow) * OpenSearch * Open Policy Agent * Redis  Acceptance Criteria:  * A documented strategy that deploys and configures the Paxium core so as to mimic the services and configuration demonstrated in the Local Environment project.   * A services architecture diagram the shows the interconnected relationship between the core components.   * Architecture diagrams that demonstrate the architectural layout of each component and the relationship to additional AWS services.   * A Network diagram that shows the traffic in and out of the Master Network routed to the underlying target VPC.   * A Network diagram that shows the placement of each component into the VPC, the flow of traffic in and out of the target VPC, Security groups with ingress and egress rules.   * Creation of new Tickets to deploy Core Paxium components to AWS; COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","8","172405555","As Platform Engineer I want to develop production architecture design","closed","roy.mayfield","pierreo32","Sprint Ready|aspect::enrichment","","2025-08-25T18:56:37.869Z","2025-09-19T14:58:05.696Z","","8","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/8","ISSUE TITLE: As Platform Engineer I want to develop production architecture design STATE: closed AUTHOR: roy.mayfield CREATED: 2025-08-25T18:56:37.869Z LABELS: Sprint Ready, aspect::enrichment ASSIGNEES: pierreo32 DESCRIPTION: As a platform engineer I need to devise a plan for the delivery of the core services supporting Paxium (i.e. Open Metadata, Postgres/gis, OPA, etc.). Review OpenMetadata recommendations for a production delivery of the API, DB and supporting services. Review existing projects and team architecture documentation. Construct documentation that establish a baseline approach for deploying and configuring each of these pieces:  * Open Metadata API * Postgres DB with PostGis Extension * Open Metadata Ingestion (Apache Airflow) * OpenSearch * Open Policy Agent * Redis  Acceptance Criteria:  * A documented strategy that deploys and configures the Paxium core so as to mimic the services and configuration demonstrated in the Local Environment project.   * A services architecture diagram the shows the interconnected relationship between the core components.   * Architecture diagrams that demonstrate the architectural layout of each component and the relationship to additional AWS services.   * A Network diagram that shows the traffic in and out of the Master Network routed to the underlying target VPC.   * A Network diagram that shows the placement of each component into the VPC, the flow of traffic in and out of the target VPC, Security groups with ingress and egress rules.   * Creation of new Tickets to deploy Core Paxium components to AWS; COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","9","172407268","Implement Coordinate Standardization","closed","johndmema","johndmema","aspect::enrichment","","2025-08-25T19:54:44.334Z","2025-08-27T20:58:07.850Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/work_items/9","ISSUE TITLE: Implement Coordinate Standardization STATE: closed AUTHOR: johndmema CREATED: 2025-08-25T19:54:44.334Z LABELS: aspect::enrichment ASSIGNEES: johndmema DESCRIPTION: Build coordinate system standardization to normalize all geometries to WGS84 using PostGIS transformation functions. In the predecessor we utilized Oracle Spatial. The enrichment pipeline will detect source coordinate systems from geometry metadata, transform non-WGS84 geometries to WGS84 standard, and include normalized geometry data in container payloads for consistent downstream spatial operations.  Acceptance Criteria:  PostGIS coordinate transformation functions are integrated and functional Non-WGS84 geometries are successfully transformed to WGS84 Container payloads include normalized geometry data COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","10","172407291","Implement Geospatial Conditioning","opened","johndmema","","Under Review|aspect::enrichment","","2025-08-25T19:55:56.429Z","2025-08-28T20:23:50.671Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/work_items/10","ISSUE TITLE: Implement Geospatial Conditioning STATE: opened AUTHOR: johndmema CREATED: 2025-08-25T19:55:56.429Z LABELS: Under Review, aspect::enrichment ASSIGNEES:  DESCRIPTION: Extend OpenMetadata with geospatial conditioning capabilities. This will allow ingested records to be enriched with spatial context (GeoJSON + country metadata) based on their metadata attributes (geoTransform, rasterSize, or existing geoJson).  Acceptance Criteria: Records are enriched with GeoJSON and country metadata. The generated GeoJSON is stored and visible in the OpenMetadata UI. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","11","172407316","Implement Security Labeling via OPA","closed","johndmema","johndmema","Sprint Ready|aspect::enrichment","","2025-08-25T19:57:33.526Z","2025-09-08T15:00:59.030Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/work_items/11","ISSUE TITLE: Implement Security Labeling via OPA STATE: closed AUTHOR: johndmema CREATED: 2025-08-25T19:57:33.526Z LABELS: Sprint Ready, aspect::enrichment ASSIGNEES: johndmema DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","52","172441420","Gitlab Repos can install @lion packages via CI","closed","rcross3","rcross3|alain.atemnkeng","Closed|aspect::edge-connector","","2025-08-26T15:24:25.820Z","2025-09-19T14:52:33.518Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/52","ISSUE TITLE: Gitlab Repos can install @lion packages via CI STATE: closed AUTHOR: rcross3 CREATED: 2025-08-26T15:24:25.820Z LABELS: Closed, aspect::edge-connector ASSIGNEES: rcross3, alain.atemnkeng DESCRIPTION: **Success Criteria**  Set up Project Lion Repositories such that CI runners will find and install any '@lion' private registry packages via an \``` npm install` `` COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/enrichment-functions/coordinate-conditioning","71561062","1","172466080","Create GeoTransform Database Function","closed","rprice314","rprice314","aspect::catalog","","2025-08-27T01:43:33.069Z","2025-08-29T18:08:54.713Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/enrichment-functions/coordinate-conditioning/-/issues/1","ISSUE TITLE: Create GeoTransform Database Function STATE: closed AUTHOR: rprice314 CREATED: 2025-08-27T01:43:33.069Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As a data engineer I need to implement a process to transform geoTransform and rasterSize into geojson so that the catalog can store geojson geometries for ingested data  Acceptance Criteria  Database function is available that takes in rasterSize and geoTransform attributes from the edge connector and returns a geometry in geojson format Database function is added to the flyway data migration scripts in the local environment COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","12","172513286","Switch to private registry for schemas","closed","johndmema","","In Progress|aspect::enrichment","","2025-08-27T21:00:14.120Z","2025-08-28T20:24:58.251Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/work_items/12","ISSUE TITLE: Switch to private registry for schemas STATE: closed AUTHOR: johndmema CREATED: 2025-08-27T21:00:14.120Z LABELS: In Progress, aspect::enrichment ASSIGNEES:  DESCRIPTION:  COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","1","172612083","Initialize paxium-api repository and scaffold","closed","szahniy","chris.sonnenberg","","","2025-08-29T12:32:19.526Z","2025-09-04T12:01:13.837Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/1","ISSUE TITLE: Initialize paxium-api repository and scaffold STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T12:32:19.526Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: scaffold `paxium-api` GitLab repo, Lambda app (NestJS), add base folder layout, wire `.npmrc` to GitLab Registry  **Acceptance criteria**  * Repo exists with Lambda scaffold and base folders. * `.npmrc` points `@paxium` scope to GitLab registry. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","2","172612087","Contracts dependency and AJV wiring","closed","szahniy","chris.sonnenberg","","","2025-08-29T12:32:29.984Z","2025-09-11T20:17:27.918Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/2","ISSUE TITLE: Contracts dependency and AJV wiring STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T12:32:29.984Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: Consume `@lion/schemas` from the GitLab Package Registry. Add a middleware to compile AJV validators for request schemas.  **Acceptance criteria**  * `npm i @lion/schemas` * AJV middleware to validate requests * Failing validation returns 400 with path and keyword. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","3","172612091","OpenAPI surface and health endpoints","closed","szahniy","chris.sonnenberg","","","2025-08-29T12:32:36.159Z","2025-09-16T20:05:40.028Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/3","ISSUE TITLE: OpenAPI surface and health endpoints STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T12:32:36.159Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: Expose `/openapi.json` emitted from route schemas and add `/health` and `/version` endpoints that include the `@lion/schemas` version and policy bundle id.  **Acceptance criteria**  * `/openapi.json` reachable and conforms to OpenAPI 3.1. * `/health` returns 200 with build id, `@lion/schemas` version, and policy version. * `/version` returns semver. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","4","172612102","Auth guard with OIDC JWT","opened","szahniy","","Ready|aspect::api","","2025-08-29T12:32:45.390Z","2025-09-18T20:31:44.164Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/4","ISSUE TITLE: Auth guard with OIDC JWT STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:32:45.390Z LABELS: Ready, aspect::api ASSIGNEES:  DESCRIPTION: Implement JWT verification for the chosen IdP, validate issuer and audience, and attach `user` to request context for downstream policy evaluation. Secrets come from AWS Secrets Manager.  **Acceptance criteria**  * Invalid or expired tokens return 401 before hitting handlers. * Valid tokens expose `sub`, roles, and tenant in context. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","5","172612108","OPA Wasm plugin and decision logging","closed","szahniy","chris.sonnenberg","aspect::api","","2025-08-29T12:32:52.529Z","2025-09-22T16:15:36.189Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/5","ISSUE TITLE: OPA Wasm plugin and decision logging STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T12:32:52.529Z LABELS: aspect::api ASSIGNEES: chris.sonnenberg DESCRIPTION: Load the OPA Wasm bundle at cold start. Add a pre-handler that evaluates `{ user, resource, action, context }` and annotates the request with `decision`, `ruleId`, and `evalMs`. Log decisions on allow and deny.  **Acceptance criteria**  * Requests without an allow decision are denied with 403 and human reason. * Decision logs include rule id, eval ms, request id. * Bundle version is included in responses and logs. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","6","172612112","OpenMetadata proxy: read endpoints","opened","szahniy","","Ready|aspect::api","","2025-08-29T12:32:57.904Z","2025-09-18T20:34:31.986Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/6","ISSUE TITLE: OpenMetadata proxy: read endpoints STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:32:57.904Z LABELS: Ready, aspect::api ASSIGNEES:  DESCRIPTION: Add policy-aware proxy routes that forward to OpenMetadata. Scope for MVP: `GET /v1/assets/{id}`, `GET /v1/domains/{id}`, `GET /v1/search?q=...`Provide a guarded passthrough at POST /v1/proxy/opensearch/_search for advanced queries during pilot. Validate requests against a schema and an allowlist of indices and fields, and still apply policy filtering to hits before returning.  **Acceptance criteria:** ↵ * Routes forward to OpenMetadata with service auth and timeouts- Requests are validated against JSON Schema and a field allowlist. *- Integrate OPA Wasm policy↵ * Respdex restrictionses are validated with AJV and policy filtered before returning.↵ * 4xx and 5xx from OpenMetadata mapped to our error taxonomyenforced and logged.↵ - Policy filtering is applied to results before response.↵ - An end-to-end test demonstrates a permitted and a rejected query, with structured audit logs emitted. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","7","172612115","OpenSearch proxy: restricted passthrough","opened","szahniy","","Backlog|Parking Lot|aspect::api","","2025-08-29T12:33:03.182Z","2025-09-19T19:02:51.961Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/7","ISSUE TITLE: OpenSearch proxy: restricted passthrough STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:33:03.182Z LABELS: Backlog, Parking Lot, aspect::api ASSIGNEES:  DESCRIPTION: Provide a guarded passthrough at POST /v1/proxy/opensearch/_search for advanced queries during pilot. Validate requests against a schema and an allowlist of indices and fields, and still apply policy filtering to hits before returning.  **Acceptance criteria:** - Requests are validated against JSON Schema and a field allowlist. - Index restrictions are enforced and logged. - Policy filtering is applied to results before response. - An end-to-end test demonstrates a permitted and a rejected query, with structured audit logs emitted. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","8","172612116","Aggregated GET /v1/search endpoint","opened","szahniy","chris.sonnenberg","In Progress|aspect::api","","2025-08-29T12:33:09.125Z","2025-09-25T20:58:00.796Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/8","ISSUE TITLE: Aggregated GET /v1/search endpoint STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:33:09.125Z LABELS: In Progress, aspect::api ASSIGNEES: chris.sonnenberg DESCRIPTION: Finalize and document the facet bucket schema returned by /v1/search so UI and SDK can code to a stable contract. Align with Search and Discovery and the Search backend source-of-truth ADR.  **Acceptance criteria:**  - Call Open Metadata search API and return it's result. - Facet schema is documented in OpenAPI and @lion/schemas. - Contract tests validate facet shapes and ordering rules. - A sample response fixture is published for SDK and UI tests. - Any breaking change is captured in a migration note. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","9","172612120","Error response normalizer","opened","szahniy","chris.sonnenberg","Sprint Ready|aspect::api","","2025-08-29T12:33:12.872Z","2025-09-22T15:18:28.243Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/9","ISSUE TITLE: Error response normalizer STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:33:12.872Z LABELS: Sprint Ready, aspect::api ASSIGNEES: chris.sonnenberg DESCRIPTION: Define and implement a small errors with stable `code` values and human messages. Normalize downstream errors from OpenMetadata and OpenSearch.  **Acceptance criteria**  * Identify Custom vs Existing NPM module to unify error responses * Errors return `{ code, message, details? }` with HTTP status aligned. * Mapped errors documented in the OpenAPI. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","10","172612123","Observability and correlation","opened","szahniy","","Ready|aspect::api","","2025-08-29T12:33:17.778Z","2025-09-18T20:31:45.842Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/10","ISSUE TITLE: Observability and correlation STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:33:17.778Z LABELS: Ready, aspect::api ASSIGNEES:  DESCRIPTION: Add structured JSON logs with request id, route, status, latency in ms, policy version and decision outcome. Trace the call into downstream systems.  Typical fields:  ```json {   """"ts"""":""""2025-09-04T12:00:00Z"""",   """"reqId"""":""""r-abc"""",   """"tenant"""":""""t-1"""",   """"user"""":""""u-123"""",   """"route"""":""""GET /v1/search"""",   """"status"""":200,   """"latencyMs"""":142,   """"policyVersion"""":""""20250904-001"""",   """"decision"""":""""allow"""" } ```  **Acceptance criteria**  * new custom CloudWatch Log Group `paxium-audit-trails` created to store API Audit Trail logs COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","11","172612124","CI and CD in GitLab","opened","szahniy","","Ready|aspect::api","","2025-08-29T12:33:22.266Z","2025-09-18T19:09:18.645Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/11","ISSUE TITLE: CI and CD in GitLab STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:33:22.266Z LABELS: Ready, aspect::api ASSIGNEES:  DESCRIPTION: Create GitLab pipeline with jobs for lint, typecheck, test, build, release, and deploy to `dev`.   **Acceptance criteria**  - Pipeline runs on MR and main, caches deps, lints, tests, builds. - dev deploy job deploys a hello route to API Gateway. - Badge and pipeline minutes documented in README. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","12","172612127","Stage config","opened","szahniy","","Backlog|Parking Lot|aspect::api","","2025-08-29T12:33:26.483Z","2025-09-18T20:32:41.136Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/12","ISSUE TITLE: Stage config STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:33:26.483Z LABELS: Backlog, Parking Lot, aspect::api ASSIGNEES:  DESCRIPTION: Add a strongly typed stage configuration loader and include stage and policy bundle id in the /version endpoint. Keep configuration explicit and testable.  **Acceptance criteria:** - Stage config types and loader are implemented with defaults. - /version returns stage name and current policy bundle id. - Missing or invalid config fails fast with a clear error. - Unit tests cover dev and stage configurations. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","1","172612261","Initialize paxium-sdk-typescript repo and tooling","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:40:00.940Z","2025-09-19T15:12:29.602Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/1","ISSUE TITLE: Initialize paxium-sdk-typescript repo and tooling STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:40:00.940Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Scaffold package.json, tsconfig, linting, formatting. Configure `.npmrc` to pull `@paxium/*` from GitLab Packages.  **Acceptance criteria**  * Repo builds and lints locally. * `.npmrc` maps `@paxium` scope to GitLab registry. * Basic CI pipeline runs typecheck and lint on merge requests. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","2","172612266","Contracts dependency and AJV response validation","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:40:07.948Z","2025-09-19T15:12:29.887Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/2","ISSUE TITLE: Contracts dependency and AJV response validation STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:40:07.948Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Add `@paxium/schemas` as a dependency, import OpenAPI 3.1 JSON Schema.  **Acceptance criteria**  * Types and schemas available to consumers via top-level exports. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","3","172612267","Core HTTP client with adapters","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:40:14.018Z","2025-09-19T15:12:30.096Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/3","ISSUE TITLE: Core HTTP client with adapters STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:40:14.018Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Implement a lightweight HTTP client with pluggable fetch adapters for Node and browser, baseUrl config, default headers, and exponential backoff for idempotent requests.  **Acceptance criteria**  * Node and browser adapters pass unit tests. * Configurable retry policy for GET requests. * Set User-Agent and X-Sdk-Version headers. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","4","172612270","Auth token injection","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:40:18.476Z","2025-09-19T15:12:30.320Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/4","ISSUE TITLE: Auth token injection STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:40:18.476Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Add `getToken()` callback support. On each request, attach `Authorization: Bearer` when the callback returns a token.  **Acceptance criteria**  * Requests include Authorization when token exists. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","5","172612273","Error taxonomy and normalization","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:40:23.073Z","2025-09-19T15:12:30.542Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/5","ISSUE TITLE: Error taxonomy and normalization STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:40:23.073Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Normalize API errors into a stable `{ code, message, details? }` shape. Preserve policy denial metadata and correlation id for troubleshooting.  **Acceptance criteria**  * Typed error classes with discriminated unions exported. * Deny responses include ruleId and human reason when present. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","7","172612278","Search query builder","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:40:30.934Z","2025-09-19T15:12:30.745Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/7","ISSUE TITLE: Search query builder STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:40:30.934Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Create a builder that supports text, facets, bbox, and optional GeoJSON bodies for large AOIs. Ensure GET and POST parity and guard against unsafe URL lengths.  **Acceptance criteria:** - Builder composes both GET and POST requests with types. - Parity tests show equal results across methods for same inputs. - URL length checks are documented and enforced. - Examples include bbox and polygon searches. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","8","172612281","Assets client","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:40:36.538Z","2025-09-19T15:12:30.958Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/8","ISSUE TITLE: Assets client STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:40:36.538Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Implement assets.getById(id) that returns a normalized model with geo fields and policy-filtered attributes. Map API errors into a consistent SDK error type.  **Acceptance criteria:** - Function returns typed asset details and handles missing fields. - Errors are normalized and include a machine code. - An example renders the response in a small UI snippet. - Tests validate both happy and error paths. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","9","172612284","Access flow wrappers","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:40:41.503Z","2025-09-19T15:12:31.167Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/9","ISSUE TITLE: Access flow wrappers STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:40:41.503Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Add requestAccess and getDownloadLink wrappers that propagate decision headers and handle error envelopes. Keep the API surface minimal and predictable.  **Acceptance criteria:** - Both functions are exported with strict types. - Decision headers are exposed to callers. - Unit tests cover allow and deny outcomes. - Example usage is added to the docs. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","10","172612286","Pagination helpers and cursors","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:40:45.061Z","2025-09-19T15:12:31.369Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/10","ISSUE TITLE: Pagination helpers and cursors STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:40:45.061Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Provide typed helpers for nextCursor, prevCursor, and limit to reduce repeated pagination logic. Ensure helper behavior matches API Standards and works with deep links.  **Acceptance criteria:** - Helpers are exported with TypeScript types and JSDoc. - Unit tests cover start, middle, and end-of-list edges. - Examples show deep-link cursor restoration. - Breaking changes are documented in the changelog. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","11","172612293","Docs and examples","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:40:56.082Z","2025-09-19T15:12:31.560Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/11","ISSUE TITLE: Docs and examples STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:40:56.082Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Author concise documentation and runnable examples for SSR and browser usage. Show token injection, error handling, and search calls. Link to API Standards and UI integration notes.  **Acceptance criteria:** - README includes SSR and browser quick starts. - An examples folder contains a runnable sample app. - Examples cover search and asset detail calls. - Docs describe how to plug in a token provider. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-sdk-typescript","74013678","12","172612302","CI and release to GitLab Packages","opened","szahniy","","Backlog|Parking Lot|aspect::sdk","","2025-08-29T12:41:05.618Z","2025-09-19T15:12:31.769Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-sdk-typescript/-/issues/12","ISSUE TITLE: CI and release to GitLab Packages STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T12:41:05.618Z LABELS: Backlog, Parking Lot, aspect::sdk ASSIGNEES:  DESCRIPTION: Set up CI to lint, test, build, and publish the SDK to the GitLab Package Registry. Use semantic-release for automated versioning and changelogs. Keep the process reproducible and documented for consumers.  **Acceptance criteria:** - CI runs lint, tests, and build on MRs and main. - Package publishes to the group registry with semantic-release. - A consumer repo installs the package successfully in a demo. - CHANGELOG updates automatically with each release. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","13","172614274","[Spike] pick a lightweight Postgres library and standardize usage","opened","szahniy","chris.sonnenberg","Sprint Ready|aspect::api","","2025-08-29T13:26:57.400Z","2025-09-22T15:18:34.642Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/13","ISSUE TITLE: [Spike] pick a lightweight Postgres library and standardize usage STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T13:26:57.400Z LABELS: Sprint Ready, aspect::api ASSIGNEES: chris.sonnenberg DESCRIPTION: Validate a small, single-library approach for Postgres that we can reuse across Lion services without a heavy ORM. Compare candidates for Lambda friendliness, pooled connections, migrations compatibility, and typed query ergonomics. Produce an ADR and a minimal wrapper that standardizes connection, retries, and transactions.  **Acceptance criteria**  - ADR merged selecting one library with rationale and a deprecation path if we switch later.  - PoC module committed that exposes getPool(), withTx(fn), basic query builder usage, and sensible timeouts. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","1","172614342","Spike: ADR for UI deployment models (our cloud vs customer cloud, SSR vs SSG)","closed","szahniy","szahniy","aspect::web","","2025-08-29T13:29:13.951Z","2025-09-19T19:29:14.488Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/1","ISSUE TITLE: Spike: ADR for UI deployment models (our cloud vs customer cloud, SSR vs SSG) STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T13:29:13.951Z LABELS: aspect::web ASSIGNEES: szahniy DESCRIPTION: Document deployment options for the Web UI in two dimensions, where we host vs customer hosts, and SSR vs SSG. Cover AWS, Azure, and GCP equivalents with reference architectures, routing, caching, secrets, and CI flows. Deliver a decision tree so ops can pick the right model per tenant.  **Acceptance criteria**  - ADR merged with a matrix that maps AWS, Azure, GCP for SSR and SSG, including core services and pros/cons.  - Three reference diagrams and high level IaC outlines per model, including required env vars and secrets handling.  - Decision tree with guardrails, for example when to choose SSG in customer cloud vs SSR in our cloud, plus rollback notes. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","27","173838712","[Spike] semantic release standards and CI templates","opened","szahniy","","Ready|aspect::platform","","2025-08-29T13:33:04.886Z","2025-09-23T14:48:07.562Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/27","ISSUE TITLE: [Spike] semantic release standards and CI templates STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T13:33:04.886Z LABELS: Ready, aspect::platform ASSIGNEES:  DESCRIPTION: Define how we use semantic-release across repos, including commit scopes, versioning rules for @lion/schemas, SDK, API, and how multi-project triggers propagate.   **Acceptance criteria**  - Versioning policy doc merged, clarifying MAJOR/MINOR/PATCH for contracts and how SDK pins ^major.minor. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","14","172614460","[Spike] semantic release standards and CI templates","closed","szahniy","","Ready|aspect::platform","","2025-08-29T13:33:04.886Z","2025-09-23T14:48:06.947Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/14","ISSUE TITLE: [Spike] semantic release standards and CI templates STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T13:33:04.886Z LABELS: Ready, aspect::platform ASSIGNEES:  DESCRIPTION: Define how we use semantic-release across repos, including commit scopes, versioning rules for @lion/schemas, SDK, API, and how multi-project triggers propagate.   **Acceptance criteria**  - Versioning policy doc merged, clarifying MAJOR/MINOR/PATCH for contracts and how SDK pins ^major.minor. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","2","172614666","Spike: Finalize navigation and route protection","closed","szahniy","","Backlog|aspect::web","","2025-08-29T13:40:01.190Z","2025-09-19T14:48:02.006Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/2","ISSUE TITLE: Spike: Finalize navigation and route protection STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T13:40:01.190Z LABELS: Backlog, aspect::web ASSIGNEES:  DESCRIPTION: Decide the MVP page map  **Acceptance criteria**  * Documented sitemap with routes (`/search`, `/assets/[id]`). COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","3","172614668","Initialize paxium-web repo and scaffolding","closed","szahniy","johndmema","aspect::web","","2025-08-29T13:40:08.827Z","2025-09-19T18:48:32.666Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/3","ISSUE TITLE: Initialize paxium-web repo and scaffolding STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T13:40:08.827Z LABELS: aspect::web ASSIGNEES: johndmema DESCRIPTION: Create GitLab repo with Next.js App Router, TypeScript, Tailwind, and shared configs from `@paxium/schemas`. Add basic folder structure and local run scripts.  **Acceptance criteria**  * Repo builds and runs locally with `next dev`. * Tailwind and ESLint from `@paxium/schemas` applied and passing. * `.npmrc` maps `@paxium` scope to GitLab Packages. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","4","172614675","CI and deploy pipelines for SSR or SSG","opened","szahniy","","Backlog|aspect::web","","2025-08-29T13:40:17.470Z","2025-09-19T19:03:08.293Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/4","ISSUE TITLE: CI and deploy pipelines for SSR or SSG STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T13:40:17.470Z LABELS: Backlog, aspect::web ASSIGNEES:  DESCRIPTION: Update the web pipeline to build SSR and SSG artifacts and deploy to the matching devops blueprint. Provide a single pipeline variable to choose SSR vs SSG per run. Reference the WEB/UI strategy and devops blueprints.  **Acceptance criteria:** - Pipeline builds SSR and SSG outputs and artifacts are retained. - Deploy job targets the SSR or SSG blueprint based on a variable. - Rollback steps are documented in the job logs and README. - A green deployment link is posted as a pipeline artifact. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","5","172614691","Auth middleware and session handling","closed","szahniy","johndmema","aspect::web","","2025-08-29T13:40:36.693Z","2025-09-18T20:18:33.022Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/5","ISSUE TITLE: Auth middleware and session handling STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T13:40:36.693Z LABELS: aspect::web ASSIGNEES: johndmema DESCRIPTION: Add Next middleware to enforce auth on protected routes.  **Acceptance criteria**  * Unauthenticated users on protected routes are redirected to sign-in. * Expired tokens result in a clean re-auth path. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","6","172614695","SDK integration and environment config","opened","szahniy","","Backlog|Parking Lot|aspect::web","","2025-08-29T13:40:40.511Z","2025-09-19T15:45:15.892Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/6","ISSUE TITLE: SDK integration and environment config STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T13:40:40.511Z LABELS: Backlog, Parking Lot, aspect::web ASSIGNEES:  DESCRIPTION: Integrate the TypeScript SDK and centralize environment configuration for dev and stage. Implement SSR token injection per the local environment guide, and ensure base URLs can be switched without code changes.  **Acceptance criteria:** - SDK is configured via env and used for all API calls in MVP pages. - SSR middleware injects tokens into server-side requests. - Dev and stage base URLs are switchable with a single env change. - A short README section documents how to configure environments. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","7","172628179","App shell, layout, and design","closed","szahniy","johndmema","aspect::web","","2025-08-29T16:41:03.865Z","2025-09-18T20:18:34.957Z","","8","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/7","ISSUE TITLE: App shell, layout, and design STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T16:41:03.865Z LABELS: aspect::web ASSIGNEES: johndmema DESCRIPTION: Implement top-level shell with header, nav, and content area. Add Tailwind theme tokens for spacing, typography, and elevation.  **Acceptance criteria**  * Responsive header and nav render on SSR and client. * Tokens applied to at least header and button components. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","8","172628185","Search page, server-rendered first paint","closed","szahniy","johndmema","aspect::web","","2025-08-29T16:41:09.069Z","2025-09-18T20:18:46.614Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/8","ISSUE TITLE: Search page, server-rendered first paint STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T16:41:09.069Z LABELS: aspect::web ASSIGNEES: johndmema DESCRIPTION: Build `/search` that renders initial results on the server using the SDK. Include text input, facet sidebar, and results list.  **Acceptance criteria**  * Server render returns results for a default query. * Facet selection updates URL and triggers refetch. * Empty and error states rendered without console errors. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","9","172628193","Map integration with bbox filtering","closed","szahniy","johndmema","aspect::web","","2025-08-29T16:41:13.655Z","2025-09-18T20:18:41.789Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/9","ISSUE TITLE: Map integration with bbox filtering STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T16:41:13.655Z LABELS: aspect::web ASSIGNEES: johndmema DESCRIPTION: Add MapLibre (Or other mapping solution) map to `/search` with a bbox selector. Update the query builder to include bbox and refresh results.  **Acceptance criteria**  * Dragging a rectangle updates bbox in the URL. * Results refresh and match bbox filter. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","10","172628198","Asset quick view and detail page","closed","szahniy","johndmema","aspect::web","","2025-08-29T16:41:19.702Z","2025-09-18T20:18:44.416Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/10","ISSUE TITLE: Asset quick view and detail page STATE: closed AUTHOR: szahniy CREATED: 2025-08-29T16:41:19.702Z LABELS: aspect::web ASSIGNEES: johndmema DESCRIPTION: Add a drawer quick view from the results list and a full page at `/assets/[id]`. Show core fields, tags, geo preview, and policy-aware actions.  **Acceptance criteria**  * Drawer opens with summary data without route change. * `/assets/[id]` SSR renders allowed fields only. * Lineage sections are hidden or explicitly marked coming soon. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","11","172628204","Access request flow","opened","szahniy","","Backlog|aspect::web","","2025-08-29T16:41:24.295Z","2025-09-18T20:24:13.365Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/11","ISSUE TITLE: Access request flow STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T16:41:24.295Z LABELS: Backlog, aspect::web ASSIGNEES:  DESCRIPTION: Provide a modal that submits POST /v1/access/requests and displays the policy decision. Show a clear human-readable reason and rule id on deny, and next steps on allow. Follow the Policy Engine and API Standards guidance.  **Acceptance criteria:** - Allow and deny flows are both demo-able with mocked responses. - Decision headers are surfaced in the UI for diagnostics. - A telemetry event fires for both outcomes. - Copy is reviewed and approved by product. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","12","172628208","Download or open link action","opened","szahniy","","Backlog|aspect::web","","2025-08-29T16:41:29.168Z","2025-09-18T20:22:51.007Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/12","ISSUE TITLE: Download or open link action STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T16:41:29.168Z LABELS: Backlog, aspect::web ASSIGNEES:  DESCRIPTION: Add the primary action to open or download an asset using POST /v1/assets/{id}/link. Handle success, expiry, and deny outcomes with clear user feedback. This flow relies on the Access Broker and policy engine to gate access.  **Acceptance criteria:** - Success path opens a presigned link in one click and logs the action. - Expired-link responses show a retry hint and do not open a blank tab. - Deny responses display a toast with the rule id and human reason. - An integration test covers all three outcomes. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","13","172628219","Domains browser","opened","szahniy","","Backlog|aspect::web","","2025-08-29T16:41:35.369Z","2025-09-18T20:23:04.185Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/13","ISSUE TITLE: Domains browser STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T16:41:35.369Z LABELS: Backlog, aspect::web ASSIGNEES:  DESCRIPTION: Implement a hierarchical domain browser backed by /v1/domains so users can navigate to scoped search results. Use lazy loading for deep hierarchies and show an informative empty state. Align with OpenMetadata domain concepts described in the wiki.  **Acceptance criteria:** - Tree view renders domain hierarchy with lazy loading for children. - Clicking a domain navigates to Search with the domain filter applied. - No-domains state is rendered with guidance. - A test dataset with 1k domains performs within acceptable bounds. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","14","172628225","Pagination and cursors","opened","szahniy","johndmema","In Progress|aspect::web","","2025-08-29T16:41:39.638Z","2025-09-24T17:00:15.970Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/14","ISSUE TITLE: Pagination and cursors STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T16:41:39.638Z LABELS: In Progress, aspect::web ASSIGNEES: johndmema DESCRIPTION: Wire cursor-based pagination to the API for Search results, preserving all active filters and sort. Deep-link the current cursor in the URL so results can be shared and restored. Follow API Standards for cursor semantics and error envelopes.  **Acceptance criteria:** - Next and previous controls work and preserve filters, sort, and bbox. - The URL contains the active cursor and reloading restores the same page. - Contract tests verify item counts and cursor progression using fixtures. - Empty and end-of-list states are handled cleanly. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","15","172628231","Error, loading, and skeleton states","opened","szahniy","johndmema","Ready|aspect::web","","2025-08-29T16:41:45.164Z","2025-09-22T15:08:25.981Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/15","ISSUE TITLE: Error, loading, and skeleton states STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T16:41:45.164Z LABELS: Ready, aspect::web ASSIGNEES: johndmema DESCRIPTION: Implement consistent loading, error, and skeleton patterns across Search, Asset Detail, and the Map tab. Patterns must work for SSR first paint and client transitions. Follow UI guidelines from the wiki to keep the experience responsive and accessible.  **Acceptance criteria:** - Search, Asset Detail, and Map tab each show skeletons, errors, and retry actions. - An e2e run demonstrates state transitions without layout shift. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","16","172628236","Analytics and observability","opened","szahniy","","Backlog|Parking Lot|aspect::web","","2025-08-29T16:41:49.795Z","2025-09-26T15:27:00.831Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/16","ISSUE TITLE: Analytics and observability STATE: opened AUTHOR: szahniy CREATED: 2025-08-29T16:41:49.795Z LABELS: Backlog, Parking Lot, aspect::web ASSIGNEES:  DESCRIPTION: Add lightweight analytics and error tracking for MVP using Sentry and PostHog. Initialize from environment variables provided by Secrets Manager and surface release and route metadata so we can trace user flows. Follow the UI and SDKs plan and WEB/UI strategy for where to hook events. Keep this opt-out capable for customer-hosted deployments.  Acceptance criteria: - Sentry and PostHog are initialized from env and capture route changes and unhandled errors. - Release, build, and route metadata are attached to events. - A runtime flag can disable analytics for a deployment. - Events are visible in dev dashboards. COMMENTS: None"
"atlas-datascience/lion/cicd/containers/opa","73962713","1","172638235","Opa Container Pipeline","closed","rprice314","rprice314","","","2025-08-29T18:17:04.431Z","2025-09-05T18:25:37.534Z","","2","false","https://gitlab.com/atlas-datascience/lion/cicd/containers/opa/-/issues/1","ISSUE TITLE: Opa Container Pipeline STATE: closed AUTHOR: rprice314 CREATED: 2025-08-29T18:17:04.431Z LABELS:  ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to create a gitlab ci pipeline that creates a docker image for opa utilities so that we can leverage it in a build pipeline  Acceptance Criteria:  Opa docker image is available for usage in CI builds COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/utility","69912988","3","172885819","Implement linting in OPA pipeline","closed","rprice314","rprice314","aspect::catalog","","2025-09-02T17:40:21.918Z","2025-09-19T18:33:31.837Z","","1","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/utility/-/issues/3","ISSUE TITLE: Implement linting in OPA pipeline STATE: closed AUTHOR: rprice314 CREATED: 2025-09-02T17:40:21.918Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to implement a linting process in the opa gitlab pipeline so that all rego files follow the same format.  Acceptance Criteria  Gitlab pipeline contains a linting stage that runs when a gitlab pipeline is triggered Linting process properly reports linting errors that are found in rego files COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/utility","69912988","4","172886084","Implement build process in OPA pipeline","closed","rprice314","rprice314","aspect::catalog","","2025-09-02T17:46:46.618Z","2025-09-19T18:32:17.040Z","","2","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/utility/-/issues/4","ISSUE TITLE: Implement build process in OPA pipeline STATE: closed AUTHOR: rprice314 CREATED: 2025-09-02T17:46:46.618Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to implement a build process in the opa gitlab pipeline so that rego files are compiled into web assemblies  Acceptance Criteria  Gitlab pipeline contains a build stage that runs when a gitlab pipeline is triggered Build process properly compiles rego policies into web assembly modules COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/utility","69912988","5","172886183","Implement test process in OPA pipeline","closed","rprice314","rprice314","aspect::catalog","","2025-09-02T17:48:51.179Z","2025-09-19T18:31:16.001Z","","1","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/utility/-/issues/5","ISSUE TITLE: Implement test process in OPA pipeline STATE: closed AUTHOR: rprice314 CREATED: 2025-09-02T17:48:51.179Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to implement a test process in the opa gitlab pipeline so that rego files are tested after being added to the rego gitlab repo.  Acceptance Criteria  Gitlab pipeline contains a test stage that runs when a gitlab pipeline is triggered Test process properly reports test successes and failures Pipeline does not run later stages if tests fail COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/utility","69912988","6","172886284","Implement deploy process in OPA pipeline","closed","rprice314","rprice314","aspect::catalog","","2025-09-02T17:52:07.436Z","2025-09-19T18:33:20.881Z","","1","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/utility/-/issues/6","ISSUE TITLE: Implement deploy process in OPA pipeline STATE: closed AUTHOR: rprice314 CREATED: 2025-09-02T17:52:07.436Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to implement a deploy process in the opa gitlab pipeline so that web assembly modules are bundled and deployed when rego policies are created/updated.  Acceptance Criteria  Gitlab pipeline contains a deploy stage that runs when a gitlab pipeline is triggered Deploy process has web asembly module bundles available as an artifact COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/utility","69912988","7","173006597","Implement validation process in OPA pipeline","closed","rprice314","rprice314","aspect::catalog","","2025-09-04T15:03:39.653Z","2025-09-19T18:32:26.076Z","","1","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/utility/-/issues/7","ISSUE TITLE: Implement validation process in OPA pipeline STATE: closed AUTHOR: rprice314 CREATED: 2025-09-04T15:03:39.653Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to implement a validation process in the OPA gitlab ci pipeline to ensure that web assembly modules built in the gitlab ci pipeline are valid and usable in lambda functions  Acceptance Criteria  Gitlab ci piepline has a validation stage that uses the custom opa docker image Gitlab ci pipeline has a validation stage that shows if validation passed or failed Gitlab ci pipeline has a validation stage that verifies that all web assembly files are present Gitlab ci pipeline has a validation stage that uses opa inspect to validate web assembly structure COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","1","173007125","Create ic-ism sci controls opa policies","opened","rprice314","rprice314","Sprint Ready|aspect::catalog","","2025-09-04T15:13:22.010Z","2025-09-22T13:38:41.036Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/1","ISSUE TITLE: Create ic-ism sci controls opa policies STATE: opened AUTHOR: rprice314 CREATED: 2025-09-04T15:13:22.010Z LABELS: Sprint Ready, aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to create a rego policy that covers ic-ism sci controls so that paxium business rules can validate and enforce security markings that include sci controls  Acceptance Criteria  Rego policy is in place that validates and enforces sci controls Unit tests are in place that validate that sci controls are being validated and enforced properly COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","2","173007245","Create ic-ism comparted access opa policy","opened","rprice314","rprice314","Ready|aspect::catalog","","2025-09-04T15:15:01.283Z","2025-09-12T15:26:24.674Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/2","ISSUE TITLE: Create ic-ism comparted access opa policy STATE: opened AUTHOR: rprice314 CREATED: 2025-09-04T15:15:01.283Z LABELS: Ready, aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to create a rego policy that covers ic-ism compartmented access policies so that paxium business rules can validate and enforce security markings that include sci controls  Acceptance Criteria  Rego policy is in place that validates and enforces compartmented access programs access Unit tests are in place that validate that compartmented access programs access are being validated and enforced properly COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","3","173007394","Create atomic energy markings ic-ism policy","opened","rprice314","rprice314","Sprint Ready|aspect::catalog","","2025-09-04T15:17:23.730Z","2025-09-22T13:38:49.654Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/3","ISSUE TITLE: Create atomic energy markings ic-ism policy STATE: opened AUTHOR: rprice314 CREATED: 2025-09-04T15:17:23.730Z LABELS: Sprint Ready, aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to create a rego policy that covers ic-ism atomic energy markings controls so that paxium business rules can validate and enforce security markings that include atomic energy markings  Acceptance Criteria  Rego policy is in place that validates and enforces atomic energy markings unit tests are in place that validate that atomic energy markings are being validated and enforced properly COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","4","173007496","Create rego policy for ic-ism dissemination controls","opened","rprice314","rprice314","Sprint Ready|aspect::catalog","","2025-09-04T15:19:43.358Z","2025-09-22T13:38:57.069Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/4","ISSUE TITLE: Create rego policy for ic-ism dissemination controls STATE: opened AUTHOR: rprice314 CREATED: 2025-09-04T15:19:43.358Z LABELS: Sprint Ready, aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to create a rego policy that covers ic-ism dissemination controls so that paxium business rules can validate and enforce security markings that include dissemination controls markings  Acceptance Criteria  Rego policy is in place that validates and enforces dissemination control markings unit tests are in place that validate that dissemination controls markings are being validated and enforced properly COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","5","173007777","Establish policy hierarchy","opened","rprice314","rprice314","Ready|aspect::catalog","","2025-09-04T15:27:04.259Z","2025-09-12T15:36:01.733Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/5","ISSUE TITLE: Establish policy hierarchy STATE: opened AUTHOR: rprice314 CREATED: 2025-09-04T15:27:04.259Z LABELS: Ready, aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to implement a policy hierarchy process so that Paxium can enforce business rules at different organizational levels.   Acceptance Criteria  Policies can be created at the system, business unit, domain, group, and team level Policies at team level can override policies at higher levels Policies at group level can override policies at higher level Policies at domain level can override policies at higher level Policies at business unit level can override policies at higher level Polciies at system level filter down to lower levels and are enforced when not overridden COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","6","173008905","Create openmetadata admin policy","opened","rprice314","rprice314","Ready|aspect::catalog","","2025-09-04T15:53:30.684Z","2025-09-12T15:36:29.489Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/6","ISSUE TITLE: Create openmetadata admin policy STATE: opened AUTHOR: rprice314 CREATED: 2025-09-04T15:53:30.684Z LABELS: Ready, aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to create a rego policy for OpenMetadata admins so that OpenMetadata's internal security can be replaced with OPA  Acceptance Criteria  Rego policy contains the same access controls as the current OpenMetadata admin role Unit tests are in place to validate that the rego policy is enforcing admin roles properly COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","7","173008968","Create openmetadata data steward policy","opened","rprice314","rprice314","Ready|aspect::catalog","","2025-09-04T15:55:14.705Z","2025-09-12T15:36:41.765Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/7","ISSUE TITLE: Create openmetadata data steward policy STATE: opened AUTHOR: rprice314 CREATED: 2025-09-04T15:55:14.705Z LABELS: Ready, aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to create a rego policy for OpenMetadata data stewards so that OpenMetadata's internal security can be replaced with OPA  Acceptance Criteria  Rego policy contains the same access controls as the current OpenMetadata data steward role Unit tests are in place to validate that the rego policy is enforcing data steward roles properly COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","8","173009034","Create policy for openmetadata general users","opened","rprice314","rprice314","Ready|aspect::catalog","","2025-09-04T15:56:53.312Z","2025-09-12T15:36:46.216Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/8","ISSUE TITLE: Create policy for openmetadata general users STATE: opened AUTHOR: rprice314 CREATED: 2025-09-04T15:56:53.312Z LABELS: Ready, aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to create a rego policy for OpenMetadata general users so that OpenMetadata's internal security can be replaced with OPA  Acceptance Criteria  Rego policy contains the same access controls as the current OpenMetadata general user role Unit tests are in place to validate that the rego policy is enforcing general users roles properly COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","9","173009187","Implement database structures for user role and policy management","opened","rprice314","rprice314","In Progress|Sprint Ready|aspect::catalog","","2025-09-04T16:00:55.403Z","2025-09-22T18:00:58.757Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/9","ISSUE TITLE: Implement database structures for user role and policy management STATE: opened AUTHOR: rprice314 CREATED: 2025-09-04T16:00:55.403Z LABELS: In Progress, Sprint Ready, aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As an engineer I need to implement a database structure to manage user role and group associations so that paxium can implement user access controls  Acceptance Criteria  Database structure is in place that associates an user to a role Database structure is in place that associates an user to an organizational level Database structure is in place that associayes an user to a policy COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","14","173084581","[Spike] Define single search source","closed","szahniy","szahniy","aspect::api","","2025-09-05T17:43:34.267Z","2025-09-19T19:29:11.318Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/14","ISSUE TITLE: [Spike] Define single search source STATE: closed AUTHOR: szahniy CREATED: 2025-09-05T17:43:34.267Z LABELS: aspect::api ASSIGNEES: szahniy DESCRIPTION: Run quick lookout on OpenMetadata Search API and OpenSearch _search API and suggest single source of thrust to use  **Acceptance Criteria**  - Create Comparison table to compare pros and cons of each approach; - Create Unified ticket to implement search functionally that use OpenMetadata or OpenSearch API. COMMENTS: None"
"atlas-datascience/lion/infrastructure/aws/master-network","71529533","4","173087948","SPIKE:  Default Transit Gateway Spoke Route Blackhole investigation","opened","pierreo32","pierreo32","Under Review","","2025-09-05T19:26:17.933Z","2025-09-10T17:28:02.964Z","","","false","https://gitlab.com/atlas-datascience/lion/infrastructure/aws/master-network/-/work_items/4","ISSUE TITLE: SPIKE:  Default Transit Gateway Spoke Route Blackhole investigation STATE: opened AUTHOR: pierreo32 CREATED: 2025-09-05T19:26:17.933Z LABELS: Under Review ASSIGNEES: pierreo32 DESCRIPTION: Research and test against adding in blackhole to route table of external traffic to ensure cross VPC (dev,stage,prod) communication is not possible COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","15","173102470","Undefined variable during show and tell","closed","chris.sonnenberg","chris.sonnenberg","","","2025-09-06T13:29:02.183Z","2025-09-09T12:33:35.950Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/15","ISSUE TITLE: Undefined variable during show and tell STATE: closed AUTHOR: chris.sonnenberg CREATED: 2025-09-06T13:29:02.183Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION:  COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","15","173165507","[Spike] Identity Provider strategy","closed","szahniy","szahniy","aspect::api","","2025-09-08T13:48:40.122Z","2025-09-24T13:15:12.551Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/15","ISSUE TITLE: [Spike] Identity Provider strategy STATE: closed AUTHOR: szahniy CREATED: 2025-09-08T13:48:40.122Z LABELS: aspect::api ASSIGNEES: szahniy DESCRIPTION: Customers will authenticate with their existing IdP. We must support direct OIDC to customer IdPs, and optionally ship a local adapter when customers lack a conformant IdP or require isolation. Authorization remains in OPA with a normalized claims model across services.  **To validate**  * Direct OIDC to customer IdP covers most enterprises with minimal footprint. * A Keycloak adapter profile satisfies air-gapped and non-standard IdPs without bloating our core. * OpenMetadata SSO will work with OIDC and SAML using a thin authorizer shim that defers to the same OPA bundle. * Lightweight adapters like Dex or Authentik. * SaaS IdP.   Acceptance criteria  * Completed evaluation matrix with weighted scoring for each option and a recommendation with trade-offs. * Short ADR capturing the decision. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","16","173168336","Ingestion Gateway Terraform deploy template","opened","szahniy","alain.atemnkeng","Under Review|aspect::platform","","2025-09-08T14:29:39.316Z","2025-09-22T13:52:22.106Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/16","ISSUE TITLE: Ingestion Gateway Terraform deploy template STATE: opened AUTHOR: szahniy CREATED: 2025-09-08T14:29:39.316Z LABELS: Under Review, aspect::platform ASSIGNEES: alain.atemnkeng DESCRIPTION: **Terraform deploy template:**  * Lambda Function * IAM Role and Policy with defined access * Secret Manager credentials for JWT * CloudWatch Log Group for logs COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","13","173168477","Enrichment Terraform deploy template","opened","szahniy","alain.atemnkeng","Under Review|aspect::enrichment","","2025-09-08T14:30:00.994Z","2025-09-19T18:22:32.533Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/13","ISSUE TITLE: Enrichment Terraform deploy template STATE: opened AUTHOR: szahniy CREATED: 2025-09-08T14:30:00.994Z LABELS: Under Review, aspect::enrichment ASSIGNEES: alain.atemnkeng DESCRIPTION: **Terraform deploy template:**  * Lambda Function * IAM Role and Policy with defined access * Secret Manager credentials for JWT * CloudWatch Log Group for logs COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","14","173170991","Implement Security Labeling via OPA","opened","roy.mayfield","johndmema","Under Review|aspect::enrichment","","2025-09-08T14:59:43.741Z","2025-09-25T13:28:54.797Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/14","ISSUE TITLE: Implement Security Labeling via OPA STATE: opened AUTHOR: roy.mayfield CREATED: 2025-09-08T14:59:43.741Z LABELS: Under Review, aspect::enrichment ASSIGNEES: johndmema DESCRIPTION: As a developer I need to implement security labeling before writing asset record to Open Metadata.  Acceptance Criteria:  * OPA WASM is integrated with labeling function. * Asset security object is populated with output from OPA request. ~~* Metadata security object is populated with output from OPA request.~~ * If no policy match for either then a default label is applied. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","15","173174419","Test Lambda Layer for OPA WASM","closed","szahniy","johndmema","aspect::enrichment","","2025-09-08T15:31:46.360Z","2025-09-18T20:13:55.713Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/15","ISSUE TITLE: Test Lambda Layer for OPA WASM STATE: closed AUTHOR: szahniy CREATED: 2025-09-08T15:31:46.360Z LABELS: aspect::enrichment ASSIGNEES: johndmema DESCRIPTION: Create Lambda Layer for OPA Wasm so all project can use it based on https://gitlab.com/groups/atlas-datascience/lion/-/wikis/Project-Lion-Platform/Architecture/Components/Policy-Engine.  Acceptance Criteria:  * Layer is a bi-product of the policy project that already exists. * It is built and stored using defined CI jobs. * WASM and OPA dependencies are packaged in a zip archive and stored in the layer projects general (raw) registry.   * Build Lambda Layer for OPA WASM and OPA libraries and binaries.   * Every new tagged release of the layer is a new publishable version of the Lambda Layer. * Wiki page created on how to import Lambda Layer for OPA and how to use it. * Project README.md is updated. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","16","173276501","Research Domains, Data Products and Assets in OM","closed","johndmema","johndmema","aspect::enrichment","","2025-09-09T20:20:52.240Z","2025-09-17T13:39:53.960Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/16","ISSUE TITLE: Research Domains, Data Products and Assets in OM STATE: closed AUTHOR: johndmema CREATED: 2025-09-09T20:20:52.240Z LABELS: aspect::enrichment ASSIGNEES: johndmema DESCRIPTION: Research OpenMetadata API documentation for domain creation, data product management, and asset linking workflows.Retry COMMENTS: None"
"atlas-datascience/lion/project-lion/schemas","71164198","5","173322233","Paxium API Response Schemas","closed","chris.sonnenberg","chris.sonnenberg","","","2025-09-10T14:36:55.948Z","2025-09-10T20:03:56.924Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/schemas/-/issues/5","ISSUE TITLE: Paxium API Response Schemas STATE: closed AUTHOR: chris.sonnenberg CREATED: 2025-09-10T14:36:55.948Z LABELS:  ASSIGNEES: chris.sonnenberg DESCRIPTION: https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/2 COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","10","173325718","Integrate EventBridge to direct events via filtering","opened","rcross3","","Ready|aspect::local","","2025-09-10T16:01:08.290Z","2025-09-30T14:13:38.624Z","","5","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/10","ISSUE TITLE: Integrate EventBridge to direct events via filtering STATE: opened AUTHOR: rcross3 CREATED: 2025-09-10T16:01:08.290Z LABELS: Ready, aspect::local ASSIGNEES:  DESCRIPTION: **A/C:**  Create an EventBridge to stand between S3 Bucket and SQS Queues Create an additional SQS Queue: sqs-edge-conn-extensions, this is the queue that the python edge connector will consume from.  Create an additional DLQ\ Create a prefix filter policy in event bridge that will direct .pdf files to this new queue, all other events should be directed to the existing queue COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf","74338957","1","173329543","Edge-Conn-GeoPDF: Scaffold Project","closed","rcross3","rcross3","aspect::edge-connector","","2025-09-10T18:11:13.889Z","2025-09-19T17:59:45.938Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf/-/issues/1","ISSUE TITLE: Edge-Conn-GeoPDF: Scaffold Project STATE: closed AUTHOR: rcross3 CREATED: 2025-09-10T18:11:13.889Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: Goal of project: to define edge connector(s) that handle file formats that cannot be dealt with node-gdal and send events to ingesiton gateway  **A/C**  * Create repository * Create hello world lambda * Create a runner that will execute the lambda * Configure package manifest Virtual Environment  Refs:  https://github.com/aws-samples/graceful-shutdown-with-aws-lambda/tree/main/python-demo  https://gitlab.com/atlas-datascience/lion/core/data-in/extract-transform-load/inventory-enhancement/extraction/shpfile-extraction COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf","74338957","2","173329600","Edge-Conn-GeoPDF: Deploy to localstack","opened","rcross3","rcross3","In Progress|aspect::edge-connector","","2025-09-10T18:13:57.428Z","2025-09-26T18:17:05.663Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf/-/issues/2","ISSUE TITLE: Edge-Conn-GeoPDF: Deploy to localstack STATE: opened AUTHOR: rcross3 CREATED: 2025-09-10T18:13:57.428Z LABELS: In Progress, aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: Investigate and select an appropriate python dependency to define a serverless architecture template.  Create the template to deploy the edge-conn-geo-pdf lambda to a localstack environment COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf","74338957","3","173329737","SPIKE: Geo-pdf extraction without gdal","closed","rcross3","rcross3","aspect::edge-connector","","2025-09-10T18:17:18.536Z","2025-09-19T18:25:24.877Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf/-/issues/3","ISSUE TITLE: SPIKE: Geo-pdf extraction without gdal STATE: closed AUTHOR: rcross3 CREATED: 2025-09-10T18:17:18.536Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: We have identified that the main outlier file format that is not supported with node-gdal is geopdf. While not possible in node, python may have more robust libraries for geopdf extraction.  **A/C**  Gather a selection of most common geopdf specifications under the .pdf umbrella  Test available python libraries to see we can process the geospatial data needed  * CRS * Bounding Box COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf","74338957","4","173329796","Edge Connector GeoPDF: Define build pipeline","opened","rcross3","","Ready|aspect::edge-connector","","2025-09-10T18:18:53.202Z","2025-09-18T19:29:33.668Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf/-/issues/4","ISSUE TITLE: Edge Connector GeoPDF: Define build pipeline STATE: opened AUTHOR: rcross3 CREATED: 2025-09-10T18:18:53.202Z LABELS: Ready, aspect::edge-connector ASSIGNEES:  DESCRIPTION: **A/C**  Create a pipeline that will install dependencies and properly create a build artifact (zip) for lambda delpoyment COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","54","173330298","Defend against race conditions for multi-asset files (.shp, cib)","closed","rcross3","rcross3","aspect::edge-connector","","2025-09-10T18:31:36.131Z","2025-09-26T16:12:01.455Z","","8","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/54","ISSUE TITLE: Defend against race conditions for multi-asset files (.shp, cib) STATE: closed AUTHOR: rcross3 CREATED: 2025-09-10T18:31:36.131Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: In a push based architecture, many multi-asset files are set up to fail metadata extraction due to the fact that not all assets may be present in the bucket when an event fired & processed.   One approach is to attempt to customize failure behavior for multi-asset files, to force a failure of an entire batch during metadata processing for these specific filetypes, and adjust the visibility timeout for multi-asset messages. (  There are a couple challenges with this:  1. The event needs to be recorded regardless of file metadata extraction success (eventually) 2. Breaks consistency of not allowing file metadata extractions to fail event processing 3. The errors generated by multi-asset files are generic enough that it could result in delayed processing  A/C   Identify and implement **an** approach to deal with this problem COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector","70663067","55","173330453","Backlog Creation/Refinement - Edge Connectors","closed","rcross3","rcross3","aspect::edge-connector","","2025-09-10T18:35:47.390Z","2025-09-19T14:52:33.791Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector/-/issues/55","ISSUE TITLE: Backlog Creation/Refinement - Edge Connectors STATE: closed AUTHOR: rcross3 CREATED: 2025-09-10T18:35:47.390Z LABELS: aspect::edge-connector ASSIGNEES: rcross3 DESCRIPTION: Defining the work to meet standards of extraction for important formats: .shp, pdf COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","41","173838738","Resarch and construct documentation for deploying and configuring core services supporting Paxium","closed","pierreo32","pierreo32","aspect::platform","","2025-09-12T16:23:51.462Z","2025-09-23T14:57:53.621Z","","5","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/work_items/41","ISSUE TITLE: Resarch and construct documentation for deploying and configuring core services supporting Paxium STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:23:51.462Z LABELS: aspect::platform ASSIGNEES: pierreo32 DESCRIPTION: Construct documentation that establish a baseline approach for deploying and configuring each of these pieces:  * Open Metadata API * Postgres DB with PostGis Extension * Open Metadata Ingestion (Apache Airflow) * OpenSearch * Open Policy Agent * Redis COMMENTS: None"
"atlas-datascience/lion/devops","71509248","29","173674383","Resarch and construct documentation for deploying and configuring core services supporting Paxium","closed","pierreo32","pierreo32","Under Review|aspect::platform","","2025-09-12T16:23:51.462Z","2025-09-23T14:48:37.222Z","","5","false","https://gitlab.com/atlas-datascience/lion/devops/-/work_items/29","ISSUE TITLE: Resarch and construct documentation for deploying and configuring core services supporting Paxium STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:23:51.462Z LABELS: Under Review, aspect::platform ASSIGNEES: pierreo32 DESCRIPTION: Construct documentation that establish a baseline approach for deploying and configuring each of these pieces:  * Open Metadata API * Postgres DB with PostGis Extension * Open Metadata Ingestion (Apache Airflow) * OpenSearch * Open Policy Agent * Redis COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","17","173408270","Resarch and construct documentation for deploying and configuring core services supporting Paxium","closed","pierreo32","pierreo32","Under Review|aspect::platform","","2025-09-12T16:23:51.462Z","2025-09-19T14:58:06.619Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/work_items/17","ISSUE TITLE: Resarch and construct documentation for deploying and configuring core services supporting Paxium STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:23:51.462Z LABELS: Under Review, aspect::platform ASSIGNEES: pierreo32 DESCRIPTION: Construct documentation that establish a baseline approach for deploying and configuring each of these pieces:  * Open Metadata API * Postgres DB with PostGis Extension * Open Metadata Ingestion (Apache Airflow) * OpenSearch * Open Policy Agent * Redis COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","42","173838739","Service Architecture diagram for Paxium core","closed","pierreo32","pierreo32","aspect::platform","","2025-09-12T16:25:46.446Z","2025-09-23T14:57:34.726Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/work_items/42","ISSUE TITLE: Service Architecture diagram for Paxium core STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:25:46.446Z LABELS: aspect::platform ASSIGNEES: pierreo32 DESCRIPTION: Build a services architecture diagram the shows the interconnected relationship between the core components.   * Open Metadata API * Postgres DB with PostGis Extension * Open Metadata Ingestion (Apache Airflow) * OpenSearch * Open Policy Agent * Redis COMMENTS: None"
"atlas-datascience/lion/devops","71509248","30","173674385","Service Architecture diagram for Paxium core","closed","pierreo32","pierreo32","Under Review|aspect::platform","","2025-09-12T16:25:46.446Z","2025-09-23T14:48:39.318Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/work_items/30","ISSUE TITLE: Service Architecture diagram for Paxium core STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:25:46.446Z LABELS: Under Review, aspect::platform ASSIGNEES: pierreo32 DESCRIPTION: Build a services architecture diagram the shows the interconnected relationship between the core components.   * Open Metadata API * Postgres DB with PostGis Extension * Open Metadata Ingestion (Apache Airflow) * OpenSearch * Open Policy Agent * Redis COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","18","173408317","Service Architecture diagram for Paxium core","closed","pierreo32","pierreo32","In Progress|aspect::platform","","2025-09-12T16:25:46.446Z","2025-09-19T17:10:54.717Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/work_items/18","ISSUE TITLE: Service Architecture diagram for Paxium core STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:25:46.446Z LABELS: In Progress, aspect::platform ASSIGNEES: pierreo32 DESCRIPTION: Build a services architecture diagram the shows the interconnected relationship between the core components.   * Open Metadata API * Postgres DB with PostGis Extension * Open Metadata Ingestion (Apache Airflow) * OpenSearch * Open Policy Agent * Redis COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","44","173838744","Relational Architectural Diagram for Core Paxium compenents and AWS","opened","pierreo32","pierreo32","In Progress|aspect::platform","","2025-09-12T16:26:58.091Z","2025-09-23T15:04:10.642Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/work_items/44","ISSUE TITLE: Relational Architectural Diagram for Core Paxium compenents and AWS STATE: opened AUTHOR: pierreo32 CREATED: 2025-09-12T16:26:58.091Z LABELS: In Progress, aspect::platform ASSIGNEES: pierreo32 DESCRIPTION: Architecture diagrams that demonstrate the architectural layout of each core component and the relationship to additional AWS services COMMENTS: None"
"atlas-datascience/lion/devops","71509248","31","173674390","Relational Architectural Diagram for Core Paxium compenents and AWS","closed","pierreo32","pierreo32","In Progress|aspect::platform","","2025-09-12T16:26:58.091Z","2025-09-23T14:48:42.937Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/work_items/31","ISSUE TITLE: Relational Architectural Diagram for Core Paxium compenents and AWS STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:26:58.091Z LABELS: In Progress, aspect::platform ASSIGNEES: pierreo32 DESCRIPTION: Architecture diagrams that demonstrate the architectural layout of each core component and the relationship to additional AWS services COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","19","173408345","Relational Architectural Diagram for Core Paxium compenents and AWS","closed","pierreo32","","Backlog|aspect::platform","","2025-09-12T16:26:58.091Z","2025-09-19T14:58:09.104Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/work_items/19","ISSUE TITLE: Relational Architectural Diagram for Core Paxium compenents and AWS STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:26:58.091Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Architecture diagrams that demonstrate the architectural layout of each core component and the relationship to additional AWS services COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","47","173838776","Network diagram for Master Network and Target VPC Integrations","closed","pierreo32","","Backlog|aspect::platform","","2025-09-12T16:28:25.432Z","2025-09-23T14:49:42.568Z","","2","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/47","ISSUE TITLE: Network diagram for Master Network and Target VPC Integrations STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:28:25.432Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: A Network diagram that shows the traffic in and out of the Master Network routed to the underlying target VPC. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","34","173674475","Network diagram for Master Network and Target VPC Integrations","closed","pierreo32","","Backlog|aspect::platform","","2025-09-12T16:28:25.432Z","2025-09-23T14:49:42.220Z","","2","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/34","ISSUE TITLE: Network diagram for Master Network and Target VPC Integrations STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:28:25.432Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: A Network diagram that shows the traffic in and out of the Master Network routed to the underlying target VPC. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","20","173408381","Network diagram for Master Network and Target VPC Integrations","closed","pierreo32","","Backlog|aspect::platform","","2025-09-12T16:28:25.432Z","2025-09-19T15:00:56.734Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/20","ISSUE TITLE: Network diagram for Master Network and Target VPC Integrations STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:28:25.432Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: A Network diagram that shows the traffic in and out of the Master Network routed to the underlying target VPC. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","43","173838742","Network Diagram for traffic flow of core Paxium components","opened","pierreo32","pierreo32","Under Review|aspect::platform","","2025-09-12T16:31:28.688Z","2025-09-29T18:58:38.332Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/work_items/43","ISSUE TITLE: Network Diagram for traffic flow of core Paxium components STATE: opened AUTHOR: pierreo32 CREATED: 2025-09-12T16:31:28.688Z LABELS: Under Review, aspect::platform ASSIGNEES: pierreo32 DESCRIPTION: A Network diagram that shows the placement of each component into the VPC, the flow of traffic in and out of the target VPC, Security groups with ingress and egress rules. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","32","173674391","Network Diagram for traffic flow of core Paxium components","closed","pierreo32","pierreo32","Sprint Ready|aspect::platform","","2025-09-12T16:31:28.688Z","2025-09-23T14:48:41.120Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/work_items/32","ISSUE TITLE: Network Diagram for traffic flow of core Paxium components STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:31:28.688Z LABELS: Sprint Ready, aspect::platform ASSIGNEES: pierreo32 DESCRIPTION: A Network diagram that shows the placement of each component into the VPC, the flow of traffic in and out of the target VPC, Security groups with ingress and egress rules. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","21","173408460","Network Diagram for traffic flow of core Paxium components","closed","pierreo32","","Backlog|aspect::platform","","2025-09-12T16:31:28.688Z","2025-09-19T14:58:10.206Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/work_items/21","ISSUE TITLE: Network Diagram for traffic flow of core Paxium components STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:31:28.688Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: A Network diagram that shows the placement of each component into the VPC, the flow of traffic in and out of the target VPC, Security groups with ingress and egress rules. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","45","173838748","[Spike] Ticket Creation for Paxium Resource Deploy","opened","pierreo32","pierreo32","Sprint Ready|aspect::platform","","2025-09-12T16:32:43.436Z","2025-09-23T15:08:57.754Z","","1","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/45","ISSUE TITLE: [Spike] Ticket Creation for Paxium Resource Deploy STATE: opened AUTHOR: pierreo32 CREATED: 2025-09-12T16:32:43.436Z LABELS: Sprint Ready, aspect::platform ASSIGNEES: pierreo32 DESCRIPTION:  **Acceptance Criteria:** Creation of new Tickets to deploy Core Paxium components to AWS; COMMENTS: None"
"atlas-datascience/lion/devops","71509248","33","173674421","[Spike] Ticket Creation for Paxium Resource Deploy","closed","pierreo32","pierreo32","Sprint Ready|aspect::platform","","2025-09-12T16:32:43.436Z","2025-09-23T14:48:44.996Z","","1","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/33","ISSUE TITLE: [Spike] Ticket Creation for Paxium Resource Deploy STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:32:43.436Z LABELS: Sprint Ready, aspect::platform ASSIGNEES: pierreo32 DESCRIPTION:  **Acceptance Criteria:** Creation of new Tickets to deploy Core Paxium components to AWS; COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","22","173408482","Ticket Creation for Paxium Resource Deploy","closed","pierreo32","","Backlog|aspect::platform","","2025-09-12T16:32:43.436Z","2025-09-19T14:59:09.230Z","","1","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/22","ISSUE TITLE: Ticket Creation for Paxium Resource Deploy STATE: closed AUTHOR: pierreo32 CREATED: 2025-09-12T16:32:43.436Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Creation of new Tickets to deploy Core Paxium components to AWS; COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","10","173575676","Create Tagging Rego Policy","closed","rprice314","rprice314","aspect::catalog","","2025-09-17T14:11:09.662Z","2025-09-19T18:36:14.028Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/10","ISSUE TITLE: Create Tagging Rego Policy STATE: closed AUTHOR: rprice314 CREATED: 2025-09-17T14:11:09.662Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As a data engineer I need to create a rego policy that can be used to test the security labeling enrichment process   Acceptance Criteria  Policy contains a labeling default Policy contains at least three different criteria that will be used to create mock labels Policy is available in a web assembly module that can be used in a lambda function COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","11","173575858","Enhance OPA Pipeline to Support Multiple WASMs","closed","rprice314","rprice314","aspect::catalog","","2025-09-17T14:15:20.992Z","2025-09-19T18:37:24.538Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/11","ISSUE TITLE: Enhance OPA Pipeline to Support Multiple WASMs STATE: closed AUTHOR: rprice314 CREATED: 2025-09-17T14:15:20.992Z LABELS: aspect::catalog ASSIGNEES: rprice314 DESCRIPTION: As a data engineer I need to modify the opa policy CI pipeline to support multiple wasms so that we can have a wasm for data tagging and another wasm for data attribute filtering  Acceptance Criteria  OPA policy CI pipeline produces two wasms: tagging.wasm and filtering.wasm Both wasms are packaged inside of the lambda layer that the OPA policy CI pipeline creates Both wasms are usable in lambda functions COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-access-broker","74557728","8","173838335","ADR: Access Broker architecture and trade-offs","opened","szahniy","szahniy","Sprint Ready|aspect::access-broker","","2025-09-18T19:16:16.831Z","2025-09-23T14:39:41.934Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-access-broker/-/issues/8","ISSUE TITLE: ADR: Access Broker architecture and trade-offs STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T19:16:16.831Z LABELS: Sprint Ready, aspect::access-broker ASSIGNEES: szahniy DESCRIPTION: Document the decision to isolate link creation in a broker service, alternatives considered, ann plan.  Acceptance criteria: - 5-sentence Executive Summary included. - Alternatives and risks sections complete. - Decision box states status and owners. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","15","173630413","ADR: Access Broker architecture and trade-offs","closed","szahniy","szahniy","Sprint Ready|aspect::access-broker","","2025-09-18T19:16:16.831Z","2025-09-24T13:17:33.887Z","","5","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/15","ISSUE TITLE: ADR: Access Broker architecture and trade-offs STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T19:16:16.831Z LABELS: Sprint Ready, aspect::access-broker ASSIGNEES: szahniy DESCRIPTION: Document the decision to isolate link creation in a broker service, alternatives considered, ann plan.  Acceptance criteria: - 5-sentence Executive Summary included. - Alternatives and risks sections complete. - Decision box states status and owners. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","23","173631931","Implement Domains, Data Products and Assets","closed","johndmema","johndmema","aspect::enrichment","","2025-09-18T20:13:15.486Z","2025-09-19T17:47:25.328Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/23","ISSUE TITLE: Implement Domains, Data Products and Assets STATE: closed AUTHOR: johndmema CREATED: 2025-09-18T20:13:15.486Z LABELS: aspect::enrichment ASSIGNEES: johndmema DESCRIPTION: Integrate data products within domains in OpenMetadata when processing records, register containers as assets under data products using the tenant ID COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","28","173838716","Create OpenNext SSR blueprint for paxium-web behind CloudFront","opened","szahniy","","Backlog|aspect::platform","","2025-09-18T23:45:21.480Z","2025-09-23T14:48:09.608Z","","5","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/28","ISSUE TITLE: Create OpenNext SSR blueprint for paxium-web behind CloudFront STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:45:21.480Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: We provision a reusable SSR deployment pattern for Next.js using OpenNext, CloudFront, and Lambda@Edge. This aligns with WEB/UI strategy and ADR-004 on SSR and SSG route selection. Keeps the path to customer-hosted environments simple and repeatable. See WEB/UI strategy and Paxium Web Implementation Plan. **Acceptance criteria:** - terraform apply creates S3 assets bucket, CloudFront distribution, and Lambda@Edge origin request handler. - Output includes a public URL where /health returns 200. - Default route renders server-side and shows a build version. - README documents inputs, outputs, and rollback steps. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","16","173637203","Create OpenNext SSR blueprint for paxium-web behind CloudFront","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:45:21.480Z","2025-09-23T14:48:08.983Z","","5","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/16","ISSUE TITLE: Create OpenNext SSR blueprint for paxium-web behind CloudFront STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:45:21.480Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: We provision a reusable SSR deployment pattern for Next.js using OpenNext, CloudFront, and Lambda@Edge. This aligns with WEB/UI strategy and ADR-004 on SSR and SSG route selection. Keeps the path to customer-hosted environments simple and repeatable. See WEB/UI strategy and Paxium Web Implementation Plan. **Acceptance criteria:** - terraform apply creates S3 assets bucket, CloudFront distribution, and Lambda@Edge origin request handler. - Output includes a public URL where /health returns 200. - Default route renders server-side and shows a build version. - README documents inputs, outputs, and rollback steps. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","29","173838717","SSG blueprint for paxium-web on S3 + CloudFront","opened","szahniy","","Backlog|aspect::platform","","2025-09-18T23:45:51.433Z","2025-09-23T14:48:12.153Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/29","ISSUE TITLE: SSG blueprint for paxium-web on S3 + CloudFront STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:45:51.433Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: We deliver an SSG pattern for routes that do not need SSR, per ADR-004. This reduces cold starts and cost for static pages while keeping the same IaC ergonomics. See WEB/UI strategy. **Acceptance criteria:** - Static site bucket with OAC, index and 404 configured. - CloudFront distribution created and output URL provided. - npm build && npm export deploys to S3 via CI template. - README includes when to pick SSG vs SSR. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","17","173637212","SSG blueprint for paxium-web on S3 + CloudFront","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:45:51.433Z","2025-09-23T14:48:11.540Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/17","ISSUE TITLE: SSG blueprint for paxium-web on S3 + CloudFront STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:45:51.433Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: We deliver an SSG pattern for routes that do not need SSR, per ADR-004. This reduces cold starts and cost for static pages while keeping the same IaC ergonomics. See WEB/UI strategy. **Acceptance criteria:** - Static site bucket with OAC, index and 404 configured. - CloudFront distribution created and output URL provided. - npm build && npm export deploys to S3 via CI template. - README includes when to pick SSG vs SSR. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","30","173838718","API Gateway HTTP API + Lambda baseline for paxium-api","closed","szahniy","","","","2025-09-18T23:46:12.630Z","2025-09-23T14:48:13.049Z","","","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/30","ISSUE TITLE: API Gateway HTTP API + Lambda baseline for paxium-api STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:46:12.630Z LABELS:  ASSIGNEES:  DESCRIPTION: We stand up a minimal HTTP API Gateway with one Lambda to host the thin API. Routing, logging, and stage variables prepared per Thin API layer doc. **Acceptance criteria:** - /health returns 200 with {status:""""ok""""}. - Access logs enabled with request id and latency. - Stage variable for POLICY_BUNDLE_ID is present. - Terraform outputs include invoke URL. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","18","173637215","API Gateway HTTP API + Lambda baseline for paxium-api","closed","szahniy","","","","2025-09-18T23:46:12.630Z","2025-09-23T14:48:12.865Z","","","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/18","ISSUE TITLE: API Gateway HTTP API + Lambda baseline for paxium-api STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:46:12.630Z LABELS:  ASSIGNEES:  DESCRIPTION: We stand up a minimal HTTP API Gateway with one Lambda to host the thin API. Routing, logging, and stage variables prepared per Thin API layer doc. **Acceptance criteria:** - /health returns 200 with {status:""""ok""""}. - Access logs enabled with request id and latency. - Stage variable for POLICY_BUNDLE_ID is present. - Terraform outputs include invoke URL. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","31","173838720","Centralized Secrets Manager scaffolding for envs","opened","szahniy","","Backlog|aspect::platform","","2025-09-18T23:47:13.508Z","2025-09-23T14:48:15.403Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/31","ISSUE TITLE: Centralized Secrets Manager scaffolding for envs STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:47:13.508Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: We standardize secrets for OM URL and  OIDC issuer. Names and access policies align with our multi-tenant and SSR patterns. **Acceptance criteria:** - Secrets created for om.baseUrl, oidc.issuer. - Read permissions for api/web lambdas in dev and stage. - Example dev values injected by CI for sandbox. - Runbook documents rotation steps. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","19","173637225","Centralized Secrets Manager scaffolding for envs","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:47:13.508Z","2025-09-23T14:48:14.466Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/19","ISSUE TITLE: Centralized Secrets Manager scaffolding for envs STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:47:13.508Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: We standardize secrets for OM URL and  OIDC issuer. Names and access policies align with our multi-tenant and SSR patterns. **Acceptance criteria:** - Secrets created for om.baseUrl, oidc.issuer. - Read permissions for api/web lambdas in dev and stage. - Example dev values injected by CI for sandbox. - Runbook documents rotation steps. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","32","173838722","OPA Wasm Lambda Layer packaging and publish","opened","szahniy","","Backlog|aspect::platform","","2025-09-18T23:47:41.955Z","2025-09-23T14:48:17.199Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/32","ISSUE TITLE: OPA Wasm Lambda Layer packaging and publish STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:47:41.955Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Package @open-policy-agent/opa-wasm and helper into a shared Lambda layer. Consumers are paxium-api and future workers. See OPA Integration Plan. **Acceptance criteria:** - Layer built in CI and published per stage with version tag. - Example function consumes layer and evaluates a mock policy. - README describes versioning and deprecation process. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","20","173637230","OPA Wasm Lambda Layer packaging and publish","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:47:41.955Z","2025-09-23T14:48:16.737Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/20","ISSUE TITLE: OPA Wasm Lambda Layer packaging and publish STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:47:41.955Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Package @open-policy-agent/opa-wasm and helper into a shared Lambda layer. Consumers are paxium-api and future workers. See OPA Integration Plan. **Acceptance criteria:** - Layer built in CI and published per stage with version tag. - Example function consumes layer and evaluates a mock policy. - README describes versioning and deprecation process. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","33","173838724","Policy bundle bucket with versioning and SNS notify","opened","szahniy","","Backlog|aspect::platform","","2025-09-18T23:48:14.350Z","2025-09-23T14:48:19.711Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/33","ISSUE TITLE: Policy bundle bucket with versioning and SNS notify STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:48:14.350Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: We host compiled policy.wasm in a versioned S3 bucket and fan out change notifications. This is the distribution point for policy consumers. **Acceptance criteria:** - Versioned S3 bucket exists with KMS encryption. - SNS topic created and IAM policy allows publish from CI. - Upload of policy.wasm publishes SNS event with metadata. - Example subscriber receives event in dev. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","21","173637233","Policy bundle bucket with versioning and SNS notify","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:48:14.350Z","2025-09-23T14:48:18.784Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/21","ISSUE TITLE: Policy bundle bucket with versioning and SNS notify STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:48:14.350Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: We host compiled policy.wasm in a versioned S3 bucket and fan out change notifications. This is the distribution point for policy consumers. **Acceptance criteria:** - Versioned S3 bucket exists with KMS encryption. - SNS topic created and IAM policy allows publish from CI. - Upload of policy.wasm publishes SNS event with metadata. - Example subscriber receives event in dev. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","34","173838726","Kinesis events-raw stream baseline for audit/events","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:48:38.103Z","2025-09-23T14:48:20.917Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/34","ISSUE TITLE: Kinesis events-raw stream baseline for audit/events STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:48:38.103Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Establish a simple event pipeline for audit and clickstreams. Used later by reporting, out of scope for deep analytics in MVP but required for decision logs. **Acceptance criteria:** - Kinesis stream created with 24h retention and configurable shards. - API can PutRecords in dev behind a feature flag. - Alarm for IteratorAgeHigh configured. - README links to retention and cost guidance. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","22","173637236","Kinesis events-raw stream baseline for audit/events","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:48:38.103Z","2025-09-23T14:48:20.712Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/22","ISSUE TITLE: Kinesis events-raw stream baseline for audit/events STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:48:38.103Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Establish a simple event pipeline for audit and clickstreams. Used later by reporting, out of scope for deep analytics in MVP but required for decision logs. **Acceptance criteria:** - Kinesis stream created with 24h retention and configurable shards. - API can PutRecords in dev behind a feature flag. - Alarm for IteratorAgeHigh configured. - README links to retention and cost guidance. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","35","173838727","Local dev docker-compose: OM + Postgres + OpenSearch","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:49:04.049Z","2025-09-23T14:48:22.273Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/35","ISSUE TITLE: Local dev docker-compose: OM + Postgres + OpenSearch STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:49:04.049Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Provide a one-command local stack to match our wiki architecture: OpenMetadata, Postgres, and OpenSearch. Useful for UI and API developers. **Acceptance criteria:** - docker compose up starts OM, PG, and OS with health checks. - Seed script creates example domains and 10 assets. - Health doc explains URLs, creds, and reset steps. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","23","173637241","Local dev docker-compose: OM + Postgres + OpenSearch","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:49:04.049Z","2025-09-23T14:48:22.053Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/23","ISSUE TITLE: Local dev docker-compose: OM + Postgres + OpenSearch STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:49:04.049Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Provide a one-command local stack to match our wiki architecture: OpenMetadata, Postgres, and OpenSearch. Useful for UI and API developers. **Acceptance criteria:** - docker compose up starts OM, PG, and OS with health checks. - Seed script creates example domains and 10 assets. - Health doc explains URLs, creds, and reset steps. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","36","173838729","GitLab CI templates library adoption guide","opened","szahniy","","Backlog|aspect::platform","","2025-09-18T23:49:34.965Z","2025-09-23T14:48:24.147Z","","2","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/36","ISSUE TITLE: GitLab CI templates library adoption guide STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:49:34.965Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Create a reference .gitlab-ci.yml using @paxium/config shared templates for web and api. Ensures consistent build, test, and deploy. **Acceptance criteria:** - Example pipeline passes lint, typecheck, and unit tests. - Deploy job invokes Terraform for dev. - Guide shows how to opt in from new repos. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","24","173637245","GitLab CI templates library adoption guide","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:49:34.965Z","2025-09-23T14:48:23.111Z","","2","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/24","ISSUE TITLE: GitLab CI templates library adoption guide STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:49:34.965Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Create a reference .gitlab-ci.yml using @paxium/config shared templates for web and api. Ensures consistent build, test, and deploy. **Acceptance criteria:** - Example pipeline passes lint, typecheck, and unit tests. - Deploy job invokes Terraform for dev. - Guide shows how to opt in from new repos. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","37","173838730","OpenSearch ingest pipeline for custom props JSON parse","opened","szahniy","","Backlog|aspect::platform","","2025-09-18T23:50:00.472Z","2025-09-23T14:48:26.082Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/37","ISSUE TITLE: OpenSearch ingest pipeline for custom props JSON parse STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:50:00.472Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Commit an ingest pipeline that parses stringified custom properties to JSON so we can facet and filter. See Search and Discovery. **Acceptance criteria:** - Pipeline JSON committed with test data and unit test. - Reindex job example shows fields promoted as nested JSON. - Verified query by nested field works in dev OS. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","25","173637255","OpenSearch ingest pipeline for custom props JSON parse","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:50:00.472Z","2025-09-23T14:48:25.237Z","","3","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/25","ISSUE TITLE: OpenSearch ingest pipeline for custom props JSON parse STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:50:00.472Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Commit an ingest pipeline that parses stringified custom properties to JSON so we can facet and filter. See Search and Discovery. **Acceptance criteria:** - Pipeline JSON committed with test data and unit test. - Reindex job example shows fields promoted as nested JSON. - Verified query by nested field works in dev OS. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","38","173838731","Edge Connector minimal deployment template for customer account","opened","szahniy","","Backlog|aspect::platform","","2025-09-18T23:50:26.213Z","2025-09-23T14:48:27.844Z","","5","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/38","ISSUE TITLE: Edge Connector minimal deployment template for customer account STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:50:26.213Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Provide an easily consumable template to deploy Edge Connector in a customer AWS account with S3 trigger and SQS buffering. Aligns with Ingestion Gateway plan. **Acceptance criteria:** - Template creates S3, SQS, Lambda, IAM with least privilege. - Env var for Gateway URL is configurable. - Sample upload flows through to Gateway /ingest 202. - Rollback documented. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","26","173637260","Edge Connector minimal deployment template for customer account","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:50:26.213Z","2025-09-23T14:48:27.152Z","","5","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/26","ISSUE TITLE: Edge Connector minimal deployment template for customer account STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:50:26.213Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Provide an easily consumable template to deploy Edge Connector in a customer AWS account with S3 trigger and SQS buffering. Aligns with Ingestion Gateway plan. **Acceptance criteria:** - Template creates S3, SQS, Lambda, IAM with least privilege. - Env var for Gateway URL is configurable. - Sample upload flows through to Gateway /ingest 202. - Rollback documented. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","39","173838732","Blueprint: single-tenant OpenMetadata stack","opened","szahniy","","Backlog|aspect::platform","","2025-09-18T23:51:24.485Z","2025-09-23T14:48:33.701Z","","8","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/39","ISSUE TITLE: Blueprint: single-tenant OpenMetadata stack STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:51:24.485Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Create a minimal OM deployment for pilot customers that require isolation. See OpenMetadata ADRs.  **Acceptance criteria:** - OM UI reachable. - OM configured to use external OIDC. COMMENTS: None"
"atlas-datascience/lion/devops","71509248","27","173637271","Blueprint: single-tenant OpenMetadata stack","closed","szahniy","","Backlog|aspect::platform","","2025-09-18T23:51:24.485Z","2025-09-23T14:48:31.309Z","","8","false","https://gitlab.com/atlas-datascience/lion/devops/-/issues/27","ISSUE TITLE: Blueprint: single-tenant OpenMetadata stack STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:51:24.485Z LABELS: Backlog, aspect::platform ASSIGNEES:  DESCRIPTION: Create a minimal OM deployment for pilot customers that require isolation. See OpenMetadata ADRs.  **Acceptance criteria:** - OM UI reachable. - OM configured to use external OIDC. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","11","173637310","ADR: IdP claims and group-to-role mapping","opened","szahniy","","Ready|aspect::local","","2025-09-18T23:54:03.723Z","2025-09-26T15:15:34.966Z","","5","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/11","ISSUE TITLE: ADR: IdP claims and group-to-role mapping STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:54:03.723Z LABELS: Ready, aspect::local ASSIGNEES:  DESCRIPTION: Document the JWT claim contract from IdP to our services, mapping groups to OM teams and OPA input. Align with Policy Engine and OM integration docs. **Acceptance criteria:** - ADR includes required claims, example token, and mapping table. - Decision clearly states how tenants and features are encoded. - Cross-links to Policy Engine and OpenMetadata pages. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","12","173637333","Keycloak realm export for dev with OIDC clients","opened","szahniy","","Ready|aspect::local","","2025-09-18T23:55:26.237Z","2025-09-26T15:18:10.113Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/12","ISSUE TITLE: Keycloak realm export for dev with OIDC clients STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:55:26.237Z LABELS: Ready, aspect::local ASSIGNEES:  DESCRIPTION: Provide a dev Keycloak realm with configured clients for web and api, scopes for roles, teams, tenant. Shortens onboarding for contributors. **Acceptance criteria:** - Realm JSON export committed and importable. - JWKS and issuer documented. - Test user can sign in to web and receive roles. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","13","173637341","Auth patterns for SSR and browser","opened","szahniy","","Backlog|aspect::local","","2025-09-18T23:55:49.658Z","2025-09-18T23:55:49.658Z","","3","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/13","ISSUE TITLE: Auth patterns for SSR and browser STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:55:49.658Z LABELS: Backlog, aspect::local ASSIGNEES:  DESCRIPTION: Write a guide on token acquisition in SSR and client contexts, including Next middleware and silent refresh patterns. **Acceptance criteria:** - Example SSR middleware injects token server-side. - Browser flow example uses PKCE. - Diagrams show both flows and failure paths. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","12","173637383","Policy bundle CI: lint, test, Wasm build, S3 publish","closed","szahniy","rprice314","Backlog|aspect::policy","","2025-09-18T23:59:05.509Z","2025-09-22T18:00:29.446Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/12","ISSUE TITLE: Policy bundle CI: lint, test, Wasm build, S3 publish STATE: closed AUTHOR: szahniy CREATED: 2025-09-18T23:59:05.509Z LABELS: Backlog, aspect::policy ASSIGNEES: rprice314 DESCRIPTION: Create a CI pipeline to compile Rego to Wasm, run unit tests, and publish to the policy bucket with metadata. See OPA Integration Plan.  **Acceptance criteria:** - policy.wasm and manifest uploaded with version and git sha. - SNS event emitted on successful publish. - Failing policy tests fail the pipeline. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","13","173637391","OPA input schema package in @paxium/schemas","opened","szahniy","","Ready|aspect::policy","","2025-09-18T23:59:53.192Z","2025-09-26T15:13:09.510Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/13","ISSUE TITLE: OPA input schema package in @paxium/schemas STATE: opened AUTHOR: szahniy CREATED: 2025-09-18T23:59:53.192Z LABELS: Ready, aspect::policy ASSIGNEES:  DESCRIPTION: Define a JSON Schema for {user, resource, action, context} to stabilize policy inputs across services. **Acceptance criteria:** - Schema published with semver. - Example inputs validate in CI. - Consumers import version pinned schema. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","14","173637398","Node helper opa-eval for Lambda and Node","opened","szahniy","","Ready|aspect::policy","","2025-09-19T00:00:27.319Z","2025-09-26T15:13:14.858Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/14","ISSUE TITLE: Node helper opa-eval for Lambda and Node STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T00:00:27.319Z LABELS: Ready, aspect::policy ASSIGNEES:  DESCRIPTION: Provide a tiny library that loads Wasm once, caches evaluator, and exposes a simple evaluate(input) API. **Acceptance criteria:** - Unit tests cover allow, deny, and error paths. - Cold and warm performance metrics captured. - Readme shows simple usage. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-policies","74119475","15","173637411","Policy templates for common patterns","opened","szahniy","","Ready|aspect::policy","","2025-09-19T00:01:13.299Z","2025-09-26T15:13:20.222Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-policies/-/issues/15","ISSUE TITLE: Policy templates for common patterns STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T00:01:13.299Z LABELS: Ready, aspect::policy ASSIGNEES:  DESCRIPTION: Ship starter policies for tag-based access, team ownership, and PII block as examples only. This accelerates customer pilots.  **Acceptance criteria:** - Templates compile and pass tests. - Docs show inputs and expected decisions. - Packaged with clear warnings that they are examples. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","14","173637414","OpenMetadata authorizer wired to Wasm","opened","szahniy","","Backlog|aspect::local","","2025-09-19T00:01:44.253Z","2025-09-19T00:01:44.253Z","","8","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/14","ISSUE TITLE: OpenMetadata authorizer wired to Wasm STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T00:01:44.253Z LABELS: Backlog, aspect::local ASSIGNEES:  DESCRIPTION: Implement a custom OM authorizer that evaluates Wasm from S3 and enforces deny by default. See OpenMetadata and Policy Engine docs. **Acceptance criteria:** - OM reads Wasm and hot-reloads on S3 change. - Deny on evaluation failure and emit decision logs. - Integration test covers allow and deny for asset read. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","16","173670632","/v1/auth/self contract and stub","opened","szahniy","","Ready|aspect::api","","2025-09-19T13:56:30.871Z","2025-09-26T15:19:07.709Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/16","ISSUE TITLE: /v1/auth/self contract and stub STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T13:56:30.871Z LABELS: Ready, aspect::api ASSIGNEES:  DESCRIPTION: Define and scaffold the identity endpoint used by UI to hydrate the session. Returns profile, roles, tenant, and feature flags.  **Acceptance criteria:** - OpenAPI spec merged with JSON Schema. - Stub in paxium-api returns static dev payload behind auth. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","17","173670648","/v1/auth/providers IdP discovery","opened","szahniy","","Backlog|aspect::api","","2025-09-19T13:56:53.651Z","2025-09-19T13:56:53.651Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/17","ISSUE TITLE: /v1/auth/providers IdP discovery STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T13:56:53.651Z LABELS: Backlog, aspect::api ASSIGNEES:  DESCRIPTION: An endpoint to list configured IdPs and JWKS for diagnostics and multi-realm support.  **Acceptance criteria:** - Spec merged and stubbed in paxium-api. - Dev realm returned with issuer and jwks_uri. - 401 when unauthenticated. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","18","173670668","Decision logging fields and headers","opened","szahniy","","Ready|aspect::api","","2025-09-19T13:57:18.799Z","2025-09-26T15:08:15.681Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/18","ISSUE TITLE: Decision logging fields and headers STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T13:57:18.799Z LABELS: Ready, aspect::api ASSIGNEES:  DESCRIPTION: Standardize decision ids, policy version headers, and log structure to support audit later. See API Standards.  **Acceptance criteria:** - X-Decision-Id and X-Policy-Version returned on policy-guarded routes. - Logs include decisionId, ruleId, and latencyMs. - Contract tests verify headers exist. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","19","173670786","POST /v1/search with GeoJSON body","opened","szahniy","chris.sonnenberg","Sprint Ready|aspect::api","","2025-09-19T14:00:21.449Z","2025-09-22T15:18:13.213Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/19","ISSUE TITLE: POST /v1/search with GeoJSON body STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:00:21.449Z LABELS: Sprint Ready, aspect::api ASSIGNEES: chris.sonnenberg DESCRIPTION: Add POST variant to handle large AOI bodies that exceed URL limits.  Supports Polygon and MultiPolygon.  **Acceptance criteria:** - Body validated against GeoJSON schema. - Equivalent results to GET for same AOI. - 400 for invalid geometry with helpful message. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","20","173670848","GET /v1/domains browse domains","opened","szahniy","","Backlog|aspect::api","","2025-09-19T14:01:19.649Z","2025-09-19T14:01:19.649Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/20","ISSUE TITLE: GET /v1/domains browse domains STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:01:19.649Z LABELS: Backlog, aspect::api ASSIGNEES:  DESCRIPTION: Surface domain hierarchy from OM to support UI navigation.  **Acceptance criteria:** - Returns list with id, name, parentId. - Empty state covered in tests. - Performance tested on 1k domains. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","21","173670867","POST /v1/access/requests policy decision","opened","szahniy","","Backlog|aspect::api","","2025-09-19T14:01:49.444Z","2025-09-19T14:01:49.444Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/21","ISSUE TITLE: POST /v1/access/requests policy decision STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:01:49.444Z LABELS: Backlog, aspect::api ASSIGNEES:  DESCRIPTION: Allow users to request access and receive a decision with optional next steps.  **Acceptance criteria:** - Returns allow or deny with ruleId. - Emits audit event to Kinesis behind flag. - Contract tests for both outcomes. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","22","173670886","POST /v1/assets/{id}/link presign broker call","opened","szahniy","","Backlog|aspect::api","","2025-09-19T14:02:15.661Z","2025-09-19T14:02:15.661Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/22","ISSUE TITLE: POST /v1/assets/{id}/link presign broker call STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:02:15.661Z LABELS: Backlog, aspect::api ASSIGNEES:  DESCRIPTION: On allow, call Access Broker to obtain a presigned URL or token to open data. Handles deny with normalized 403.  **Acceptance criteria:** - Happy path returns {url, expiresAt, mediaType}. - Deny yields 403 with ruleId from policy. - Integration test with broker stub passes. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-api","74013664","23","173670977","Add audit headers and structured logs","opened","szahniy","","Ready|aspect::api","","2025-09-19T14:04:48.267Z","2025-09-26T15:08:19.928Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-api/-/issues/23","ISSUE TITLE: Add audit headers and structured logs STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:04:48.267Z LABELS: Ready, aspect::api ASSIGNEES:  DESCRIPTION: Add X-Request-Id and decision headers, and log in a structured format for later analysis. **Acceptance criteria:** - Headers present on all guarded routes. - Logs include request id, user id, and decision. - Docs show how to correlate across services. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-access-broker","74557728","4","173671013","Create Access Broker service skeleton and CI","opened","szahniy","","Backlog|aspect::access-broker","","2025-09-19T14:05:57.827Z","2025-09-19T14:06:54.809Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-access-broker/-/issues/4","ISSUE TITLE: Create Access Broker service skeleton and CI STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:05:57.827Z LABELS: Backlog, aspect::access-broker ASSIGNEES:  DESCRIPTION: New microservice that mediates data-access link creation. Initial scope is S3 presign and role assumption.  **Acceptance criteria:** - Lambda handler deployed with /link route. - CI builds, tests, and deploys to dev. - Health endpoint returns 200. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-access-broker","74557728","5","173671096","STS policy shaper for scoped S3 GetObject","opened","szahniy","","Backlog|aspect::access-broker","","2025-09-19T14:08:22.726Z","2025-09-19T14:08:22.726Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-access-broker/-/issues/5","ISSUE TITLE: STS policy shaper for scoped S3 GetObject STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:08:22.726Z LABELS: Backlog, aspect::access-broker ASSIGNEES:  DESCRIPTION: Translate an entitlement into the narrowest STS policy and generate a presigned URL.  **Acceptance criteria:** - Given bucket/key, returns URL with expiry. - Attempt to read unauthorized key fails. - Unit tests cover key prefix and time skew. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-access-broker","74557728","6","173671122","Broker-API contract and shared types","opened","szahniy","","Backlog|aspect::access-broker","","2025-09-19T14:08:47.810Z","2025-09-19T14:08:47.810Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-access-broker/-/issues/6","ISSUE TITLE: Broker-API contract and shared types STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:08:47.810Z LABELS: Backlog, aspect::access-broker ASSIGNEES:  DESCRIPTION: Define the internal request and response between paxium-api and broker using @paxium/schemas.  **Acceptance criteria:** - JSON Schema published and imported by both services. - End-to-end call works in dev with stubbed policy. - Error mapping documented. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-access-broker","74557728","7","173671140","Deny-reason and error mapping","opened","szahniy","","Backlog|aspect::access-broker","","2025-09-19T14:09:12.701Z","2025-09-19T14:09:12.701Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-access-broker/-/issues/7","ISSUE TITLE: Deny-reason and error mapping STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:09:12.701Z LABELS: Backlog, aspect::access-broker ASSIGNEES:  DESCRIPTION: Map policy denials to consistent 403 responses and include ruleId for user feedback.  **Acceptance criteria:** - 403 envelope matches API Standards. - Integration test with deny path passes. - Logs include decision and reason. COMMENTS: None"
"atlas-datascience/lion/project-lion/schemas","71164198","6","173671237","Search response schema with bbox and hasGeo","opened","szahniy","","Ready|aspect::schemas","","2025-09-19T14:11:33.483Z","2025-09-26T15:04:27.025Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/schemas/-/issues/6","ISSUE TITLE: Search response schema with bbox and hasGeo STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:11:33.483Z LABELS: Ready, aspect::schemas ASSIGNEES:  DESCRIPTION: Extend the public schema to standardize geo flags and extent for clients.  **Acceptance criteria:** - JSON Schema published and versioned. - SDK builds against new types. - Contract tests for serialization. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway","70663322","17","173671305","202 Accepted body contract finalization","opened","szahniy","","Backlog|aspect::ingestion-gateway","","2025-09-19T14:12:59.966Z","2025-09-19T14:13:08.161Z","","2","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/ingestion-gateway/-/issues/17","ISSUE TITLE: 202 Accepted body contract finalization STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:12:59.966Z LABELS: Backlog, aspect::ingestion-gateway ASSIGNEES:  DESCRIPTION: Finalize the response envelope for accepted ingest with failed sqsMessageIds and guidance for retries.  **Acceptance criteria:** - JSON Schema merged and versioned. - Integration test simulates partial failures. - Docs updated in API Standards. COMMENTS: None"
"atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client","71561356","24","173671348","Enrichment upsert path hardening","closed","szahniy","","aspect::enrichment","","2025-09-19T14:14:18.885Z","2025-09-19T14:14:27.899Z","","3","false","https://gitlab.com/atlas-datascience/lion/project-lion/data-ingestion-enrichment/open-metadata-client/-/issues/24","ISSUE TITLE: Enrichment upsert path hardening STATE: closed AUTHOR: szahniy CREATED: 2025-09-19T14:14:18.885Z LABELS: aspect::enrichment ASSIGNEES:  DESCRIPTION: Ensure create-then-update of containers is idempotent and retried safely. **Acceptance criteria:** - Retries do not produce duplicates. - Poison-pill detection documented. - Unit tests cover transient failures. COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","17","173671512","[Spike] Policy list and basic editor MVP","opened","szahniy","johndmema","Sprint Ready|aspect::web","","2025-09-19T14:17:05.750Z","2025-09-22T15:19:20.913Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/17","ISSUE TITLE: [Spike] Policy list and basic editor MVP STATE: opened AUTHOR: szahniy CREATED: 2025-09-19T14:17:05.750Z LABELS: Sprint Ready, aspect::web ASSIGNEES: johndmema DESCRIPTION: Read-only list and a text editor with client-side validation for Rego. Publishing triggers CI pipeline stub.  **Acceptance criteria:** - Mock design policy builder (WYSIWYG, select policies, etc.); - Create Figma Template; COMMENTS: None"
"atlas-datascience/lion/project-lion/paxium-web","74013701","18","173785558","Establish Styling architecture for paxium-web and start using","opened","roy.mayfield","johndmema","Ready|aspect::web","","2025-09-22T15:09:13.959Z","2025-09-26T15:09:10.309Z","","","false","https://gitlab.com/atlas-datascience/lion/project-lion/paxium-web/-/issues/18","ISSUE TITLE: Establish Styling architecture for paxium-web and start using STATE: opened AUTHOR: roy.mayfield CREATED: 2025-09-22T15:09:13.959Z LABELS: Ready, aspect::web ASSIGNEES: johndmema DESCRIPTION: As product owner, I want to provide to clients 1. Light and Dark Themes using Tailwind 2. Capability to customize primary theme of client environments to which paxium is going to be integrated with. This is ussually 3-6 styles, does not have to be automated (i.e. via UI), just easy to configure in CSS.  Acceptance criteria: 1. Light/Dark setting in UI cog (upper left, next to user profile icon, web de-facto) 2. GLobal.css with principal styles in a section 3. (1) works near-real-time when applied. COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","46","173838769","[Spike] Ticket Creation for CICD","opened","szahniy","alain.atemnkeng","Sprint Ready|aspect::platform","","2025-09-22T15:15:27.154Z","2025-09-23T14:49:29.098Z","","1","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/46","ISSUE TITLE: [Spike] Ticket Creation for CICD STATE: opened AUTHOR: szahniy CREATED: 2025-09-22T15:15:27.154Z LABELS: Sprint Ready, aspect::platform ASSIGNEES: alain.atemnkeng DESCRIPTION: No description COMMENTS: None"
"atlas-datascience/lion/cicd/containers/utility/container-tools","69667755","5","173795343","SPIKE - Multi Platform Build","opened","freedomgb","alain.atemnkeng","","","2025-09-22T17:24:49.354Z","2025-09-26T14:37:51.650Z","","","false","https://gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools/-/issues/5","ISSUE TITLE: SPIKE - Multi Platform Build STATE: opened AUTHOR: freedomgb CREATED: 2025-09-22T17:24:49.354Z LABELS:  ASSIGNEES: alain.atemnkeng DESCRIPTION: As a Platform Engineer I need a way to support multiple processor platforms (i.e. linux/arm64, linux/amd64) and simplify the management of the image manifests.  This issue is to evaluate using Docker Build Kit on Gitlab to build and test a multi platform image. The container-tools image is ideal for testing this scenario as it provides some of the underpinnings for other container builds as well as testing and signing.  ![SPIKE_-_Docker_Build_for_multi_platform](/uploads/f21278e1e477f0ca3af420e897764954/SPIKE_-_Docker_Build_for_multi_platform.png)  Success Criteria: - A local .gitlab-ci.yml file orchestrates the build and test - A new branch with proposed changes for the container build template is created and referenced [catalog/containers](https://gitlab.com/atlas-datascience/lion/cicd) - Existing pipeline components are used to test the built images [catalog/containers](https://gitlab.com/atlas-datascience/lion/cicd/catalog/containers/-/blob/main/templates/structure_test.yml?ref_type=heads) - (yes/no) buildx can be used to build basic multi-platform images COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/containers","69659122","3","173795313","SPIKE - Multi Platform Build","closed","freedomgb","","","","2025-09-22T17:24:49.354Z","2025-09-22T17:48:11.904Z","","","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/containers/-/issues/3","ISSUE TITLE: SPIKE - Multi Platform Build STATE: closed AUTHOR: freedomgb CREATED: 2025-09-22T17:24:49.354Z LABELS:  ASSIGNEES:  DESCRIPTION: As a Platform Engineer I need a way to support multiple processor platforms (i.e. linux/arm64, linux/amd64) and simplify the management of the image manifests.  This issue is to evaluate using Docker Build Kit on Gitlab to build and test a multi platform image. The container-tools image is ideal for testing this scenario as it provides some of the underpinnings for other container builds as well as testing and signing.  ![SPIKE_-_Docker_Build_for_multi_platform](/uploads/b45718757a89193d532cadb43272f2c6/SPIKE_-_Docker_Build_for_multi_platform.png)  Success Criteria: - A local .gitlab-ci.yml file orchestrates the build and test - A new branch with proposed changes for the container build template is created and referenced [catalog/containers](https://gitlab.com/atlas-datascience/lion/cicd) - Existing pipeline components are used to test the built images [catalog/containers](https://gitlab.com/atlas-datascience/lion/cicd/catalog/containers/-/blob/main/templates/structure_test.yml?ref_type=heads) - (yes/no) buildx can be used to build basic multi-platform images COMMENTS: None"
"atlas-datascience/lion/cicd/containers/utility/container-tools","69667755","2","173794603","SPIKE - Multi Platform Build","closed","freedomgb","","","","2025-09-22T17:24:49.354Z","2025-09-22T17:47:26.521Z","","","false","https://gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools/-/issues/2","ISSUE TITLE: SPIKE - Multi Platform Build STATE: closed AUTHOR: freedomgb CREATED: 2025-09-22T17:24:49.354Z LABELS:  ASSIGNEES:  DESCRIPTION: As a Platform Engineer I need a way to support multiple processor platforms (i.e. linux/arm64, linux/amd64) and simplify the management of the image manifests.  This issue is to evaluate using Docker Build Kit on Gitlab to build and test a multi platform image. The container-tools image is ideal for testing this scenario as it provides some of the underpinnings for other container builds as well as testing and signing.  ![SPIKE_-_Docker_Build_for_multi_platform](/uploads/6891b0f990c9298ebf39ac7329416db4/SPIKE_-_Docker_Build_for_multi_platform.png)  Success Criteria: - A local .gitlab-ci.yml file orchestrates the build and test - A new branch with proposed changes for the container build template is created and referenced [catalog/containers](https://gitlab.com/atlas-datascience/lion/cicd) - Existing pipeline components are used to test the built images [catalog/containers](https://gitlab.com/atlas-datascience/lion/cicd/catalog/containers/-/blob/main/templates/structure_test.yml?ref_type=heads) - (yes/no) buildx can be used to build basic multi-platform images COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/containers","69659122","2","173795287","Image Manifest Component Template","opened","freedomgb","alain.atemnkeng","","","2025-09-22T17:33:35.956Z","2025-09-26T14:38:12.410Z","","","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/containers/-/issues/2","ISSUE TITLE: Image Manifest Component Template STATE: opened AUTHOR: freedomgb CREATED: 2025-09-22T17:33:35.956Z LABELS:  ASSIGNEES: alain.atemnkeng DESCRIPTION: As a Platform Engineer I need to define a reusable Gitlab Pipeline Component that takes multiple image references and combines those into a single image manifest with the target project. There are a couple of examples as to when this component would be advantageous to have: 1. When importing container images from a public repository and staging them within a local repository. 2. When needing to segregate build jobs for a multi-platform image due to complexity or processing requirements.  Success Criteria: 1. Component follows Gitlab design guidance for template components. 2. Spec inputs includes an array type for passing multiple image references. 3. The job adds each image reference to the image manifest.  Similar to the following example: ``` docker buildx imagetools \ create -t registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:latest \ -t registry.gitlab.com/atlas-datascience/lion/cicd/containers/u tility/container-tools:1.0.0 \ -t registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:1.0 \ -t registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:1 \ registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:latest-arm64 \ registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:latest-amd64  ``` COMMENTS: None"
"atlas-datascience/lion/cicd/containers/utility/container-tools","69667755","3","173794850","Image Manifest Component Template","closed","freedomgb","","","","2025-09-22T17:33:35.956Z","2025-09-22T17:46:40.807Z","","","false","https://gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools/-/issues/3","ISSUE TITLE: Image Manifest Component Template STATE: closed AUTHOR: freedomgb CREATED: 2025-09-22T17:33:35.956Z LABELS:  ASSIGNEES:  DESCRIPTION: As a Platform Engineer I need to define a reusable Gitlab Pipeline Component that takes multiple image references and combines those into a single image manifest with the target project. There are a couple of examples as to when this component would be advantageous to have: 1. When importing container images from a public repository and staging them within a local repository. 2. When needing to segregate build jobs for a multi-platform image due to complexity or processing requirements.  Success Criteria: 1. Component follows Gitlab design guidance for template components. 2. Spec inputs includes an array type for passing multiple image references. 3. The job adds each image reference to the image manifest.  Similar to the following example: ``` docker buildx imagetools \ create -t registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:latest \ -t registry.gitlab.com/atlas-datascience/lion/cicd/containers/u tility/container-tools:1.0.0 \ -t registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:1.0 \ -t registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:1 \ registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:latest-arm64 \ registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:latest-amd64  ``` COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/containers","69659122","1","173795238","Sign Image Manifest","opened","freedomgb","alain.atemnkeng","","","2025-09-22T17:44:40.165Z","2025-09-22T17:46:58.938Z","","","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/containers/-/issues/1","ISSUE TITLE: Sign Image Manifest STATE: opened AUTHOR: freedomgb CREATED: 2025-09-22T17:44:40.165Z LABELS:  ASSIGNEES: alain.atemnkeng DESCRIPTION: As a Platform Engineer I need to ensure the integrity of all built images used in development and delivery.  Success Criteria: - The image signature will be uploaded to the project container registry - The image signature will use the image digest from the image manifest to sign the image. - The image signature will be signed using techniques for keyless signing. - The key will come from Gitlab auth. - Additional tags will be associated to the signature so that any tag tied to the digest can be validated.  References: [Keyless Signing](https://docs.gitlab.com/ci/yaml/signing_examples/)  Get Image Digest: ``` docker buildx imagetools inspect --format='{{json .Manifest}}' registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:latest | jq '.digest' ```  [Appending Annotations (tags) to signature with Cosign](https://gitlab.com/atlas-datascience/lion/cicd/catalog/containers/-/blob/main/templates/release.yml?ref_type=heads) COMMENTS: None"
"atlas-datascience/lion/cicd/containers/utility/container-tools","69667755","4","173795177","Sign Image Manifest","closed","freedomgb","","","","2025-09-22T17:44:40.165Z","2025-09-22T17:46:09.402Z","","","false","https://gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools/-/issues/4","ISSUE TITLE: Sign Image Manifest STATE: closed AUTHOR: freedomgb CREATED: 2025-09-22T17:44:40.165Z LABELS:  ASSIGNEES:  DESCRIPTION: As a Platform Engineer I need to ensure the integrity of all built images used in development and delivery.  Success Criteria: - The image signature will be uploaded to the project container registry - The image signature will use the image digest from the image manifest to sign the image. - The image signature will be signed using techniques for keyless signing. - The key will come from Gitlab auth. - Additional tags will be associated to the signature so that any tag tied to the digest can be validated.  References: [Keyless Signing](https://docs.gitlab.com/ci/yaml/signing_examples/)  Get Image Digest: ``` docker buildx imagetools inspect --format='{{json .Manifest}}' registry.gitlab.com/atlas-datascience/lion/cicd/containers/utility/container-tools:latest | jq '.digest' ```  [Appending Annotations (tags) to signature with Cosign](https://gitlab.com/atlas-datascience/lion/cicd/catalog/containers/-/blob/main/templates/release.yml?ref_type=heads) COMMENTS: None"
"atlas-datascience/lion/cicd/catalog/containers","69659122","4","173795611","Add Test for Dive Component","closed","freedomgb","alain.atemnkeng","","","2025-09-22T17:56:11.691Z","2025-09-24T18:44:34.046Z","","","false","https://gitlab.com/atlas-datascience/lion/cicd/catalog/containers/-/issues/4","ISSUE TITLE: Add Test for Dive Component STATE: closed AUTHOR: freedomgb CREATED: 2025-09-22T17:56:11.691Z LABELS:  ASSIGNEES: alain.atemnkeng DESCRIPTION: As a Platform Engineer I need to ensure that the Dive image validation component works in the context of the CI/CD pipeline.  Update this projects tests by incorporating dive into the [test template](https://gitlab.com/atlas-datascience/lion/cicd/catalog/containers/-/blob/main/test/component-tests.yml?ref_type=heads)  Success Criteria: - Dive Component is referenced in test template - The dive tests successfully execute - The dive test is configured to show success and failure COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf","74338957","5","173798904","Extract Geospatial Data from Adobe ISO 30000-2 Encoded PDFs","opened","rcross3","","aspect::edge-connector","","2025-09-22T19:28:08.770Z","2025-09-22T19:28:22.987Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf/-/issues/5","ISSUE TITLE: Extract Geospatial Data from Adobe ISO 30000-2 Encoded PDFs STATE: opened AUTHOR: rcross3 CREATED: 2025-09-22T19:28:08.770Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: **A/C**  Build Extractor Skeleton  Build and test extraction logic to handle Single Page Single Layer Variations of the Adobe Encoding  Handle Case when no WKT COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf","74338957","6","173798976","Extract Geospatial Data from OGC """"Best Practice"""" Encoded PDFs","opened","rcross3","","aspect::edge-connector","","2025-09-22T19:31:16.668Z","2025-09-22T19:31:28.788Z","","5","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf/-/issues/6","ISSUE TITLE: Extract Geospatial Data from OGC """"Best Practice"""" Encoded PDFs STATE: opened AUTHOR: rcross3 CREATED: 2025-09-22T19:31:16.668Z LABELS: aspect::edge-connector ASSIGNEES:  DESCRIPTION: **A/C**  Handle Single Page SL Variations of OGC Encoded PDFs  Expand Edge Conn Event Schema Mappings for any unique data shapes of CRS COMMENTS: None"
"atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf","74338957","7","173799043","Extract Geospatial Data from PDF/XML Pair - FGDC-CSDGM Encoding","opened","rcross3","","","","2025-09-22T19:35:07.965Z","2025-09-22T19:35:07.965Z","","8","false","https://gitlab.com/atlas-datascience/lion/project-lion/edge-connectors/edge-connector-geopdf/-/issues/7","ISSUE TITLE: Extract Geospatial Data from PDF/XML Pair - FGDC-CSDGM Encoding STATE: opened AUTHOR: rcross3 CREATED: 2025-09-22T19:35:07.965Z LABELS:  ASSIGNEES:  DESCRIPTION: **A/C**  Search for auxilary xml files with retry mechanism when .pdf is being processed  Build and test extraction algorithm of PDF/XML pair case with XML encoding COMMENTS: None"
"atlas-datascience/lion/local-environment","70509031","48","174015397","[ADR] Domain hierarchy","opened","szahniy","","Backlog|Parking Lot","","2025-09-26T15:20:08.580Z","2025-09-26T15:23:23.736Z","","","false","https://gitlab.com/atlas-datascience/lion/local-environment/-/issues/48","ISSUE TITLE: [ADR] Domain hierarchy STATE: opened AUTHOR: szahniy CREATED: 2025-09-26T15:20:08.580Z LABELS: Backlog, Parking Lot ASSIGNEES:  DESCRIPTION: We need to create organizational structure with defined Organization->Domain->Product relations.  Acceptance criteria: - ADR Created and define organizational structure COMMENTS: None"
"atlas-datascience/lion/devops","71509248","36","174113371","Terraform template build out and validation testing for Paxium core services","opened","pierreo32","","Ready","","2025-09-29T18:58:37.670Z","2025-09-29T19:09:42.578Z","","","false","https://gitlab.com/atlas-datascience/lion/devops/-/work_items/36","ISSUE TITLE: Terraform template build out and validation testing for Paxium core services STATE: opened AUTHOR: pierreo32 CREATED: 2025-09-29T18:58:37.670Z LABELS: Ready ASSIGNEES:  DESCRIPTION: Using the template provided here https://github.com/open-metadata/terraform-aws-openmetadata/blob/1.9.7/examples/complete/README.md including customizations that will need to be made to fit reviewed architectural diagram https://lucid.app/lucidchart/06bc681e-195e-46be-9085-a6b8c3d41f18/edit?viewport_loc=-3154%2C-1479%2C5469%2C3020%2C0_0&invitationId=inv_ab6c574f-1d6e-4457-8ab2-63b0b323bddf  Terrafrom built out will creates:  - One EKS cluster, with aws-ebs-csi-driver and aws-efs-csi-driver addons. - One node group for the EKS cluster. - Two IAM roles to use with the EKS cluster and the node group. - One KMS_KEY to encrypt resources and volumes. - One OpenSearch domain to use as search engine with a Security Group allowing inbound connections from the EKS nodes. - Two Aurora instances with Multi-Zone and deletion protection enabled with Security Groups allowing inbound connections from the EKS nodes. Will be used by OpenMetadata and Airflow. - Two EFS volumes, each one with mount targets on the private subnets, and a Security Group allowing inbound connections from the EKS nodes. Will be used by Airflow dags and logs. Also, it deploys:  - Metrics Server on the EKS cluster via Helm. - Three encrypted Kubernetes Storage Class to use as default option and with both EFS volumes. - One Kubernetes namespace to deploy the resouces. - Kubernetes Secrets to store database credentials, Airflow authentication, and extra environment variables to use with OpenMetadata. - Our OpenMetadata dependencies Helm chart only with Airflow enabled. - OpenMetadata via Helm  Validation testing after deployment for 1. Openmetadata API 2. Apache Airflow 3. OpenSearch  Ensuring all AWS Resources deployed are set properly for the above applications to work as expected. COMMENTS: None"
